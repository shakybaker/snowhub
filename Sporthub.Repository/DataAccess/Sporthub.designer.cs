#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sporthub.Repository.DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="sporthub")]
	public partial class SporthubDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUserSocialNetwork(UserSocialNetwork instance);
    partial void UpdateUserSocialNetwork(UserSocialNetwork instance);
    partial void DeleteUserSocialNetwork(UserSocialNetwork instance);
    partial void InsertCheckIn(CheckIn instance);
    partial void UpdateCheckIn(CheckIn instance);
    partial void DeleteCheckIn(CheckIn instance);
    partial void InsertCodeDecode(CodeDecode instance);
    partial void UpdateCodeDecode(CodeDecode instance);
    partial void DeleteCodeDecode(CodeDecode instance);
    partial void InsertConfigBoardBindingType(ConfigBoardBindingType instance);
    partial void UpdateConfigBoardBindingType(ConfigBoardBindingType instance);
    partial void DeleteConfigBoardBindingType(ConfigBoardBindingType instance);
    partial void InsertConfigCuisine(ConfigCuisine instance);
    partial void UpdateConfigCuisine(ConfigCuisine instance);
    partial void DeleteConfigCuisine(ConfigCuisine instance);
    partial void InsertConfigManufacturerType(ConfigManufacturerType instance);
    partial void UpdateConfigManufacturerType(ConfigManufacturerType instance);
    partial void DeleteConfigManufacturerType(ConfigManufacturerType instance);
    partial void InsertConfigPostStatus(ConfigPostStatus instance);
    partial void UpdateConfigPostStatus(ConfigPostStatus instance);
    partial void DeleteConfigPostStatus(ConfigPostStatus instance);
    partial void InsertConfigResortLinkType(ConfigResortLinkType instance);
    partial void UpdateConfigResortLinkType(ConfigResortLinkType instance);
    partial void DeleteConfigResortLinkType(ConfigResortLinkType instance);
    partial void InsertConfigSportType(ConfigSportType instance);
    partial void UpdateConfigSportType(ConfigSportType instance);
    partial void DeleteConfigSportType(ConfigSportType instance);
    partial void InsertConfigThreadStatus(ConfigThreadStatus instance);
    partial void UpdateConfigThreadStatus(ConfigThreadStatus instance);
    partial void DeleteConfigThreadStatus(ConfigThreadStatus instance);
    partial void InsertContinent(Continent instance);
    partial void UpdateContinent(Continent instance);
    partial void DeleteContinent(Continent instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertForum(Forum instance);
    partial void UpdateForum(Forum instance);
    partial void DeleteForum(Forum instance);
    partial void InsertLinkManufacturerManufacturerType(LinkManufacturerManufacturerType instance);
    partial void UpdateLinkManufacturerManufacturerType(LinkManufacturerManufacturerType instance);
    partial void DeleteLinkManufacturerManufacturerType(LinkManufacturerManufacturerType instance);
    partial void InsertLinkResortMountainRange(LinkResortMountainRange instance);
    partial void UpdateLinkResortMountainRange(LinkResortMountainRange instance);
    partial void DeleteLinkResortMountainRange(LinkResortMountainRange instance);
    partial void InsertLinkResortPicture(LinkResortPicture instance);
    partial void UpdateLinkResortPicture(LinkResortPicture instance);
    partial void DeleteLinkResortPicture(LinkResortPicture instance);
    partial void InsertLinkResortProCon(LinkResortProCon instance);
    partial void UpdateLinkResortProCon(LinkResortProCon instance);
    partial void DeleteLinkResortProCon(LinkResortProCon instance);
    partial void InsertLinkResortRegion(LinkResortRegion instance);
    partial void UpdateLinkResortRegion(LinkResortRegion instance);
    partial void DeleteLinkResortRegion(LinkResortRegion instance);
    partial void InsertLinkResortSkiArea(LinkResortSkiArea instance);
    partial void UpdateLinkResortSkiArea(LinkResortSkiArea instance);
    partial void DeleteLinkResortSkiArea(LinkResortSkiArea instance);
    partial void InsertLinkResortThread(LinkResortThread instance);
    partial void UpdateLinkResortThread(LinkResortThread instance);
    partial void DeleteLinkResortThread(LinkResortThread instance);
    partial void InsertLinkResortUser(LinkResortUser instance);
    partial void UpdateLinkResortUser(LinkResortUser instance);
    partial void DeleteLinkResortUser(LinkResortUser instance);
    partial void InsertLinkSkiAreaCountry(LinkSkiAreaCountry instance);
    partial void UpdateLinkSkiAreaCountry(LinkSkiAreaCountry instance);
    partial void DeleteLinkSkiAreaCountry(LinkSkiAreaCountry instance);
    partial void InsertLinkUserSportType(LinkUserSportType instance);
    partial void UpdateLinkUserSportType(LinkUserSportType instance);
    partial void DeleteLinkUserSportType(LinkUserSportType instance);
    partial void InsertManufacturer(Manufacturer instance);
    partial void UpdateManufacturer(Manufacturer instance);
    partial void DeleteManufacturer(Manufacturer instance);
    partial void InsertMountainRange(MountainRange instance);
    partial void UpdateMountainRange(MountainRange instance);
    partial void DeleteMountainRange(MountainRange instance);
    partial void InsertNewsFeed(NewsFeed instance);
    partial void UpdateNewsFeed(NewsFeed instance);
    partial void DeleteNewsFeed(NewsFeed instance);
    partial void InsertPicture(Picture instance);
    partial void UpdatePicture(Picture instance);
    partial void DeletePicture(Picture instance);
    partial void InsertPost(Post instance);
    partial void UpdatePost(Post instance);
    partial void DeletePost(Post instance);
    partial void InsertProCon(ProCon instance);
    partial void UpdateProCon(ProCon instance);
    partial void DeleteProCon(ProCon instance);
    partial void InsertRegion(Region instance);
    partial void UpdateRegion(Region instance);
    partial void DeleteRegion(Region instance);
    partial void InsertResort(Resort instance);
    partial void UpdateResort(Resort instance);
    partial void DeleteResort(Resort instance);
    partial void InsertResortAlia(ResortAlia instance);
    partial void UpdateResortAlia(ResortAlia instance);
    partial void DeleteResortAlia(ResortAlia instance);
    partial void InsertResortLink(ResortLink instance);
    partial void UpdateResortLink(ResortLink instance);
    partial void DeleteResortLink(ResortLink instance);
    partial void InsertResortRating(ResortRating instance);
    partial void UpdateResortRating(ResortRating instance);
    partial void DeleteResortRating(ResortRating instance);
    partial void InsertResortReview(ResortReview instance);
    partial void UpdateResortReview(ResortReview instance);
    partial void DeleteResortReview(ResortReview instance);
    partial void InsertResortStat(ResortStat instance);
    partial void UpdateResortStat(ResortStat instance);
    partial void DeleteResortStat(ResortStat instance);
    partial void InsertResortTouristOffice(ResortTouristOffice instance);
    partial void UpdateResortTouristOffice(ResortTouristOffice instance);
    partial void DeleteResortTouristOffice(ResortTouristOffice instance);
    partial void InsertRestaurantBar(RestaurantBar instance);
    partial void UpdateRestaurantBar(RestaurantBar instance);
    partial void DeleteRestaurantBar(RestaurantBar instance);
    partial void InsertScrapeResortStat(ScrapeResortStat instance);
    partial void UpdateScrapeResortStat(ScrapeResortStat instance);
    partial void DeleteScrapeResortStat(ScrapeResortStat instance);
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InsertSkiArea(SkiArea instance);
    partial void UpdateSkiArea(SkiArea instance);
    partial void DeleteSkiArea(SkiArea instance);
    partial void InsertSkiBoardModel(SkiBoardModel instance);
    partial void UpdateSkiBoardModel(SkiBoardModel instance);
    partial void DeleteSkiBoardModel(SkiBoardModel instance);
    partial void InsertThread(Thread instance);
    partial void UpdateThread(Thread instance);
    partial void DeleteThread(Thread instance);
    partial void InsertUserRole(UserRole instance);
    partial void UpdateUserRole(UserRole instance);
    partial void DeleteUserRole(UserRole instance);
    partial void InsertActivity(Activity instance);
    partial void UpdateActivity(Activity instance);
    partial void DeleteActivity(Activity instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertAirport(Airport instance);
    partial void UpdateAirport(Airport instance);
    partial void DeleteAirport(Airport instance);
    partial void InsertReviewUsefulness(ReviewUsefulness instance);
    partial void UpdateReviewUsefulness(ReviewUsefulness instance);
    partial void DeleteReviewUsefulness(ReviewUsefulness instance);
    #endregion
		
		public SporthubDataContext() : 
				base(global::Sporthub.Repository.Properties.Settings.Default.sporthubConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SporthubDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SporthubDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SporthubDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SporthubDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<UserSocialNetwork> UserSocialNetworks
		{
			get
			{
				return this.GetTable<UserSocialNetwork>();
			}
		}
		
		public System.Data.Linq.Table<CheckIn> CheckIns
		{
			get
			{
				return this.GetTable<CheckIn>();
			}
		}
		
		public System.Data.Linq.Table<CodeDecode> CodeDecodes
		{
			get
			{
				return this.GetTable<CodeDecode>();
			}
		}
		
		public System.Data.Linq.Table<ConfigBoardBindingType> ConfigBoardBindingTypes
		{
			get
			{
				return this.GetTable<ConfigBoardBindingType>();
			}
		}
		
		public System.Data.Linq.Table<ConfigCuisine> ConfigCuisines
		{
			get
			{
				return this.GetTable<ConfigCuisine>();
			}
		}
		
		public System.Data.Linq.Table<ConfigManufacturerType> ConfigManufacturerTypes
		{
			get
			{
				return this.GetTable<ConfigManufacturerType>();
			}
		}
		
		public System.Data.Linq.Table<ConfigPostStatus> ConfigPostStatus
		{
			get
			{
				return this.GetTable<ConfigPostStatus>();
			}
		}
		
		public System.Data.Linq.Table<ConfigResortLinkType> ConfigResortLinkTypes
		{
			get
			{
				return this.GetTable<ConfigResortLinkType>();
			}
		}
		
		public System.Data.Linq.Table<ConfigSportType> ConfigSportTypes
		{
			get
			{
				return this.GetTable<ConfigSportType>();
			}
		}
		
		public System.Data.Linq.Table<ConfigThreadStatus> ConfigThreadStatus
		{
			get
			{
				return this.GetTable<ConfigThreadStatus>();
			}
		}
		
		public System.Data.Linq.Table<Continent> Continents
		{
			get
			{
				return this.GetTable<Continent>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<Forum> Forums
		{
			get
			{
				return this.GetTable<Forum>();
			}
		}
		
		public System.Data.Linq.Table<LinkManufacturerManufacturerType> LinkManufacturerManufacturerTypes
		{
			get
			{
				return this.GetTable<LinkManufacturerManufacturerType>();
			}
		}
		
		public System.Data.Linq.Table<LinkResortMountainRange> LinkResortMountainRanges
		{
			get
			{
				return this.GetTable<LinkResortMountainRange>();
			}
		}
		
		public System.Data.Linq.Table<LinkResortPicture> LinkResortPictures
		{
			get
			{
				return this.GetTable<LinkResortPicture>();
			}
		}
		
		public System.Data.Linq.Table<LinkResortProCon> LinkResortProCons
		{
			get
			{
				return this.GetTable<LinkResortProCon>();
			}
		}
		
		public System.Data.Linq.Table<LinkResortRegion> LinkResortRegions
		{
			get
			{
				return this.GetTable<LinkResortRegion>();
			}
		}
		
		public System.Data.Linq.Table<LinkResortSkiArea> LinkResortSkiAreas
		{
			get
			{
				return this.GetTable<LinkResortSkiArea>();
			}
		}
		
		public System.Data.Linq.Table<LinkResortThread> LinkResortThreads
		{
			get
			{
				return this.GetTable<LinkResortThread>();
			}
		}
		
		public System.Data.Linq.Table<LinkResortUser> LinkResortUsers
		{
			get
			{
				return this.GetTable<LinkResortUser>();
			}
		}
		
		public System.Data.Linq.Table<LinkSkiAreaCountry> LinkSkiAreaCountries
		{
			get
			{
				return this.GetTable<LinkSkiAreaCountry>();
			}
		}
		
		public System.Data.Linq.Table<LinkUserSportType> LinkUserSportTypes
		{
			get
			{
				return this.GetTable<LinkUserSportType>();
			}
		}
		
		public System.Data.Linq.Table<LinkUserUser> LinkUserUsers
		{
			get
			{
				return this.GetTable<LinkUserUser>();
			}
		}
		
		public System.Data.Linq.Table<Manufacturer> Manufacturers
		{
			get
			{
				return this.GetTable<Manufacturer>();
			}
		}
		
		public System.Data.Linq.Table<MountainRange> MountainRanges
		{
			get
			{
				return this.GetTable<MountainRange>();
			}
		}
		
		public System.Data.Linq.Table<NewsFeed> NewsFeeds
		{
			get
			{
				return this.GetTable<NewsFeed>();
			}
		}
		
		public System.Data.Linq.Table<Picture> Pictures
		{
			get
			{
				return this.GetTable<Picture>();
			}
		}
		
		public System.Data.Linq.Table<Post> Posts
		{
			get
			{
				return this.GetTable<Post>();
			}
		}
		
		public System.Data.Linq.Table<ProCon> ProCons
		{
			get
			{
				return this.GetTable<ProCon>();
			}
		}
		
		public System.Data.Linq.Table<Region> Regions
		{
			get
			{
				return this.GetTable<Region>();
			}
		}
		
		public System.Data.Linq.Table<Resort> Resorts
		{
			get
			{
				return this.GetTable<Resort>();
			}
		}
		
		public System.Data.Linq.Table<ResortAlia> ResortAlias
		{
			get
			{
				return this.GetTable<ResortAlia>();
			}
		}
		
		public System.Data.Linq.Table<ResortLink> ResortLinks
		{
			get
			{
				return this.GetTable<ResortLink>();
			}
		}
		
		public System.Data.Linq.Table<ResortRating> ResortRatings
		{
			get
			{
				return this.GetTable<ResortRating>();
			}
		}
		
		public System.Data.Linq.Table<ResortReview> ResortReviews
		{
			get
			{
				return this.GetTable<ResortReview>();
			}
		}
		
		public System.Data.Linq.Table<ResortStat> ResortStats
		{
			get
			{
				return this.GetTable<ResortStat>();
			}
		}
		
		public System.Data.Linq.Table<ResortTouristOffice> ResortTouristOffices
		{
			get
			{
				return this.GetTable<ResortTouristOffice>();
			}
		}
		
		public System.Data.Linq.Table<RestaurantBar> RestaurantBars
		{
			get
			{
				return this.GetTable<RestaurantBar>();
			}
		}
		
		public System.Data.Linq.Table<ScrapeResortStat> ScrapeResortStats
		{
			get
			{
				return this.GetTable<ScrapeResortStat>();
			}
		}
		
		public System.Data.Linq.Table<Service> Services
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<SkiArea> SkiAreas
		{
			get
			{
				return this.GetTable<SkiArea>();
			}
		}
		
		public System.Data.Linq.Table<SkiBoardModel> SkiBoardModels
		{
			get
			{
				return this.GetTable<SkiBoardModel>();
			}
		}
		
		public System.Data.Linq.Table<Thread> Threads
		{
			get
			{
				return this.GetTable<Thread>();
			}
		}
		
		public System.Data.Linq.Table<UserRole> UserRoles
		{
			get
			{
				return this.GetTable<UserRole>();
			}
		}
		
		public System.Data.Linq.Table<Activity> Activities
		{
			get
			{
				return this.GetTable<Activity>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Airport> Airports
		{
			get
			{
				return this.GetTable<Airport>();
			}
		}
		
		public System.Data.Linq.Table<ReviewUsefulness> ReviewUsefulnesses
		{
			get
			{
				return this.GetTable<ReviewUsefulness>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserSocialNetwork")]
	public partial class UserSocialNetwork : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idNetworkLink;
		
		private string _ThisTableNeedsSomeThought;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidNetworkLinkChanging(int value);
    partial void OnidNetworkLinkChanged();
    partial void OnThisTableNeedsSomeThoughtChanging(string value);
    partial void OnThisTableNeedsSomeThoughtChanged();
    #endregion
		
		public UserSocialNetwork()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNetworkLink", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idNetworkLink
		{
			get
			{
				return this._idNetworkLink;
			}
			set
			{
				if ((this._idNetworkLink != value))
				{
					this.OnidNetworkLinkChanging(value);
					this.SendPropertyChanging();
					this._idNetworkLink = value;
					this.SendPropertyChanged("idNetworkLink");
					this.OnidNetworkLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThisTableNeedsSomeThought", DbType="NChar(10)")]
		public string ThisTableNeedsSomeThought
		{
			get
			{
				return this._ThisTableNeedsSomeThought;
			}
			set
			{
				if ((this._ThisTableNeedsSomeThought != value))
				{
					this.OnThisTableNeedsSomeThoughtChanging(value);
					this.SendPropertyChanging();
					this._ThisTableNeedsSomeThought = value;
					this.SendPropertyChanged("ThisTableNeedsSomeThought");
					this.OnThisTableNeedsSomeThoughtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CheckIn")]
	public partial class CheckIn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private int _ResortID;
		
		private System.DateTime _CheckinDate;
		
		private string _IPAddress;
		
		private string _Status;
		
		private bool _IsActive;
		
		private string _Longitude;
		
		private string _Latitude;
		
		private EntityRef<Resort> _Resort;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnResortIDChanging(int value);
    partial void OnResortIDChanged();
    partial void OnCheckinDateChanging(System.DateTime value);
    partial void OnCheckinDateChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    #endregion
		
		public CheckIn()
		{
			this._Resort = default(EntityRef<Resort>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortID", DbType="Int NOT NULL")]
		public int ResortID
		{
			get
			{
				return this._ResortID;
			}
			set
			{
				if ((this._ResortID != value))
				{
					if (this._Resort.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResortIDChanging(value);
					this.SendPropertyChanging();
					this._ResortID = value;
					this.SendPropertyChanged("ResortID");
					this.OnResortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckinDate", DbType="DateTime NOT NULL")]
		public System.DateTime CheckinDate
		{
			get
			{
				return this._CheckinDate;
			}
			set
			{
				if ((this._CheckinDate != value))
				{
					this.OnCheckinDateChanging(value);
					this.SendPropertyChanging();
					this._CheckinDate = value;
					this.SendPropertyChanged("CheckinDate");
					this.OnCheckinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(50)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="VarChar(50)")]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="VarChar(50)")]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resort_CheckIn", Storage="_Resort", ThisKey="ResortID", OtherKey="ID", IsForeignKey=true)]
		public Resort Resort
		{
			get
			{
				return this._Resort.Entity;
			}
			set
			{
				Resort previousValue = this._Resort.Entity;
				if (((previousValue != value) 
							|| (this._Resort.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resort.Entity = null;
						previousValue.CheckIns.Remove(this);
					}
					this._Resort.Entity = value;
					if ((value != null))
					{
						value.CheckIns.Add(this);
						this._ResortID = value.ID;
					}
					else
					{
						this._ResortID = default(int);
					}
					this.SendPropertyChanged("Resort");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CheckIn", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CheckIns.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CheckIns.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CodeDecode")]
	public partial class CodeDecode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CodeGroupID;
		
		private System.Nullable<bool> _IsGeneral;
		
		private string _GeneralText;
		
		private string _TableName;
		
		private string _ColumnName;
		
		private string _Value;
		
		private string _DisplayValue;
		
		private string _CodeValue;
		
		private System.Nullable<int> _Sequence;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodeGroupIDChanging(System.Nullable<int> value);
    partial void OnCodeGroupIDChanged();
    partial void OnIsGeneralChanging(System.Nullable<bool> value);
    partial void OnIsGeneralChanged();
    partial void OnGeneralTextChanging(string value);
    partial void OnGeneralTextChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnColumnNameChanging(string value);
    partial void OnColumnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnDisplayValueChanging(string value);
    partial void OnDisplayValueChanged();
    partial void OnCodeValueChanging(string value);
    partial void OnCodeValueChanged();
    partial void OnSequenceChanging(System.Nullable<int> value);
    partial void OnSequenceChanged();
    #endregion
		
		public CodeDecode()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeGroupID", DbType="Int")]
		public System.Nullable<int> CodeGroupID
		{
			get
			{
				return this._CodeGroupID;
			}
			set
			{
				if ((this._CodeGroupID != value))
				{
					this.OnCodeGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CodeGroupID = value;
					this.SendPropertyChanged("CodeGroupID");
					this.OnCodeGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGeneral", DbType="Bit")]
		public System.Nullable<bool> IsGeneral
		{
			get
			{
				return this._IsGeneral;
			}
			set
			{
				if ((this._IsGeneral != value))
				{
					this.OnIsGeneralChanging(value);
					this.SendPropertyChanging();
					this._IsGeneral = value;
					this.SendPropertyChanged("IsGeneral");
					this.OnIsGeneralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneralText", DbType="VarChar(50)")]
		public string GeneralText
		{
			get
			{
				return this._GeneralText;
			}
			set
			{
				if ((this._GeneralText != value))
				{
					this.OnGeneralTextChanging(value);
					this.SendPropertyChanging();
					this._GeneralText = value;
					this.SendPropertyChanged("GeneralText");
					this.OnGeneralTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="VarChar(50)")]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnName", DbType="VarChar(50)")]
		public string ColumnName
		{
			get
			{
				return this._ColumnName;
			}
			set
			{
				if ((this._ColumnName != value))
				{
					this.OnColumnNameChanging(value);
					this.SendPropertyChanging();
					this._ColumnName = value;
					this.SendPropertyChanged("ColumnName");
					this.OnColumnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(50)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayValue", DbType="VarChar(100)")]
		public string DisplayValue
		{
			get
			{
				return this._DisplayValue;
			}
			set
			{
				if ((this._DisplayValue != value))
				{
					this.OnDisplayValueChanging(value);
					this.SendPropertyChanging();
					this._DisplayValue = value;
					this.SendPropertyChanged("DisplayValue");
					this.OnDisplayValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeValue", DbType="VarChar(50)")]
		public string CodeValue
		{
			get
			{
				return this._CodeValue;
			}
			set
			{
				if ((this._CodeValue != value))
				{
					this.OnCodeValueChanging(value);
					this.SendPropertyChanging();
					this._CodeValue = value;
					this.SendPropertyChanged("CodeValue");
					this.OnCodeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sequence", DbType="Int")]
		public System.Nullable<int> Sequence
		{
			get
			{
				return this._Sequence;
			}
			set
			{
				if ((this._Sequence != value))
				{
					this.OnSequenceChanging(value);
					this.SendPropertyChanging();
					this._Sequence = value;
					this.SendPropertyChanged("Sequence");
					this.OnSequenceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConfigBoardBindingType")]
	public partial class ConfigBoardBindingType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _BoardBindingType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBoardBindingTypeChanging(string value);
    partial void OnBoardBindingTypeChanged();
    #endregion
		
		public ConfigBoardBindingType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardBindingType", DbType="VarChar(50)")]
		public string BoardBindingType
		{
			get
			{
				return this._BoardBindingType;
			}
			set
			{
				if ((this._BoardBindingType != value))
				{
					this.OnBoardBindingTypeChanging(value);
					this.SendPropertyChanging();
					this._BoardBindingType = value;
					this.SendPropertyChanged("BoardBindingType");
					this.OnBoardBindingTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConfigCuisine")]
	public partial class ConfigCuisine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Cuisine;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCuisineChanging(string value);
    partial void OnCuisineChanged();
    #endregion
		
		public ConfigCuisine()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cuisine", DbType="VarChar(50)")]
		public string Cuisine
		{
			get
			{
				return this._Cuisine;
			}
			set
			{
				if ((this._Cuisine != value))
				{
					this.OnCuisineChanging(value);
					this.SendPropertyChanging();
					this._Cuisine = value;
					this.SendPropertyChanged("Cuisine");
					this.OnCuisineChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConfigManufacturerType")]
	public partial class ConfigManufacturerType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ManufacturerType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnManufacturerTypeChanging(string value);
    partial void OnManufacturerTypeChanged();
    #endregion
		
		public ConfigManufacturerType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ManufacturerType
		{
			get
			{
				return this._ManufacturerType;
			}
			set
			{
				if ((this._ManufacturerType != value))
				{
					this.OnManufacturerTypeChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerType = value;
					this.SendPropertyChanged("ManufacturerType");
					this.OnManufacturerTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConfigPostStatus")]
	public partial class ConfigPostStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _PostStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPostStatusChanging(string value);
    partial void OnPostStatusChanged();
    #endregion
		
		public ConfigPostStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostStatus", DbType="VarChar(50)")]
		public string PostStatus
		{
			get
			{
				return this._PostStatus;
			}
			set
			{
				if ((this._PostStatus != value))
				{
					this.OnPostStatusChanging(value);
					this.SendPropertyChanging();
					this._PostStatus = value;
					this.SendPropertyChanged("PostStatus");
					this.OnPostStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConfigResortLinkType")]
	public partial class ConfigResortLinkType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ConfigResortLinkType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConfigSportType")]
	public partial class ConfigSportType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ParentID;
		
		private int _Sequence;
		
		private string _Name;
		
		private string _Collective;
		
		private string _Verb;
		
		private string _Alias;
		
		private string _Description;
		
		private bool _IsSki;
		
		private bool _IsSnowboard;
		
		private bool _IsOther;
		
		private EntitySet<LinkUserSportType> _LinkUserSportTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnParentIDChanging(int value);
    partial void OnParentIDChanged();
    partial void OnSequenceChanging(int value);
    partial void OnSequenceChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCollectiveChanging(string value);
    partial void OnCollectiveChanged();
    partial void OnVerbChanging(string value);
    partial void OnVerbChanged();
    partial void OnAliasChanging(string value);
    partial void OnAliasChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsSkiChanging(bool value);
    partial void OnIsSkiChanged();
    partial void OnIsSnowboardChanging(bool value);
    partial void OnIsSnowboardChanged();
    partial void OnIsOtherChanging(bool value);
    partial void OnIsOtherChanged();
    #endregion
		
		public ConfigSportType()
		{
			this._LinkUserSportTypes = new EntitySet<LinkUserSportType>(new Action<LinkUserSportType>(this.attach_LinkUserSportTypes), new Action<LinkUserSportType>(this.detach_LinkUserSportTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int NOT NULL")]
		public int ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sequence", DbType="Int NOT NULL")]
		public int Sequence
		{
			get
			{
				return this._Sequence;
			}
			set
			{
				if ((this._Sequence != value))
				{
					this.OnSequenceChanging(value);
					this.SendPropertyChanging();
					this._Sequence = value;
					this.SendPropertyChanged("Sequence");
					this.OnSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Collective", DbType="VarChar(100)")]
		public string Collective
		{
			get
			{
				return this._Collective;
			}
			set
			{
				if ((this._Collective != value))
				{
					this.OnCollectiveChanging(value);
					this.SendPropertyChanging();
					this._Collective = value;
					this.SendPropertyChanged("Collective");
					this.OnCollectiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Verb", DbType="VarChar(100)")]
		public string Verb
		{
			get
			{
				return this._Verb;
			}
			set
			{
				if ((this._Verb != value))
				{
					this.OnVerbChanging(value);
					this.SendPropertyChanging();
					this._Verb = value;
					this.SendPropertyChanged("Verb");
					this.OnVerbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alias", DbType="VarChar(100)")]
		public string Alias
		{
			get
			{
				return this._Alias;
			}
			set
			{
				if ((this._Alias != value))
				{
					this.OnAliasChanging(value);
					this.SendPropertyChanging();
					this._Alias = value;
					this.SendPropertyChanged("Alias");
					this.OnAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSki", DbType="Bit NOT NULL")]
		public bool IsSki
		{
			get
			{
				return this._IsSki;
			}
			set
			{
				if ((this._IsSki != value))
				{
					this.OnIsSkiChanging(value);
					this.SendPropertyChanging();
					this._IsSki = value;
					this.SendPropertyChanged("IsSki");
					this.OnIsSkiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSnowboard", DbType="Bit NOT NULL")]
		public bool IsSnowboard
		{
			get
			{
				return this._IsSnowboard;
			}
			set
			{
				if ((this._IsSnowboard != value))
				{
					this.OnIsSnowboardChanging(value);
					this.SendPropertyChanging();
					this._IsSnowboard = value;
					this.SendPropertyChanged("IsSnowboard");
					this.OnIsSnowboardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOther", DbType="Bit NOT NULL")]
		public bool IsOther
		{
			get
			{
				return this._IsOther;
			}
			set
			{
				if ((this._IsOther != value))
				{
					this.OnIsOtherChanging(value);
					this.SendPropertyChanging();
					this._IsOther = value;
					this.SendPropertyChanged("IsOther");
					this.OnIsOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigSportType_LinkUserSportType", Storage="_LinkUserSportTypes", ThisKey="ID", OtherKey="SportTypeID")]
		public EntitySet<LinkUserSportType> LinkUserSportTypes
		{
			get
			{
				return this._LinkUserSportTypes;
			}
			set
			{
				this._LinkUserSportTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LinkUserSportTypes(LinkUserSportType entity)
		{
			this.SendPropertyChanging();
			entity.ConfigSportType = this;
		}
		
		private void detach_LinkUserSportTypes(LinkUserSportType entity)
		{
			this.SendPropertyChanging();
			entity.ConfigSportType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConfigThreadStatus")]
	public partial class ConfigThreadStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ThreadStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnThreadStatusChanging(string value);
    partial void OnThreadStatusChanged();
    #endregion
		
		public ConfigThreadStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThreadStatus", DbType="VarChar(50)")]
		public string ThreadStatus
		{
			get
			{
				return this._ThreadStatus;
			}
			set
			{
				if ((this._ThreadStatus != value))
				{
					this.OnThreadStatusChanging(value);
					this.SendPropertyChanging();
					this._ThreadStatus = value;
					this.SendPropertyChanged("ThreadStatus");
					this.OnThreadStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Continent")]
	public partial class Continent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ContinentName;
		
		private string _PrettyUrl;
		
		private string _Code;
		
		private string _Latitude;
		
		private string _Longitude;
		
		private bool _HasResorts;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
		private EntitySet<Country> _Countries;
		
		private EntitySet<Resort> _Resorts;
		
		private EntitySet<Airport> _Airports;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnContinentNameChanging(string value);
    partial void OnContinentNameChanged();
    partial void OnPrettyUrlChanging(string value);
    partial void OnPrettyUrlChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    partial void OnHasResortsChanging(bool value);
    partial void OnHasResortsChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public Continent()
		{
			this._Countries = new EntitySet<Country>(new Action<Country>(this.attach_Countries), new Action<Country>(this.detach_Countries));
			this._Resorts = new EntitySet<Resort>(new Action<Resort>(this.attach_Resorts), new Action<Resort>(this.detach_Resorts));
			this._Airports = new EntitySet<Airport>(new Action<Airport>(this.attach_Airports), new Action<Airport>(this.detach_Airports));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContinentName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ContinentName
		{
			get
			{
				return this._ContinentName;
			}
			set
			{
				if ((this._ContinentName != value))
				{
					this.OnContinentNameChanging(value);
					this.SendPropertyChanging();
					this._ContinentName = value;
					this.SendPropertyChanged("ContinentName");
					this.OnContinentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrettyUrl", DbType="VarChar(100)")]
		public string PrettyUrl
		{
			get
			{
				return this._PrettyUrl;
			}
			set
			{
				if ((this._PrettyUrl != value))
				{
					this.OnPrettyUrlChanging(value);
					this.SendPropertyChanging();
					this._PrettyUrl = value;
					this.SendPropertyChanged("PrettyUrl");
					this.OnPrettyUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="VarChar(200)")]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="VarChar(200)")]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasResorts", DbType="Bit NOT NULL")]
		public bool HasResorts
		{
			get
			{
				return this._HasResorts;
			}
			set
			{
				if ((this._HasResorts != value))
				{
					this.OnHasResortsChanging(value);
					this.SendPropertyChanging();
					this._HasResorts = value;
					this.SendPropertyChanged("HasResorts");
					this.OnHasResortsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Continent_Country", Storage="_Countries", ThisKey="ID", OtherKey="ContinentID")]
		public EntitySet<Country> Countries
		{
			get
			{
				return this._Countries;
			}
			set
			{
				this._Countries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Continent_Resort", Storage="_Resorts", ThisKey="ID", OtherKey="ContinentID")]
		public EntitySet<Resort> Resorts
		{
			get
			{
				return this._Resorts;
			}
			set
			{
				this._Resorts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Continent_Airport", Storage="_Airports", ThisKey="ID", OtherKey="ContinentID")]
		public EntitySet<Airport> Airports
		{
			get
			{
				return this._Airports;
			}
			set
			{
				this._Airports.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Countries(Country entity)
		{
			this.SendPropertyChanging();
			entity.Continent = this;
		}
		
		private void detach_Countries(Country entity)
		{
			this.SendPropertyChanging();
			entity.Continent = null;
		}
		
		private void attach_Resorts(Resort entity)
		{
			this.SendPropertyChanging();
			entity.Continent = this;
		}
		
		private void detach_Resorts(Resort entity)
		{
			this.SendPropertyChanging();
			entity.Continent = null;
		}
		
		private void attach_Airports(Airport entity)
		{
			this.SendPropertyChanging();
			entity.Continent = this;
		}
		
		private void detach_Airports(Airport entity)
		{
			this.SendPropertyChanging();
			entity.Continent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ContinentID;
		
		private string _CountryName;
		
		private string _PrettyUrl;
		
		private System.Nullable<int> _MajorDestinationRank;
		
		private string _ISO3166Alpha2;
		
		private string _ISO3166Alpha3;
		
		private string _Capital;
		
		private System.Nullable<int> _Area;
		
		private System.Nullable<int> _Population;
		
		private string _Currency;
		
		private string _SubCurrency;
		
		private bool _HasResorts;
		
		private string _GenericPic;
		
		private string _Language;
		
		private string _Religion;
		
		private System.Nullable<double> _Latitude;
		
		private System.Nullable<double> _Longitude;
		
		private string _GMT;
		
		private string _Mass;
		
		private string _HighestPoint;
		
		private string _HighestPointDescription;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
		private EntitySet<Resort> _Resorts;
		
		private EntitySet<Airport> _Airports;
		
		private EntityRef<Continent> _Continent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnContinentIDChanging(int value);
    partial void OnContinentIDChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    partial void OnPrettyUrlChanging(string value);
    partial void OnPrettyUrlChanged();
    partial void OnMajorDestinationRankChanging(System.Nullable<int> value);
    partial void OnMajorDestinationRankChanged();
    partial void OnISO3166Alpha2Changing(string value);
    partial void OnISO3166Alpha2Changed();
    partial void OnISO3166Alpha3Changing(string value);
    partial void OnISO3166Alpha3Changed();
    partial void OnCapitalChanging(string value);
    partial void OnCapitalChanged();
    partial void OnAreaChanging(System.Nullable<int> value);
    partial void OnAreaChanged();
    partial void OnPopulationChanging(System.Nullable<int> value);
    partial void OnPopulationChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnSubCurrencyChanging(string value);
    partial void OnSubCurrencyChanged();
    partial void OnHasResortsChanging(bool value);
    partial void OnHasResortsChanged();
    partial void OnGenericPicChanging(string value);
    partial void OnGenericPicChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    partial void OnReligionChanging(string value);
    partial void OnReligionChanged();
    partial void OnLatitudeChanging(System.Nullable<double> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<double> value);
    partial void OnLongitudeChanged();
    partial void OnGMTChanging(string value);
    partial void OnGMTChanged();
    partial void OnMassChanging(string value);
    partial void OnMassChanged();
    partial void OnHighestPointChanging(string value);
    partial void OnHighestPointChanged();
    partial void OnHighestPointDescriptionChanging(string value);
    partial void OnHighestPointDescriptionChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public Country()
		{
			this._Resorts = new EntitySet<Resort>(new Action<Resort>(this.attach_Resorts), new Action<Resort>(this.detach_Resorts));
			this._Airports = new EntitySet<Airport>(new Action<Airport>(this.attach_Airports), new Action<Airport>(this.detach_Airports));
			this._Continent = default(EntityRef<Continent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContinentID", DbType="Int NOT NULL")]
		public int ContinentID
		{
			get
			{
				return this._ContinentID;
			}
			set
			{
				if ((this._ContinentID != value))
				{
					if (this._Continent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContinentIDChanging(value);
					this.SendPropertyChanging();
					this._ContinentID = value;
					this.SendPropertyChanged("ContinentID");
					this.OnContinentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="VarChar(100)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrettyUrl", DbType="VarChar(100)")]
		public string PrettyUrl
		{
			get
			{
				return this._PrettyUrl;
			}
			set
			{
				if ((this._PrettyUrl != value))
				{
					this.OnPrettyUrlChanging(value);
					this.SendPropertyChanging();
					this._PrettyUrl = value;
					this.SendPropertyChanged("PrettyUrl");
					this.OnPrettyUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorDestinationRank", DbType="Int")]
		public System.Nullable<int> MajorDestinationRank
		{
			get
			{
				return this._MajorDestinationRank;
			}
			set
			{
				if ((this._MajorDestinationRank != value))
				{
					this.OnMajorDestinationRankChanging(value);
					this.SendPropertyChanging();
					this._MajorDestinationRank = value;
					this.SendPropertyChanged("MajorDestinationRank");
					this.OnMajorDestinationRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO3166Alpha2", DbType="VarChar(2)")]
		public string ISO3166Alpha2
		{
			get
			{
				return this._ISO3166Alpha2;
			}
			set
			{
				if ((this._ISO3166Alpha2 != value))
				{
					this.OnISO3166Alpha2Changing(value);
					this.SendPropertyChanging();
					this._ISO3166Alpha2 = value;
					this.SendPropertyChanged("ISO3166Alpha2");
					this.OnISO3166Alpha2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO3166Alpha3", DbType="VarChar(3)")]
		public string ISO3166Alpha3
		{
			get
			{
				return this._ISO3166Alpha3;
			}
			set
			{
				if ((this._ISO3166Alpha3 != value))
				{
					this.OnISO3166Alpha3Changing(value);
					this.SendPropertyChanging();
					this._ISO3166Alpha3 = value;
					this.SendPropertyChanged("ISO3166Alpha3");
					this.OnISO3166Alpha3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capital", DbType="VarChar(100)")]
		public string Capital
		{
			get
			{
				return this._Capital;
			}
			set
			{
				if ((this._Capital != value))
				{
					this.OnCapitalChanging(value);
					this.SendPropertyChanging();
					this._Capital = value;
					this.SendPropertyChanged("Capital");
					this.OnCapitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="Int")]
		public System.Nullable<int> Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Population", DbType="Int")]
		public System.Nullable<int> Population
		{
			get
			{
				return this._Population;
			}
			set
			{
				if ((this._Population != value))
				{
					this.OnPopulationChanging(value);
					this.SendPropertyChanging();
					this._Population = value;
					this.SendPropertyChanged("Population");
					this.OnPopulationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="VarChar(20)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCurrency", DbType="VarChar(20)")]
		public string SubCurrency
		{
			get
			{
				return this._SubCurrency;
			}
			set
			{
				if ((this._SubCurrency != value))
				{
					this.OnSubCurrencyChanging(value);
					this.SendPropertyChanging();
					this._SubCurrency = value;
					this.SendPropertyChanged("SubCurrency");
					this.OnSubCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasResorts", DbType="Bit NOT NULL")]
		public bool HasResorts
		{
			get
			{
				return this._HasResorts;
			}
			set
			{
				if ((this._HasResorts != value))
				{
					this.OnHasResortsChanging(value);
					this.SendPropertyChanging();
					this._HasResorts = value;
					this.SendPropertyChanged("HasResorts");
					this.OnHasResortsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenericPic", DbType="VarChar(200)")]
		public string GenericPic
		{
			get
			{
				return this._GenericPic;
			}
			set
			{
				if ((this._GenericPic != value))
				{
					this.OnGenericPicChanging(value);
					this.SendPropertyChanging();
					this._GenericPic = value;
					this.SendPropertyChanged("GenericPic");
					this.OnGenericPicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="VarChar(15)")]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religion", DbType="VarChar(15)")]
		public string Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					this.OnReligionChanging(value);
					this.SendPropertyChanging();
					this._Religion = value;
					this.SendPropertyChanged("Religion");
					this.OnReligionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float")]
		public System.Nullable<double> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float")]
		public System.Nullable<double> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMT", DbType="VarChar(50)")]
		public string GMT
		{
			get
			{
				return this._GMT;
			}
			set
			{
				if ((this._GMT != value))
				{
					this.OnGMTChanging(value);
					this.SendPropertyChanging();
					this._GMT = value;
					this.SendPropertyChanged("GMT");
					this.OnGMTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mass", DbType="VarChar(20)")]
		public string Mass
		{
			get
			{
				return this._Mass;
			}
			set
			{
				if ((this._Mass != value))
				{
					this.OnMassChanging(value);
					this.SendPropertyChanging();
					this._Mass = value;
					this.SendPropertyChanged("Mass");
					this.OnMassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighestPoint", DbType="VarChar(20)")]
		public string HighestPoint
		{
			get
			{
				return this._HighestPoint;
			}
			set
			{
				if ((this._HighestPoint != value))
				{
					this.OnHighestPointChanging(value);
					this.SendPropertyChanging();
					this._HighestPoint = value;
					this.SendPropertyChanged("HighestPoint");
					this.OnHighestPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighestPointDescription", DbType="VarChar(100)")]
		public string HighestPointDescription
		{
			get
			{
				return this._HighestPointDescription;
			}
			set
			{
				if ((this._HighestPointDescription != value))
				{
					this.OnHighestPointDescriptionChanging(value);
					this.SendPropertyChanging();
					this._HighestPointDescription = value;
					this.SendPropertyChanged("HighestPointDescription");
					this.OnHighestPointDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Resort", Storage="_Resorts", ThisKey="ID", OtherKey="CountryID")]
		public EntitySet<Resort> Resorts
		{
			get
			{
				return this._Resorts;
			}
			set
			{
				this._Resorts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Airport", Storage="_Airports", ThisKey="ID", OtherKey="CountryID")]
		public EntitySet<Airport> Airports
		{
			get
			{
				return this._Airports;
			}
			set
			{
				this._Airports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Continent_Country", Storage="_Continent", ThisKey="ContinentID", OtherKey="ID", IsForeignKey=true)]
		public Continent Continent
		{
			get
			{
				return this._Continent.Entity;
			}
			set
			{
				Continent previousValue = this._Continent.Entity;
				if (((previousValue != value) 
							|| (this._Continent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Continent.Entity = null;
						previousValue.Countries.Remove(this);
					}
					this._Continent.Entity = value;
					if ((value != null))
					{
						value.Countries.Add(this);
						this._ContinentID = value.ID;
					}
					else
					{
						this._ContinentID = default(int);
					}
					this.SendPropertyChanged("Continent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Resorts(Resort entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_Resorts(Resort entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
		
		private void attach_Airports(Airport entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_Airports(Airport entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Forum")]
	public partial class Forum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ForumName;
		
		private int _ParentID;
		
		private int _Sequence;
		
		private string _Description;
		
		private bool _IsAdmin;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
		private EntitySet<Thread> _Threads;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnForumNameChanging(string value);
    partial void OnForumNameChanged();
    partial void OnParentIDChanging(int value);
    partial void OnParentIDChanged();
    partial void OnSequenceChanging(int value);
    partial void OnSequenceChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsAdminChanging(bool value);
    partial void OnIsAdminChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public Forum()
		{
			this._Threads = new EntitySet<Thread>(new Action<Thread>(this.attach_Threads), new Action<Thread>(this.detach_Threads));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ForumName
		{
			get
			{
				return this._ForumName;
			}
			set
			{
				if ((this._ForumName != value))
				{
					this.OnForumNameChanging(value);
					this.SendPropertyChanging();
					this._ForumName = value;
					this.SendPropertyChanged("ForumName");
					this.OnForumNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int NOT NULL")]
		public int ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sequence", DbType="Int NOT NULL")]
		public int Sequence
		{
			get
			{
				return this._Sequence;
			}
			set
			{
				if ((this._Sequence != value))
				{
					this.OnSequenceChanging(value);
					this.SendPropertyChanging();
					this._Sequence = value;
					this.SendPropertyChanged("Sequence");
					this.OnSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Bit NOT NULL")]
		public bool IsAdmin
		{
			get
			{
				return this._IsAdmin;
			}
			set
			{
				if ((this._IsAdmin != value))
				{
					this.OnIsAdminChanging(value);
					this.SendPropertyChanging();
					this._IsAdmin = value;
					this.SendPropertyChanged("IsAdmin");
					this.OnIsAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Forum_Thread", Storage="_Threads", ThisKey="ID", OtherKey="ForumID")]
		public EntitySet<Thread> Threads
		{
			get
			{
				return this._Threads;
			}
			set
			{
				this._Threads.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Threads(Thread entity)
		{
			this.SendPropertyChanging();
			entity.Forum = this;
		}
		
		private void detach_Threads(Thread entity)
		{
			this.SendPropertyChanging();
			entity.Forum = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LinkManufacturerManufacturerType")]
	public partial class LinkManufacturerManufacturerType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ManufacturerID;
		
		private string _ManufacturerTypeID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnManufacturerIDChanging(System.Nullable<int> value);
    partial void OnManufacturerIDChanged();
    partial void OnManufacturerTypeIDChanging(string value);
    partial void OnManufacturerTypeIDChanged();
    #endregion
		
		public LinkManufacturerManufacturerType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerID", DbType="Int")]
		public System.Nullable<int> ManufacturerID
		{
			get
			{
				return this._ManufacturerID;
			}
			set
			{
				if ((this._ManufacturerID != value))
				{
					this.OnManufacturerIDChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerID = value;
					this.SendPropertyChanged("ManufacturerID");
					this.OnManufacturerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerTypeID", DbType="NChar(10)")]
		public string ManufacturerTypeID
		{
			get
			{
				return this._ManufacturerTypeID;
			}
			set
			{
				if ((this._ManufacturerTypeID != value))
				{
					this.OnManufacturerTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerTypeID = value;
					this.SendPropertyChanged("ManufacturerTypeID");
					this.OnManufacturerTypeIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LinkResortMountainRange")]
	public partial class LinkResortMountainRange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ResortID;
		
		private System.Nullable<int> _RangeID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnResortIDChanging(System.Nullable<int> value);
    partial void OnResortIDChanged();
    partial void OnRangeIDChanging(System.Nullable<int> value);
    partial void OnRangeIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public LinkResortMountainRange()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortID", DbType="Int")]
		public System.Nullable<int> ResortID
		{
			get
			{
				return this._ResortID;
			}
			set
			{
				if ((this._ResortID != value))
				{
					this.OnResortIDChanging(value);
					this.SendPropertyChanging();
					this._ResortID = value;
					this.SendPropertyChanged("ResortID");
					this.OnResortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RangeID", DbType="Int")]
		public System.Nullable<int> RangeID
		{
			get
			{
				return this._RangeID;
			}
			set
			{
				if ((this._RangeID != value))
				{
					this.OnRangeIDChanging(value);
					this.SendPropertyChanging();
					this._RangeID = value;
					this.SendPropertyChanged("RangeID");
					this.OnRangeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LinkResortPicture")]
	public partial class LinkResortPicture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ResortID;
		
		private int _PictureID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnResortIDChanging(int value);
    partial void OnResortIDChanged();
    partial void OnPictureIDChanging(int value);
    partial void OnPictureIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public LinkResortPicture()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortID", DbType="Int NOT NULL")]
		public int ResortID
		{
			get
			{
				return this._ResortID;
			}
			set
			{
				if ((this._ResortID != value))
				{
					this.OnResortIDChanging(value);
					this.SendPropertyChanging();
					this._ResortID = value;
					this.SendPropertyChanged("ResortID");
					this.OnResortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureID", DbType="Int NOT NULL")]
		public int PictureID
		{
			get
			{
				return this._PictureID;
			}
			set
			{
				if ((this._PictureID != value))
				{
					this.OnPictureIDChanging(value);
					this.SendPropertyChanging();
					this._PictureID = value;
					this.SendPropertyChanged("PictureID");
					this.OnPictureIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LinkResortProCon")]
	public partial class LinkResortProCon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ResortID;
		
		private System.Nullable<int> _ProConID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnResortIDChanging(System.Nullable<int> value);
    partial void OnResortIDChanged();
    partial void OnProConIDChanging(System.Nullable<int> value);
    partial void OnProConIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public LinkResortProCon()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortID", DbType="Int")]
		public System.Nullable<int> ResortID
		{
			get
			{
				return this._ResortID;
			}
			set
			{
				if ((this._ResortID != value))
				{
					this.OnResortIDChanging(value);
					this.SendPropertyChanging();
					this._ResortID = value;
					this.SendPropertyChanged("ResortID");
					this.OnResortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProConID", DbType="Int")]
		public System.Nullable<int> ProConID
		{
			get
			{
				return this._ProConID;
			}
			set
			{
				if ((this._ProConID != value))
				{
					this.OnProConIDChanging(value);
					this.SendPropertyChanging();
					this._ProConID = value;
					this.SendPropertyChanged("ProConID");
					this.OnProConIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LinkResortRegion")]
	public partial class LinkResortRegion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ResortID;
		
		private int _RegionID;
		
		private string _RegionTerm;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnResortIDChanging(int value);
    partial void OnResortIDChanged();
    partial void OnRegionIDChanging(int value);
    partial void OnRegionIDChanged();
    partial void OnRegionTermChanging(string value);
    partial void OnRegionTermChanged();
    #endregion
		
		public LinkResortRegion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortID", DbType="Int NOT NULL")]
		public int ResortID
		{
			get
			{
				return this._ResortID;
			}
			set
			{
				if ((this._ResortID != value))
				{
					this.OnResortIDChanging(value);
					this.SendPropertyChanging();
					this._ResortID = value;
					this.SendPropertyChanged("ResortID");
					this.OnResortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="Int NOT NULL")]
		public int RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionTerm", DbType="VarChar(100)")]
		public string RegionTerm
		{
			get
			{
				return this._RegionTerm;
			}
			set
			{
				if ((this._RegionTerm != value))
				{
					this.OnRegionTermChanging(value);
					this.SendPropertyChanging();
					this._RegionTerm = value;
					this.SendPropertyChanged("RegionTerm");
					this.OnRegionTermChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LinkResortSkiArea")]
	public partial class LinkResortSkiArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ResortID;
		
		private int _SkiAreaID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnResortIDChanging(int value);
    partial void OnResortIDChanged();
    partial void OnSkiAreaIDChanging(int value);
    partial void OnSkiAreaIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public LinkResortSkiArea()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortID", DbType="Int NOT NULL")]
		public int ResortID
		{
			get
			{
				return this._ResortID;
			}
			set
			{
				if ((this._ResortID != value))
				{
					this.OnResortIDChanging(value);
					this.SendPropertyChanging();
					this._ResortID = value;
					this.SendPropertyChanged("ResortID");
					this.OnResortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkiAreaID", DbType="Int NOT NULL")]
		public int SkiAreaID
		{
			get
			{
				return this._SkiAreaID;
			}
			set
			{
				if ((this._SkiAreaID != value))
				{
					this.OnSkiAreaIDChanging(value);
					this.SendPropertyChanging();
					this._SkiAreaID = value;
					this.SendPropertyChanged("SkiAreaID");
					this.OnSkiAreaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LinkResortThread")]
	public partial class LinkResortThread : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ResortID;
		
		private int _ThreadID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnResortIDChanging(int value);
    partial void OnResortIDChanged();
    partial void OnThreadIDChanging(int value);
    partial void OnThreadIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public LinkResortThread()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortID", DbType="Int NOT NULL")]
		public int ResortID
		{
			get
			{
				return this._ResortID;
			}
			set
			{
				if ((this._ResortID != value))
				{
					this.OnResortIDChanging(value);
					this.SendPropertyChanging();
					this._ResortID = value;
					this.SendPropertyChanged("ResortID");
					this.OnResortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThreadID", DbType="Int NOT NULL")]
		public int ThreadID
		{
			get
			{
				return this._ThreadID;
			}
			set
			{
				if ((this._ThreadID != value))
				{
					this.OnThreadIDChanging(value);
					this.SendPropertyChanging();
					this._ThreadID = value;
					this.SendPropertyChanged("ThreadID");
					this.OnThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LinkResortUser")]
	public partial class LinkResortUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ResortID;
		
		private int _UserID;
		
		private int _Score;
		
		private bool _HasVisited;
		
		private bool _IsFavourite;
		
		private string _LastVisitDate;
		
		private string _Title;
		
		private string _ReviewText;
		
		private System.Nullable<int> _ResortSuitsExpert;
		
		private System.Nullable<int> _ResortSuitsAdvanced;
		
		private System.Nullable<int> _ResortSuitsIntermediate;
		
		private System.Nullable<int> _ResortSuitsBeginner;
		
		private System.Nullable<int> _ResortSuitsLively;
		
		private System.Nullable<int> _ResortSuitsAverage;
		
		private System.Nullable<int> _ResortSuitsQuiet;
		
		private System.Nullable<int> _ResortSuitsSkiers;
		
		private System.Nullable<int> _ResortSuitsSnowboarders;
		
		private System.Nullable<int> _ResortSuitsBoth;
		
		private System.Nullable<int> _ResortSuitsExpensive;
		
		private System.Nullable<int> _ResortSuitsAffordable;
		
		private System.Nullable<int> _ResortSuitsCheap;
		
		private int _LiftRating;
		
		private int _SnowRating;
		
		private int _QueueRating;
		
		private int _SceneryRating;
		
		private int _ConvenienceRating;
		
		private int _AccomodationRating;
		
		private int _FoodRating;
		
		private int _FacilitiesRating;
		
		private int _NightlifeRating;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
		private EntityRef<Resort> _Resort;
		
		private EntityRef<User> _User;
		
		private EntityRef<ReviewUsefulness> _ReviewUsefulness;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnResortIDChanging(int value);
    partial void OnResortIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnScoreChanging(int value);
    partial void OnScoreChanged();
    partial void OnHasVisitedChanging(bool value);
    partial void OnHasVisitedChanged();
    partial void OnIsFavouriteChanging(bool value);
    partial void OnIsFavouriteChanged();
    partial void OnLastVisitDateChanging(string value);
    partial void OnLastVisitDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnReviewTextChanging(string value);
    partial void OnReviewTextChanged();
    partial void OnResortSuitsExpertChanging(System.Nullable<int> value);
    partial void OnResortSuitsExpertChanged();
    partial void OnResortSuitsAdvancedChanging(System.Nullable<int> value);
    partial void OnResortSuitsAdvancedChanged();
    partial void OnResortSuitsIntermediateChanging(System.Nullable<int> value);
    partial void OnResortSuitsIntermediateChanged();
    partial void OnResortSuitsBeginnerChanging(System.Nullable<int> value);
    partial void OnResortSuitsBeginnerChanged();
    partial void OnResortSuitsLivelyChanging(System.Nullable<int> value);
    partial void OnResortSuitsLivelyChanged();
    partial void OnResortSuitsAverageChanging(System.Nullable<int> value);
    partial void OnResortSuitsAverageChanged();
    partial void OnResortSuitsQuietChanging(System.Nullable<int> value);
    partial void OnResortSuitsQuietChanged();
    partial void OnResortSuitsSkiersChanging(System.Nullable<int> value);
    partial void OnResortSuitsSkiersChanged();
    partial void OnResortSuitsSnowboardersChanging(System.Nullable<int> value);
    partial void OnResortSuitsSnowboardersChanged();
    partial void OnResortSuitsBothChanging(System.Nullable<int> value);
    partial void OnResortSuitsBothChanged();
    partial void OnResortSuitsExpensiveChanging(System.Nullable<int> value);
    partial void OnResortSuitsExpensiveChanged();
    partial void OnResortSuitsAffordableChanging(System.Nullable<int> value);
    partial void OnResortSuitsAffordableChanged();
    partial void OnResortSuitsCheapChanging(System.Nullable<int> value);
    partial void OnResortSuitsCheapChanged();
    partial void OnLiftRatingChanging(int value);
    partial void OnLiftRatingChanged();
    partial void OnSnowRatingChanging(int value);
    partial void OnSnowRatingChanged();
    partial void OnQueueRatingChanging(int value);
    partial void OnQueueRatingChanged();
    partial void OnSceneryRatingChanging(int value);
    partial void OnSceneryRatingChanged();
    partial void OnConvenienceRatingChanging(int value);
    partial void OnConvenienceRatingChanged();
    partial void OnAccomodationRatingChanging(int value);
    partial void OnAccomodationRatingChanged();
    partial void OnFoodRatingChanging(int value);
    partial void OnFoodRatingChanged();
    partial void OnFacilitiesRatingChanging(int value);
    partial void OnFacilitiesRatingChanged();
    partial void OnNightlifeRatingChanging(int value);
    partial void OnNightlifeRatingChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public LinkResortUser()
		{
			this._Resort = default(EntityRef<Resort>);
			this._User = default(EntityRef<User>);
			this._ReviewUsefulness = default(EntityRef<ReviewUsefulness>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._ReviewUsefulness.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortID", DbType="Int NOT NULL")]
		public int ResortID
		{
			get
			{
				return this._ResortID;
			}
			set
			{
				if ((this._ResortID != value))
				{
					if (this._Resort.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResortIDChanging(value);
					this.SendPropertyChanging();
					this._ResortID = value;
					this.SendPropertyChanged("ResortID");
					this.OnResortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Int NOT NULL")]
		public int Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasVisited", DbType="Bit NOT NULL")]
		public bool HasVisited
		{
			get
			{
				return this._HasVisited;
			}
			set
			{
				if ((this._HasVisited != value))
				{
					this.OnHasVisitedChanging(value);
					this.SendPropertyChanging();
					this._HasVisited = value;
					this.SendPropertyChanged("HasVisited");
					this.OnHasVisitedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFavourite", DbType="Bit NOT NULL")]
		public bool IsFavourite
		{
			get
			{
				return this._IsFavourite;
			}
			set
			{
				if ((this._IsFavourite != value))
				{
					this.OnIsFavouriteChanging(value);
					this.SendPropertyChanging();
					this._IsFavourite = value;
					this.SendPropertyChanged("IsFavourite");
					this.OnIsFavouriteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastVisitDate", DbType="VarChar(8)")]
		public string LastVisitDate
		{
			get
			{
				return this._LastVisitDate;
			}
			set
			{
				if ((this._LastVisitDate != value))
				{
					this.OnLastVisitDateChanging(value);
					this.SendPropertyChanging();
					this._LastVisitDate = value;
					this.SendPropertyChanged("LastVisitDate");
					this.OnLastVisitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewText", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ReviewText
		{
			get
			{
				return this._ReviewText;
			}
			set
			{
				if ((this._ReviewText != value))
				{
					this.OnReviewTextChanging(value);
					this.SendPropertyChanging();
					this._ReviewText = value;
					this.SendPropertyChanged("ReviewText");
					this.OnReviewTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortSuitsExpert", DbType="Int")]
		public System.Nullable<int> ResortSuitsExpert
		{
			get
			{
				return this._ResortSuitsExpert;
			}
			set
			{
				if ((this._ResortSuitsExpert != value))
				{
					this.OnResortSuitsExpertChanging(value);
					this.SendPropertyChanging();
					this._ResortSuitsExpert = value;
					this.SendPropertyChanged("ResortSuitsExpert");
					this.OnResortSuitsExpertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortSuitsAdvanced", DbType="Int")]
		public System.Nullable<int> ResortSuitsAdvanced
		{
			get
			{
				return this._ResortSuitsAdvanced;
			}
			set
			{
				if ((this._ResortSuitsAdvanced != value))
				{
					this.OnResortSuitsAdvancedChanging(value);
					this.SendPropertyChanging();
					this._ResortSuitsAdvanced = value;
					this.SendPropertyChanged("ResortSuitsAdvanced");
					this.OnResortSuitsAdvancedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortSuitsIntermediate", DbType="Int")]
		public System.Nullable<int> ResortSuitsIntermediate
		{
			get
			{
				return this._ResortSuitsIntermediate;
			}
			set
			{
				if ((this._ResortSuitsIntermediate != value))
				{
					this.OnResortSuitsIntermediateChanging(value);
					this.SendPropertyChanging();
					this._ResortSuitsIntermediate = value;
					this.SendPropertyChanged("ResortSuitsIntermediate");
					this.OnResortSuitsIntermediateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortSuitsBeginner", DbType="Int")]
		public System.Nullable<int> ResortSuitsBeginner
		{
			get
			{
				return this._ResortSuitsBeginner;
			}
			set
			{
				if ((this._ResortSuitsBeginner != value))
				{
					this.OnResortSuitsBeginnerChanging(value);
					this.SendPropertyChanging();
					this._ResortSuitsBeginner = value;
					this.SendPropertyChanged("ResortSuitsBeginner");
					this.OnResortSuitsBeginnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortSuitsLively", DbType="Int")]
		public System.Nullable<int> ResortSuitsLively
		{
			get
			{
				return this._ResortSuitsLively;
			}
			set
			{
				if ((this._ResortSuitsLively != value))
				{
					this.OnResortSuitsLivelyChanging(value);
					this.SendPropertyChanging();
					this._ResortSuitsLively = value;
					this.SendPropertyChanged("ResortSuitsLively");
					this.OnResortSuitsLivelyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortSuitsAverage", DbType="Int")]
		public System.Nullable<int> ResortSuitsAverage
		{
			get
			{
				return this._ResortSuitsAverage;
			}
			set
			{
				if ((this._ResortSuitsAverage != value))
				{
					this.OnResortSuitsAverageChanging(value);
					this.SendPropertyChanging();
					this._ResortSuitsAverage = value;
					this.SendPropertyChanged("ResortSuitsAverage");
					this.OnResortSuitsAverageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortSuitsQuiet", DbType="Int")]
		public System.Nullable<int> ResortSuitsQuiet
		{
			get
			{
				return this._ResortSuitsQuiet;
			}
			set
			{
				if ((this._ResortSuitsQuiet != value))
				{
					this.OnResortSuitsQuietChanging(value);
					this.SendPropertyChanging();
					this._ResortSuitsQuiet = value;
					this.SendPropertyChanged("ResortSuitsQuiet");
					this.OnResortSuitsQuietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortSuitsSkiers", DbType="Int")]
		public System.Nullable<int> ResortSuitsSkiers
		{
			get
			{
				return this._ResortSuitsSkiers;
			}
			set
			{
				if ((this._ResortSuitsSkiers != value))
				{
					this.OnResortSuitsSkiersChanging(value);
					this.SendPropertyChanging();
					this._ResortSuitsSkiers = value;
					this.SendPropertyChanged("ResortSuitsSkiers");
					this.OnResortSuitsSkiersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortSuitsSnowboarders", DbType="Int")]
		public System.Nullable<int> ResortSuitsSnowboarders
		{
			get
			{
				return this._ResortSuitsSnowboarders;
			}
			set
			{
				if ((this._ResortSuitsSnowboarders != value))
				{
					this.OnResortSuitsSnowboardersChanging(value);
					this.SendPropertyChanging();
					this._ResortSuitsSnowboarders = value;
					this.SendPropertyChanged("ResortSuitsSnowboarders");
					this.OnResortSuitsSnowboardersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortSuitsBoth", DbType="Int")]
		public System.Nullable<int> ResortSuitsBoth
		{
			get
			{
				return this._ResortSuitsBoth;
			}
			set
			{
				if ((this._ResortSuitsBoth != value))
				{
					this.OnResortSuitsBothChanging(value);
					this.SendPropertyChanging();
					this._ResortSuitsBoth = value;
					this.SendPropertyChanged("ResortSuitsBoth");
					this.OnResortSuitsBothChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortSuitsExpensive", DbType="Int")]
		public System.Nullable<int> ResortSuitsExpensive
		{
			get
			{
				return this._ResortSuitsExpensive;
			}
			set
			{
				if ((this._ResortSuitsExpensive != value))
				{
					this.OnResortSuitsExpensiveChanging(value);
					this.SendPropertyChanging();
					this._ResortSuitsExpensive = value;
					this.SendPropertyChanged("ResortSuitsExpensive");
					this.OnResortSuitsExpensiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortSuitsAffordable", DbType="Int")]
		public System.Nullable<int> ResortSuitsAffordable
		{
			get
			{
				return this._ResortSuitsAffordable;
			}
			set
			{
				if ((this._ResortSuitsAffordable != value))
				{
					this.OnResortSuitsAffordableChanging(value);
					this.SendPropertyChanging();
					this._ResortSuitsAffordable = value;
					this.SendPropertyChanged("ResortSuitsAffordable");
					this.OnResortSuitsAffordableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortSuitsCheap", DbType="Int")]
		public System.Nullable<int> ResortSuitsCheap
		{
			get
			{
				return this._ResortSuitsCheap;
			}
			set
			{
				if ((this._ResortSuitsCheap != value))
				{
					this.OnResortSuitsCheapChanging(value);
					this.SendPropertyChanging();
					this._ResortSuitsCheap = value;
					this.SendPropertyChanged("ResortSuitsCheap");
					this.OnResortSuitsCheapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiftRating", DbType="Int NOT NULL")]
		public int LiftRating
		{
			get
			{
				return this._LiftRating;
			}
			set
			{
				if ((this._LiftRating != value))
				{
					this.OnLiftRatingChanging(value);
					this.SendPropertyChanging();
					this._LiftRating = value;
					this.SendPropertyChanged("LiftRating");
					this.OnLiftRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SnowRating", DbType="Int NOT NULL")]
		public int SnowRating
		{
			get
			{
				return this._SnowRating;
			}
			set
			{
				if ((this._SnowRating != value))
				{
					this.OnSnowRatingChanging(value);
					this.SendPropertyChanging();
					this._SnowRating = value;
					this.SendPropertyChanged("SnowRating");
					this.OnSnowRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueueRating", DbType="Int NOT NULL")]
		public int QueueRating
		{
			get
			{
				return this._QueueRating;
			}
			set
			{
				if ((this._QueueRating != value))
				{
					this.OnQueueRatingChanging(value);
					this.SendPropertyChanging();
					this._QueueRating = value;
					this.SendPropertyChanged("QueueRating");
					this.OnQueueRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SceneryRating", DbType="Int NOT NULL")]
		public int SceneryRating
		{
			get
			{
				return this._SceneryRating;
			}
			set
			{
				if ((this._SceneryRating != value))
				{
					this.OnSceneryRatingChanging(value);
					this.SendPropertyChanging();
					this._SceneryRating = value;
					this.SendPropertyChanged("SceneryRating");
					this.OnSceneryRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConvenienceRating", DbType="Int NOT NULL")]
		public int ConvenienceRating
		{
			get
			{
				return this._ConvenienceRating;
			}
			set
			{
				if ((this._ConvenienceRating != value))
				{
					this.OnConvenienceRatingChanging(value);
					this.SendPropertyChanging();
					this._ConvenienceRating = value;
					this.SendPropertyChanged("ConvenienceRating");
					this.OnConvenienceRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccomodationRating", DbType="Int NOT NULL")]
		public int AccomodationRating
		{
			get
			{
				return this._AccomodationRating;
			}
			set
			{
				if ((this._AccomodationRating != value))
				{
					this.OnAccomodationRatingChanging(value);
					this.SendPropertyChanging();
					this._AccomodationRating = value;
					this.SendPropertyChanged("AccomodationRating");
					this.OnAccomodationRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodRating", DbType="Int NOT NULL")]
		public int FoodRating
		{
			get
			{
				return this._FoodRating;
			}
			set
			{
				if ((this._FoodRating != value))
				{
					this.OnFoodRatingChanging(value);
					this.SendPropertyChanging();
					this._FoodRating = value;
					this.SendPropertyChanged("FoodRating");
					this.OnFoodRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilitiesRating", DbType="Int NOT NULL")]
		public int FacilitiesRating
		{
			get
			{
				return this._FacilitiesRating;
			}
			set
			{
				if ((this._FacilitiesRating != value))
				{
					this.OnFacilitiesRatingChanging(value);
					this.SendPropertyChanging();
					this._FacilitiesRating = value;
					this.SendPropertyChanged("FacilitiesRating");
					this.OnFacilitiesRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NightlifeRating", DbType="Int NOT NULL")]
		public int NightlifeRating
		{
			get
			{
				return this._NightlifeRating;
			}
			set
			{
				if ((this._NightlifeRating != value))
				{
					this.OnNightlifeRatingChanging(value);
					this.SendPropertyChanging();
					this._NightlifeRating = value;
					this.SendPropertyChanged("NightlifeRating");
					this.OnNightlifeRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resort_LinkResortUser", Storage="_Resort", ThisKey="ResortID", OtherKey="ID", IsForeignKey=true)]
		public Resort Resort
		{
			get
			{
				return this._Resort.Entity;
			}
			set
			{
				Resort previousValue = this._Resort.Entity;
				if (((previousValue != value) 
							|| (this._Resort.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resort.Entity = null;
						previousValue.LinkResortUsers.Remove(this);
					}
					this._Resort.Entity = value;
					if ((value != null))
					{
						value.LinkResortUsers.Add(this);
						this._ResortID = value.ID;
					}
					else
					{
						this._ResortID = default(int);
					}
					this.SendPropertyChanged("Resort");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_LinkResortUser", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.LinkResortUsers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.LinkResortUsers.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReviewUsefulness_LinkResortUser", Storage="_ReviewUsefulness", ThisKey="ID", OtherKey="LinkResortUserID", IsForeignKey=true)]
		public ReviewUsefulness ReviewUsefulness
		{
			get
			{
				return this._ReviewUsefulness.Entity;
			}
			set
			{
				ReviewUsefulness previousValue = this._ReviewUsefulness.Entity;
				if (((previousValue != value) 
							|| (this._ReviewUsefulness.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReviewUsefulness.Entity = null;
						previousValue.LinkResortUsers.Remove(this);
					}
					this._ReviewUsefulness.Entity = value;
					if ((value != null))
					{
						value.LinkResortUsers.Add(this);
						this._ID = value.LinkResortUserID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("ReviewUsefulness");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LinkSkiAreaCountry")]
	public partial class LinkSkiAreaCountry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _SkiAreaID;
		
		private System.Nullable<int> _CountryID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSkiAreaIDChanging(System.Nullable<int> value);
    partial void OnSkiAreaIDChanged();
    partial void OnCountryIDChanging(System.Nullable<int> value);
    partial void OnCountryIDChanged();
    #endregion
		
		public LinkSkiAreaCountry()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkiAreaID", DbType="Int")]
		public System.Nullable<int> SkiAreaID
		{
			get
			{
				return this._SkiAreaID;
			}
			set
			{
				if ((this._SkiAreaID != value))
				{
					this.OnSkiAreaIDChanging(value);
					this.SendPropertyChanging();
					this._SkiAreaID = value;
					this.SendPropertyChanged("SkiAreaID");
					this.OnSkiAreaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int")]
		public System.Nullable<int> CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LinkUserSportType")]
	public partial class LinkUserSportType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private int _SportTypeID;
		
		private int _Seasons;
		
		private int _Level;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
		private EntityRef<ConfigSportType> _ConfigSportType;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnSportTypeIDChanging(int value);
    partial void OnSportTypeIDChanged();
    partial void OnSeasonsChanging(int value);
    partial void OnSeasonsChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public LinkUserSportType()
		{
			this._ConfigSportType = default(EntityRef<ConfigSportType>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SportTypeID", DbType="Int NOT NULL")]
		public int SportTypeID
		{
			get
			{
				return this._SportTypeID;
			}
			set
			{
				if ((this._SportTypeID != value))
				{
					if (this._ConfigSportType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSportTypeIDChanging(value);
					this.SendPropertyChanging();
					this._SportTypeID = value;
					this.SendPropertyChanged("SportTypeID");
					this.OnSportTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seasons", DbType="Int NOT NULL")]
		public int Seasons
		{
			get
			{
				return this._Seasons;
			}
			set
			{
				if ((this._Seasons != value))
				{
					this.OnSeasonsChanging(value);
					this.SendPropertyChanging();
					this._Seasons = value;
					this.SendPropertyChanged("Seasons");
					this.OnSeasonsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConfigSportType_LinkUserSportType", Storage="_ConfigSportType", ThisKey="SportTypeID", OtherKey="ID", IsForeignKey=true)]
		public ConfigSportType ConfigSportType
		{
			get
			{
				return this._ConfigSportType.Entity;
			}
			set
			{
				ConfigSportType previousValue = this._ConfigSportType.Entity;
				if (((previousValue != value) 
							|| (this._ConfigSportType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConfigSportType.Entity = null;
						previousValue.LinkUserSportTypes.Remove(this);
					}
					this._ConfigSportType.Entity = value;
					if ((value != null))
					{
						value.LinkUserSportTypes.Add(this);
						this._SportTypeID = value.ID;
					}
					else
					{
						this._SportTypeID = default(int);
					}
					this.SendPropertyChanged("ConfigSportType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_LinkUserSportType", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.LinkUserSportTypes.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.LinkUserSportTypes.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LinkUserUser")]
	public partial class LinkUserUser
	{
		
		private System.Nullable<int> _id;
		
		private string _needssomethought;
		
		public LinkUserUser()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int")]
		public System.Nullable<int> id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_needssomethought", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string needssomethought
		{
			get
			{
				return this._needssomethought;
			}
			set
			{
				if ((this._needssomethought != value))
				{
					this._needssomethought = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Manufacturer")]
	public partial class Manufacturer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ManufacturerName;
		
		private string _THIS_NEEDS_FIXING;
		
		private string _URL;
		
		private string _Email;
		
		private string _Address;
		
		private string _Phone;
		
		private string _ContactName;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnManufacturerNameChanging(string value);
    partial void OnManufacturerNameChanged();
    partial void OnTHIS_NEEDS_FIXINGChanging(string value);
    partial void OnTHIS_NEEDS_FIXINGChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public Manufacturer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ManufacturerName
		{
			get
			{
				return this._ManufacturerName;
			}
			set
			{
				if ((this._ManufacturerName != value))
				{
					this.OnManufacturerNameChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerName = value;
					this.SendPropertyChanged("ManufacturerName");
					this.OnManufacturerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THIS_NEEDS_FIXING", DbType="VarChar(50)")]
		public string THIS_NEEDS_FIXING
		{
			get
			{
				return this._THIS_NEEDS_FIXING;
			}
			set
			{
				if ((this._THIS_NEEDS_FIXING != value))
				{
					this.OnTHIS_NEEDS_FIXINGChanging(value);
					this.SendPropertyChanging();
					this._THIS_NEEDS_FIXING = value;
					this.SendPropertyChanged("THIS_NEEDS_FIXING");
					this.OnTHIS_NEEDS_FIXINGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(50)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="VarChar(50)")]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MountainRange")]
	public partial class MountainRange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ContinentID;
		
		private string _MountainRange1;
		
		private string _PrettyUrl;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnContinentIDChanging(System.Nullable<int> value);
    partial void OnContinentIDChanged();
    partial void OnMountainRange1Changing(string value);
    partial void OnMountainRange1Changed();
    partial void OnPrettyUrlChanging(string value);
    partial void OnPrettyUrlChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public MountainRange()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContinentID", DbType="Int")]
		public System.Nullable<int> ContinentID
		{
			get
			{
				return this._ContinentID;
			}
			set
			{
				if ((this._ContinentID != value))
				{
					this.OnContinentIDChanging(value);
					this.SendPropertyChanging();
					this._ContinentID = value;
					this.SendPropertyChanged("ContinentID");
					this.OnContinentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MountainRange", Storage="_MountainRange1", DbType="VarChar(50)")]
		public string MountainRange1
		{
			get
			{
				return this._MountainRange1;
			}
			set
			{
				if ((this._MountainRange1 != value))
				{
					this.OnMountainRange1Changing(value);
					this.SendPropertyChanging();
					this._MountainRange1 = value;
					this.SendPropertyChanged("MountainRange1");
					this.OnMountainRange1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrettyUrl", DbType="VarChar(50)")]
		public string PrettyUrl
		{
			get
			{
				return this._PrettyUrl;
			}
			set
			{
				if ((this._PrettyUrl != value))
				{
					this.OnPrettyUrlChanging(value);
					this.SendPropertyChanging();
					this._PrettyUrl = value;
					this.SendPropertyChanged("PrettyUrl");
					this.OnPrettyUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewsFeed")]
	public partial class NewsFeed : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FeedURL;
		
		private string _FeedSite;
		
		private string _FeedName;
		
		private string _FeedDescription;
		
		private string _FaviconURL;
		
		private bool _UseFavicon;
		
		private int _NewsFeedTypeID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private int _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private int _UpdatedUserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFeedURLChanging(string value);
    partial void OnFeedURLChanged();
    partial void OnFeedSiteChanging(string value);
    partial void OnFeedSiteChanged();
    partial void OnFeedNameChanging(string value);
    partial void OnFeedNameChanged();
    partial void OnFeedDescriptionChanging(string value);
    partial void OnFeedDescriptionChanged();
    partial void OnFaviconURLChanging(string value);
    partial void OnFaviconURLChanged();
    partial void OnUseFaviconChanging(bool value);
    partial void OnUseFaviconChanged();
    partial void OnNewsFeedTypeIDChanging(int value);
    partial void OnNewsFeedTypeIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(int value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(int value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public NewsFeed()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeedURL", DbType="VarChar(200)")]
		public string FeedURL
		{
			get
			{
				return this._FeedURL;
			}
			set
			{
				if ((this._FeedURL != value))
				{
					this.OnFeedURLChanging(value);
					this.SendPropertyChanging();
					this._FeedURL = value;
					this.SendPropertyChanged("FeedURL");
					this.OnFeedURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeedSite", DbType="VarChar(200)")]
		public string FeedSite
		{
			get
			{
				return this._FeedSite;
			}
			set
			{
				if ((this._FeedSite != value))
				{
					this.OnFeedSiteChanging(value);
					this.SendPropertyChanging();
					this._FeedSite = value;
					this.SendPropertyChanged("FeedSite");
					this.OnFeedSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeedName", DbType="VarChar(200)")]
		public string FeedName
		{
			get
			{
				return this._FeedName;
			}
			set
			{
				if ((this._FeedName != value))
				{
					this.OnFeedNameChanging(value);
					this.SendPropertyChanging();
					this._FeedName = value;
					this.SendPropertyChanged("FeedName");
					this.OnFeedNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeedDescription", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string FeedDescription
		{
			get
			{
				return this._FeedDescription;
			}
			set
			{
				if ((this._FeedDescription != value))
				{
					this.OnFeedDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FeedDescription = value;
					this.SendPropertyChanged("FeedDescription");
					this.OnFeedDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaviconURL", DbType="VarChar(200)")]
		public string FaviconURL
		{
			get
			{
				return this._FaviconURL;
			}
			set
			{
				if ((this._FaviconURL != value))
				{
					this.OnFaviconURLChanging(value);
					this.SendPropertyChanging();
					this._FaviconURL = value;
					this.SendPropertyChanged("FaviconURL");
					this.OnFaviconURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseFavicon", DbType="Bit NOT NULL")]
		public bool UseFavicon
		{
			get
			{
				return this._UseFavicon;
			}
			set
			{
				if ((this._UseFavicon != value))
				{
					this.OnUseFaviconChanging(value);
					this.SendPropertyChanging();
					this._UseFavicon = value;
					this.SendPropertyChanged("UseFavicon");
					this.OnUseFaviconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsFeedTypeID", DbType="Int NOT NULL")]
		public int NewsFeedTypeID
		{
			get
			{
				return this._NewsFeedTypeID;
			}
			set
			{
				if ((this._NewsFeedTypeID != value))
				{
					this.OnNewsFeedTypeIDChanging(value);
					this.SendPropertyChanging();
					this._NewsFeedTypeID = value;
					this.SendPropertyChanged("NewsFeedTypeID");
					this.OnNewsFeedTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int NOT NULL")]
		public int CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int NOT NULL")]
		public int UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Picture")]
	public partial class Picture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _OriginalFilename;
		
		private string _Title;
		
		private string _Description;
		
		private string _Filename;
		
		private int _ResortID;
		
		private System.DateTime _CreatedDate;
		
		private int _CreatedUserID;
		
		private System.DateTime _UpdatedDate;
		
		private int _UpdatedUserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOriginalFilenameChanging(string value);
    partial void OnOriginalFilenameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFilenameChanging(string value);
    partial void OnFilenameChanged();
    partial void OnResortIDChanging(int value);
    partial void OnResortIDChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(int value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(int value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public Picture()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalFilename", DbType="VarChar(250)")]
		public string OriginalFilename
		{
			get
			{
				return this._OriginalFilename;
			}
			set
			{
				if ((this._OriginalFilename != value))
				{
					this.OnOriginalFilenameChanging(value);
					this.SendPropertyChanging();
					this._OriginalFilename = value;
					this.SendPropertyChanged("OriginalFilename");
					this.OnOriginalFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(250)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filename", DbType="VarChar(50)")]
		public string Filename
		{
			get
			{
				return this._Filename;
			}
			set
			{
				if ((this._Filename != value))
				{
					this.OnFilenameChanging(value);
					this.SendPropertyChanging();
					this._Filename = value;
					this.SendPropertyChanged("Filename");
					this.OnFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortID", DbType="Int NOT NULL")]
		public int ResortID
		{
			get
			{
				return this._ResortID;
			}
			set
			{
				if ((this._ResortID != value))
				{
					this.OnResortIDChanging(value);
					this.SendPropertyChanging();
					this._ResortID = value;
					this.SendPropertyChanged("ResortID");
					this.OnResortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int NOT NULL")]
		public int CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int NOT NULL")]
		public int UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Post")]
	public partial class Post : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ThreadID;
		
		private string _PostText;
		
		private bool _IsVisible;
		
		private bool _IsSticky;
		
		private bool _IsAdmin;
		
		private int _PostStatusID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private int _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
		private EntityRef<Thread> _Thread;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnThreadIDChanging(int value);
    partial void OnThreadIDChanged();
    partial void OnPostTextChanging(string value);
    partial void OnPostTextChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    partial void OnIsStickyChanging(bool value);
    partial void OnIsStickyChanged();
    partial void OnIsAdminChanging(bool value);
    partial void OnIsAdminChanged();
    partial void OnPostStatusIDChanging(int value);
    partial void OnPostStatusIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(int value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public Post()
		{
			this._Thread = default(EntityRef<Thread>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThreadID", DbType="Int NOT NULL")]
		public int ThreadID
		{
			get
			{
				return this._ThreadID;
			}
			set
			{
				if ((this._ThreadID != value))
				{
					if (this._Thread.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThreadIDChanging(value);
					this.SendPropertyChanging();
					this._ThreadID = value;
					this.SendPropertyChanged("ThreadID");
					this.OnThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostText", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PostText
		{
			get
			{
				return this._PostText;
			}
			set
			{
				if ((this._PostText != value))
				{
					this.OnPostTextChanging(value);
					this.SendPropertyChanging();
					this._PostText = value;
					this.SendPropertyChanged("PostText");
					this.OnPostTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit NOT NULL")]
		public bool IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSticky", DbType="Bit NOT NULL")]
		public bool IsSticky
		{
			get
			{
				return this._IsSticky;
			}
			set
			{
				if ((this._IsSticky != value))
				{
					this.OnIsStickyChanging(value);
					this.SendPropertyChanging();
					this._IsSticky = value;
					this.SendPropertyChanged("IsSticky");
					this.OnIsStickyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Bit NOT NULL")]
		public bool IsAdmin
		{
			get
			{
				return this._IsAdmin;
			}
			set
			{
				if ((this._IsAdmin != value))
				{
					this.OnIsAdminChanging(value);
					this.SendPropertyChanging();
					this._IsAdmin = value;
					this.SendPropertyChanged("IsAdmin");
					this.OnIsAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostStatusID", DbType="Int NOT NULL")]
		public int PostStatusID
		{
			get
			{
				return this._PostStatusID;
			}
			set
			{
				if ((this._PostStatusID != value))
				{
					this.OnPostStatusIDChanging(value);
					this.SendPropertyChanging();
					this._PostStatusID = value;
					this.SendPropertyChanged("PostStatusID");
					this.OnPostStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int NOT NULL")]
		public int CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Thread_Post", Storage="_Thread", ThisKey="ThreadID", OtherKey="ID", IsForeignKey=true)]
		public Thread Thread
		{
			get
			{
				return this._Thread.Entity;
			}
			set
			{
				Thread previousValue = this._Thread.Entity;
				if (((previousValue != value) 
							|| (this._Thread.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Thread.Entity = null;
						previousValue.Posts.Remove(this);
					}
					this._Thread.Entity = value;
					if ((value != null))
					{
						value.Posts.Add(this);
						this._ThreadID = value.ID;
					}
					else
					{
						this._ThreadID = default(int);
					}
					this.SendPropertyChanged("Thread");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProCon")]
	public partial class ProCon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<bool> _IsPro;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIsProChanging(System.Nullable<bool> value);
    partial void OnIsProChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public ProCon()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPro", DbType="Bit")]
		public System.Nullable<bool> IsPro
		{
			get
			{
				return this._IsPro;
			}
			set
			{
				if ((this._IsPro != value))
				{
					this.OnIsProChanging(value);
					this.SendPropertyChanging();
					this._IsPro = value;
					this.SendPropertyChanged("IsPro");
					this.OnIsProChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Region")]
	public partial class Region : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CountryID;
		
		private System.Nullable<int> _ParentRegionID;
		
		private System.Nullable<int> _RegionLevel;
		
		private string _Name;
		
		private string _PrettyUrl;
		
		private bool _HasResorts;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCountryIDChanging(System.Nullable<int> value);
    partial void OnCountryIDChanged();
    partial void OnParentRegionIDChanging(System.Nullable<int> value);
    partial void OnParentRegionIDChanged();
    partial void OnRegionLevelChanging(System.Nullable<int> value);
    partial void OnRegionLevelChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPrettyUrlChanging(string value);
    partial void OnPrettyUrlChanged();
    partial void OnHasResortsChanging(bool value);
    partial void OnHasResortsChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public Region()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int")]
		public System.Nullable<int> CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentRegionID", DbType="Int")]
		public System.Nullable<int> ParentRegionID
		{
			get
			{
				return this._ParentRegionID;
			}
			set
			{
				if ((this._ParentRegionID != value))
				{
					this.OnParentRegionIDChanging(value);
					this.SendPropertyChanging();
					this._ParentRegionID = value;
					this.SendPropertyChanged("ParentRegionID");
					this.OnParentRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionLevel", DbType="Int")]
		public System.Nullable<int> RegionLevel
		{
			get
			{
				return this._RegionLevel;
			}
			set
			{
				if ((this._RegionLevel != value))
				{
					this.OnRegionLevelChanging(value);
					this.SendPropertyChanging();
					this._RegionLevel = value;
					this.SendPropertyChanged("RegionLevel");
					this.OnRegionLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrettyUrl", DbType="VarChar(100)")]
		public string PrettyUrl
		{
			get
			{
				return this._PrettyUrl;
			}
			set
			{
				if ((this._PrettyUrl != value))
				{
					this.OnPrettyUrlChanging(value);
					this.SendPropertyChanging();
					this._PrettyUrl = value;
					this.SendPropertyChanged("PrettyUrl");
					this.OnPrettyUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasResorts", DbType="Bit NOT NULL")]
		public bool HasResorts
		{
			get
			{
				return this._HasResorts;
			}
			set
			{
				if ((this._HasResorts != value))
				{
					this.OnHasResortsChanging(value);
					this.SendPropertyChanging();
					this._HasResorts = value;
					this.SendPropertyChanged("HasResorts");
					this.OnHasResortsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resort")]
	public partial class Resort : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _NameFriendlyFormat;
		
		private bool _Display;
		
		private string _PrettyUrl;
		
		private string _PrettyUrlFriendlyFormat;
		
		private string _AlsoKnownAs;
		
		private int _CountryID;
		
		private string _CountryName;
		
		private int _ContinentID;
		
		private string _ContinentName;
		
		private System.Nullable<double> _Latitude;
		
		private System.Nullable<double> _Longitude;
		
		private System.Nullable<int> _GeonameID;
		
		private System.Nullable<bool> _IsNorthernHemisphere;
		
		private string _Overview;
		
		private System.Nullable<bool> _IsFeaturedResort;
		
		private bool _CanPublish;
		
		private string _WikipediaUrl;
		
		private string _PictureName;
		
		private string _PictureUrl;
		
		private string _PictureLicenceType;
		
		private string _PictureAuthor;
		
		private string _PictureAuthorUrl;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
		private int _Score;
		
		private int _ScoreTotal;
		
		private int _ScoreCount;
		
		private int _ResortSuitsExpert;
		
		private int _ResortSuitsAdvanced;
		
		private int _ResortSuitsIntermediate;
		
		private int _ResortSuitsBeginner;
		
		private int _ResortSuitsLively;
		
		private int _ResortSuitsAverage;
		
		private int _ResortSuitsQuiet;
		
		private int _ResortSuitsSkiers;
		
		private int _ResortSuitsSnowboarders;
		
		private int _ResortSuitsBoth;
		
		private int _ResortSuitsExpensive;
		
		private int _ResortSuitsAffordable;
		
		private int _ResortSuitsCheap;
		
		private int _LiftRating;
		
		private int _SnowRating;
		
		private int _QueueRating;
		
		private int _SceneryRating;
		
		private int _ConvenienceRating;
		
		private int _AccomodationRating;
		
		private int _FoodRating;
		
		private int _FacilitiesRating;
		
		private int _NightlifeRating;
		
		private int _LiftTotal;
		
		private int _LiftCount;
		
		private int _SnowTotal;
		
		private int _SnowCount;
		
		private int _QueueTotal;
		
		private int _QueueCount;
		
		private int _SceneryTotal;
		
		private int _SceneryCount;
		
		private int _ConvenienceTotal;
		
		private int _ConvenienceCount;
		
		private int _AccomodationTotal;
		
		private int _AccomodationCount;
		
		private int _FoodTotal;
		
		private int _FoodCount;
		
		private int _FacilitiesTotal;
		
		private int _FacilitiesCount;
		
		private int _NightlifeTotal;
		
		private int _NightlifeCount;
		
		private int _VisitedCount;
		
		private int _FavedCount;
		
		private bool _IsSkiArea;
		
		private EntitySet<CheckIn> _CheckIns;
		
		private EntitySet<LinkResortUser> _LinkResortUsers;
		
		private EntitySet<ResortStat> _ResortStats;
		
		private EntityRef<Continent> _Continent;
		
		private EntityRef<Country> _Country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameFriendlyFormatChanging(string value);
    partial void OnNameFriendlyFormatChanged();
    partial void OnDisplayChanging(bool value);
    partial void OnDisplayChanged();
    partial void OnPrettyUrlChanging(string value);
    partial void OnPrettyUrlChanged();
    partial void OnPrettyUrlFriendlyFormatChanging(string value);
    partial void OnPrettyUrlFriendlyFormatChanged();
    partial void OnAlsoKnownAsChanging(string value);
    partial void OnAlsoKnownAsChanged();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    partial void OnContinentIDChanging(int value);
    partial void OnContinentIDChanged();
    partial void OnContinentNameChanging(string value);
    partial void OnContinentNameChanged();
    partial void OnLatitudeChanging(System.Nullable<double> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<double> value);
    partial void OnLongitudeChanged();
    partial void OnGeonameIDChanging(System.Nullable<int> value);
    partial void OnGeonameIDChanged();
    partial void OnIsNorthernHemisphereChanging(System.Nullable<bool> value);
    partial void OnIsNorthernHemisphereChanged();
    partial void OnOverviewChanging(string value);
    partial void OnOverviewChanged();
    partial void OnIsFeaturedResortChanging(System.Nullable<bool> value);
    partial void OnIsFeaturedResortChanged();
    partial void OnCanPublishChanging(bool value);
    partial void OnCanPublishChanged();
    partial void OnWikipediaUrlChanging(string value);
    partial void OnWikipediaUrlChanged();
    partial void OnPictureNameChanging(string value);
    partial void OnPictureNameChanged();
    partial void OnPictureUrlChanging(string value);
    partial void OnPictureUrlChanged();
    partial void OnPictureLicenceTypeChanging(string value);
    partial void OnPictureLicenceTypeChanged();
    partial void OnPictureAuthorChanging(string value);
    partial void OnPictureAuthorChanged();
    partial void OnPictureAuthorUrlChanging(string value);
    partial void OnPictureAuthorUrlChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    partial void OnScoreChanging(int value);
    partial void OnScoreChanged();
    partial void OnScoreTotalChanging(int value);
    partial void OnScoreTotalChanged();
    partial void OnScoreCountChanging(int value);
    partial void OnScoreCountChanged();
    partial void OnResortSuitsExpertChanging(int value);
    partial void OnResortSuitsExpertChanged();
    partial void OnResortSuitsAdvancedChanging(int value);
    partial void OnResortSuitsAdvancedChanged();
    partial void OnResortSuitsIntermediateChanging(int value);
    partial void OnResortSuitsIntermediateChanged();
    partial void OnResortSuitsBeginnerChanging(int value);
    partial void OnResortSuitsBeginnerChanged();
    partial void OnResortSuitsLivelyChanging(int value);
    partial void OnResortSuitsLivelyChanged();
    partial void OnResortSuitsAverageChanging(int value);
    partial void OnResortSuitsAverageChanged();
    partial void OnResortSuitsQuietChanging(int value);
    partial void OnResortSuitsQuietChanged();
    partial void OnResortSuitsSkiersChanging(int value);
    partial void OnResortSuitsSkiersChanged();
    partial void OnResortSuitsSnowboardersChanging(int value);
    partial void OnResortSuitsSnowboardersChanged();
    partial void OnResortSuitsBothChanging(int value);
    partial void OnResortSuitsBothChanged();
    partial void OnResortSuitsExpensiveChanging(int value);
    partial void OnResortSuitsExpensiveChanged();
    partial void OnResortSuitsAffordableChanging(int value);
    partial void OnResortSuitsAffordableChanged();
    partial void OnResortSuitsCheapChanging(int value);
    partial void OnResortSuitsCheapChanged();
    partial void OnLiftRatingChanging(int value);
    partial void OnLiftRatingChanged();
    partial void OnSnowRatingChanging(int value);
    partial void OnSnowRatingChanged();
    partial void OnQueueRatingChanging(int value);
    partial void OnQueueRatingChanged();
    partial void OnSceneryRatingChanging(int value);
    partial void OnSceneryRatingChanged();
    partial void OnConvenienceRatingChanging(int value);
    partial void OnConvenienceRatingChanged();
    partial void OnAccomodationRatingChanging(int value);
    partial void OnAccomodationRatingChanged();
    partial void OnFoodRatingChanging(int value);
    partial void OnFoodRatingChanged();
    partial void OnFacilitiesRatingChanging(int value);
    partial void OnFacilitiesRatingChanged();
    partial void OnNightlifeRatingChanging(int value);
    partial void OnNightlifeRatingChanged();
    partial void OnLiftTotalChanging(int value);
    partial void OnLiftTotalChanged();
    partial void OnLiftCountChanging(int value);
    partial void OnLiftCountChanged();
    partial void OnSnowTotalChanging(int value);
    partial void OnSnowTotalChanged();
    partial void OnSnowCountChanging(int value);
    partial void OnSnowCountChanged();
    partial void OnQueueTotalChanging(int value);
    partial void OnQueueTotalChanged();
    partial void OnQueueCountChanging(int value);
    partial void OnQueueCountChanged();
    partial void OnSceneryTotalChanging(int value);
    partial void OnSceneryTotalChanged();
    partial void OnSceneryCountChanging(int value);
    partial void OnSceneryCountChanged();
    partial void OnConvenienceTotalChanging(int value);
    partial void OnConvenienceTotalChanged();
    partial void OnConvenienceCountChanging(int value);
    partial void OnConvenienceCountChanged();
    partial void OnAccomodationTotalChanging(int value);
    partial void OnAccomodationTotalChanged();
    partial void OnAccomodationCountChanging(int value);
    partial void OnAccomodationCountChanged();
    partial void OnFoodTotalChanging(int value);
    partial void OnFoodTotalChanged();
    partial void OnFoodCountChanging(int value);
    partial void OnFoodCountChanged();
    partial void OnFacilitiesTotalChanging(int value);
    partial void OnFacilitiesTotalChanged();
    partial void OnFacilitiesCountChanging(int value);
    partial void OnFacilitiesCountChanged();
    partial void OnNightlifeTotalChanging(int value);
    partial void OnNightlifeTotalChanged();
    partial void OnNightlifeCountChanging(int value);
    partial void OnNightlifeCountChanged();
    partial void OnVisitedCountChanging(int value);
    partial void OnVisitedCountChanged();
    partial void OnFavedCountChanging(int value);
    partial void OnFavedCountChanged();
    partial void OnIsSkiAreaChanging(bool value);
    partial void OnIsSkiAreaChanged();
    #endregion
		
		public Resort()
		{
			this._CheckIns = new EntitySet<CheckIn>(new Action<CheckIn>(this.attach_CheckIns), new Action<CheckIn>(this.detach_CheckIns));
			this._LinkResortUsers = new EntitySet<LinkResortUser>(new Action<LinkResortUser>(this.attach_LinkResortUsers), new Action<LinkResortUser>(this.detach_LinkResortUsers));
			this._ResortStats = new EntitySet<ResortStat>(new Action<ResortStat>(this.attach_ResortStats), new Action<ResortStat>(this.detach_ResortStats));
			this._Continent = default(EntityRef<Continent>);
			this._Country = default(EntityRef<Country>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFriendlyFormat", DbType="VarChar(100)")]
		public string NameFriendlyFormat
		{
			get
			{
				return this._NameFriendlyFormat;
			}
			set
			{
				if ((this._NameFriendlyFormat != value))
				{
					this.OnNameFriendlyFormatChanging(value);
					this.SendPropertyChanging();
					this._NameFriendlyFormat = value;
					this.SendPropertyChanged("NameFriendlyFormat");
					this.OnNameFriendlyFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Display", DbType="Bit NOT NULL")]
		public bool Display
		{
			get
			{
				return this._Display;
			}
			set
			{
				if ((this._Display != value))
				{
					this.OnDisplayChanging(value);
					this.SendPropertyChanging();
					this._Display = value;
					this.SendPropertyChanged("Display");
					this.OnDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrettyUrl", DbType="VarChar(100)")]
		public string PrettyUrl
		{
			get
			{
				return this._PrettyUrl;
			}
			set
			{
				if ((this._PrettyUrl != value))
				{
					this.OnPrettyUrlChanging(value);
					this.SendPropertyChanging();
					this._PrettyUrl = value;
					this.SendPropertyChanged("PrettyUrl");
					this.OnPrettyUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrettyUrlFriendlyFormat", DbType="VarChar(100)")]
		public string PrettyUrlFriendlyFormat
		{
			get
			{
				return this._PrettyUrlFriendlyFormat;
			}
			set
			{
				if ((this._PrettyUrlFriendlyFormat != value))
				{
					this.OnPrettyUrlFriendlyFormatChanging(value);
					this.SendPropertyChanging();
					this._PrettyUrlFriendlyFormat = value;
					this.SendPropertyChanged("PrettyUrlFriendlyFormat");
					this.OnPrettyUrlFriendlyFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlsoKnownAs", DbType="VarChar(250)")]
		public string AlsoKnownAs
		{
			get
			{
				return this._AlsoKnownAs;
			}
			set
			{
				if ((this._AlsoKnownAs != value))
				{
					this.OnAlsoKnownAsChanging(value);
					this.SendPropertyChanging();
					this._AlsoKnownAs = value;
					this.SendPropertyChanged("AlsoKnownAs");
					this.OnAlsoKnownAsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int NOT NULL")]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="VarChar(100)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContinentID", DbType="Int NOT NULL")]
		public int ContinentID
		{
			get
			{
				return this._ContinentID;
			}
			set
			{
				if ((this._ContinentID != value))
				{
					if (this._Continent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContinentIDChanging(value);
					this.SendPropertyChanging();
					this._ContinentID = value;
					this.SendPropertyChanged("ContinentID");
					this.OnContinentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContinentName", DbType="VarChar(100)")]
		public string ContinentName
		{
			get
			{
				return this._ContinentName;
			}
			set
			{
				if ((this._ContinentName != value))
				{
					this.OnContinentNameChanging(value);
					this.SendPropertyChanging();
					this._ContinentName = value;
					this.SendPropertyChanged("ContinentName");
					this.OnContinentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float")]
		public System.Nullable<double> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float")]
		public System.Nullable<double> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeonameID", DbType="Int")]
		public System.Nullable<int> GeonameID
		{
			get
			{
				return this._GeonameID;
			}
			set
			{
				if ((this._GeonameID != value))
				{
					this.OnGeonameIDChanging(value);
					this.SendPropertyChanging();
					this._GeonameID = value;
					this.SendPropertyChanged("GeonameID");
					this.OnGeonameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNorthernHemisphere", DbType="Bit")]
		public System.Nullable<bool> IsNorthernHemisphere
		{
			get
			{
				return this._IsNorthernHemisphere;
			}
			set
			{
				if ((this._IsNorthernHemisphere != value))
				{
					this.OnIsNorthernHemisphereChanging(value);
					this.SendPropertyChanging();
					this._IsNorthernHemisphere = value;
					this.SendPropertyChanged("IsNorthernHemisphere");
					this.OnIsNorthernHemisphereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Overview", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Overview
		{
			get
			{
				return this._Overview;
			}
			set
			{
				if ((this._Overview != value))
				{
					this.OnOverviewChanging(value);
					this.SendPropertyChanging();
					this._Overview = value;
					this.SendPropertyChanged("Overview");
					this.OnOverviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFeaturedResort", DbType="Bit")]
		public System.Nullable<bool> IsFeaturedResort
		{
			get
			{
				return this._IsFeaturedResort;
			}
			set
			{
				if ((this._IsFeaturedResort != value))
				{
					this.OnIsFeaturedResortChanging(value);
					this.SendPropertyChanging();
					this._IsFeaturedResort = value;
					this.SendPropertyChanged("IsFeaturedResort");
					this.OnIsFeaturedResortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanPublish", DbType="Bit NOT NULL")]
		public bool CanPublish
		{
			get
			{
				return this._CanPublish;
			}
			set
			{
				if ((this._CanPublish != value))
				{
					this.OnCanPublishChanging(value);
					this.SendPropertyChanging();
					this._CanPublish = value;
					this.SendPropertyChanged("CanPublish");
					this.OnCanPublishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WikipediaUrl", DbType="VarChar(250)")]
		public string WikipediaUrl
		{
			get
			{
				return this._WikipediaUrl;
			}
			set
			{
				if ((this._WikipediaUrl != value))
				{
					this.OnWikipediaUrlChanging(value);
					this.SendPropertyChanging();
					this._WikipediaUrl = value;
					this.SendPropertyChanged("WikipediaUrl");
					this.OnWikipediaUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureName", DbType="VarChar(250)")]
		public string PictureName
		{
			get
			{
				return this._PictureName;
			}
			set
			{
				if ((this._PictureName != value))
				{
					this.OnPictureNameChanging(value);
					this.SendPropertyChanging();
					this._PictureName = value;
					this.SendPropertyChanged("PictureName");
					this.OnPictureNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureUrl", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string PictureUrl
		{
			get
			{
				return this._PictureUrl;
			}
			set
			{
				if ((this._PictureUrl != value))
				{
					this.OnPictureUrlChanging(value);
					this.SendPropertyChanging();
					this._PictureUrl = value;
					this.SendPropertyChanged("PictureUrl");
					this.OnPictureUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureLicenceType", DbType="VarChar(100)")]
		public string PictureLicenceType
		{
			get
			{
				return this._PictureLicenceType;
			}
			set
			{
				if ((this._PictureLicenceType != value))
				{
					this.OnPictureLicenceTypeChanging(value);
					this.SendPropertyChanging();
					this._PictureLicenceType = value;
					this.SendPropertyChanged("PictureLicenceType");
					this.OnPictureLicenceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureAuthor", DbType="VarChar(50)")]
		public string PictureAuthor
		{
			get
			{
				return this._PictureAuthor;
			}
			set
			{
				if ((this._PictureAuthor != value))
				{
					this.OnPictureAuthorChanging(value);
					this.SendPropertyChanging();
					this._PictureAuthor = value;
					this.SendPropertyChanged("PictureAuthor");
					this.OnPictureAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureAuthorUrl", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string PictureAuthorUrl
		{
			get
			{
				return this._PictureAuthorUrl;
			}
			set
			{
				if ((this._PictureAuthorUrl != value))
				{
					this.OnPictureAuthorUrlChanging(value);
					this.SendPropertyChanging();
					this._PictureAuthorUrl = value;
					this.SendPropertyChanged("PictureAuthorUrl");
					this.OnPictureAuthorUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Int NOT NULL")]
		public int Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreTotal", DbType="Int NOT NULL")]
		public int ScoreTotal
		{
			get
			{
				return this._ScoreTotal;
			}
			set
			{
				if ((this._ScoreTotal != value))
				{
					this.OnScoreTotalChanging(value);
					this.SendPropertyChanging();
					this._ScoreTotal = value;
					this.SendPropertyChanged("ScoreTotal");
					this.OnScoreTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreCount", DbType="Int NOT NULL")]
		public int ScoreCount
		{
			get
			{
				return this._ScoreCount;
			}
			set
			{
				if ((this._ScoreCount != value))
				{
					this.OnScoreCountChanging(value);
					this.SendPropertyChanging();
					this._ScoreCount = value;
					this.SendPropertyChanged("ScoreCount");
					this.OnScoreCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortSuitsExpert", DbType="Int NOT NULL")]
		public int ResortSuitsExpert
		{
			get
			{
				return this._ResortSuitsExpert;
			}
			set
			{
				if ((this._ResortSuitsExpert != value))
				{
					this.OnResortSuitsExpertChanging(value);
					this.SendPropertyChanging();
					this._ResortSuitsExpert = value;
					this.SendPropertyChanged("ResortSuitsExpert");
					this.OnResortSuitsExpertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortSuitsAdvanced", DbType="Int NOT NULL")]
		public int ResortSuitsAdvanced
		{
			get
			{
				return this._ResortSuitsAdvanced;
			}
			set
			{
				if ((this._ResortSuitsAdvanced != value))
				{
					this.OnResortSuitsAdvancedChanging(value);
					this.SendPropertyChanging();
					this._ResortSuitsAdvanced = value;
					this.SendPropertyChanged("ResortSuitsAdvanced");
					this.OnResortSuitsAdvancedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortSuitsIntermediate", DbType="Int NOT NULL")]
		public int ResortSuitsIntermediate
		{
			get
			{
				return this._ResortSuitsIntermediate;
			}
			set
			{
				if ((this._ResortSuitsIntermediate != value))
				{
					this.OnResortSuitsIntermediateChanging(value);
					this.SendPropertyChanging();
					this._ResortSuitsIntermediate = value;
					this.SendPropertyChanged("ResortSuitsIntermediate");
					this.OnResortSuitsIntermediateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortSuitsBeginner", DbType="Int NOT NULL")]
		public int ResortSuitsBeginner
		{
			get
			{
				return this._ResortSuitsBeginner;
			}
			set
			{
				if ((this._ResortSuitsBeginner != value))
				{
					this.OnResortSuitsBeginnerChanging(value);
					this.SendPropertyChanging();
					this._ResortSuitsBeginner = value;
					this.SendPropertyChanged("ResortSuitsBeginner");
					this.OnResortSuitsBeginnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortSuitsLively", DbType="Int NOT NULL")]
		public int ResortSuitsLively
		{
			get
			{
				return this._ResortSuitsLively;
			}
			set
			{
				if ((this._ResortSuitsLively != value))
				{
					this.OnResortSuitsLivelyChanging(value);
					this.SendPropertyChanging();
					this._ResortSuitsLively = value;
					this.SendPropertyChanged("ResortSuitsLively");
					this.OnResortSuitsLivelyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortSuitsAverage", DbType="Int NOT NULL")]
		public int ResortSuitsAverage
		{
			get
			{
				return this._ResortSuitsAverage;
			}
			set
			{
				if ((this._ResortSuitsAverage != value))
				{
					this.OnResortSuitsAverageChanging(value);
					this.SendPropertyChanging();
					this._ResortSuitsAverage = value;
					this.SendPropertyChanged("ResortSuitsAverage");
					this.OnResortSuitsAverageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortSuitsQuiet", DbType="Int NOT NULL")]
		public int ResortSuitsQuiet
		{
			get
			{
				return this._ResortSuitsQuiet;
			}
			set
			{
				if ((this._ResortSuitsQuiet != value))
				{
					this.OnResortSuitsQuietChanging(value);
					this.SendPropertyChanging();
					this._ResortSuitsQuiet = value;
					this.SendPropertyChanged("ResortSuitsQuiet");
					this.OnResortSuitsQuietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortSuitsSkiers", DbType="Int NOT NULL")]
		public int ResortSuitsSkiers
		{
			get
			{
				return this._ResortSuitsSkiers;
			}
			set
			{
				if ((this._ResortSuitsSkiers != value))
				{
					this.OnResortSuitsSkiersChanging(value);
					this.SendPropertyChanging();
					this._ResortSuitsSkiers = value;
					this.SendPropertyChanged("ResortSuitsSkiers");
					this.OnResortSuitsSkiersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortSuitsSnowboarders", DbType="Int NOT NULL")]
		public int ResortSuitsSnowboarders
		{
			get
			{
				return this._ResortSuitsSnowboarders;
			}
			set
			{
				if ((this._ResortSuitsSnowboarders != value))
				{
					this.OnResortSuitsSnowboardersChanging(value);
					this.SendPropertyChanging();
					this._ResortSuitsSnowboarders = value;
					this.SendPropertyChanged("ResortSuitsSnowboarders");
					this.OnResortSuitsSnowboardersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortSuitsBoth", DbType="Int NOT NULL")]
		public int ResortSuitsBoth
		{
			get
			{
				return this._ResortSuitsBoth;
			}
			set
			{
				if ((this._ResortSuitsBoth != value))
				{
					this.OnResortSuitsBothChanging(value);
					this.SendPropertyChanging();
					this._ResortSuitsBoth = value;
					this.SendPropertyChanged("ResortSuitsBoth");
					this.OnResortSuitsBothChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortSuitsExpensive", DbType="Int NOT NULL")]
		public int ResortSuitsExpensive
		{
			get
			{
				return this._ResortSuitsExpensive;
			}
			set
			{
				if ((this._ResortSuitsExpensive != value))
				{
					this.OnResortSuitsExpensiveChanging(value);
					this.SendPropertyChanging();
					this._ResortSuitsExpensive = value;
					this.SendPropertyChanged("ResortSuitsExpensive");
					this.OnResortSuitsExpensiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortSuitsAffordable", DbType="Int NOT NULL")]
		public int ResortSuitsAffordable
		{
			get
			{
				return this._ResortSuitsAffordable;
			}
			set
			{
				if ((this._ResortSuitsAffordable != value))
				{
					this.OnResortSuitsAffordableChanging(value);
					this.SendPropertyChanging();
					this._ResortSuitsAffordable = value;
					this.SendPropertyChanged("ResortSuitsAffordable");
					this.OnResortSuitsAffordableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortSuitsCheap", DbType="Int NOT NULL")]
		public int ResortSuitsCheap
		{
			get
			{
				return this._ResortSuitsCheap;
			}
			set
			{
				if ((this._ResortSuitsCheap != value))
				{
					this.OnResortSuitsCheapChanging(value);
					this.SendPropertyChanging();
					this._ResortSuitsCheap = value;
					this.SendPropertyChanged("ResortSuitsCheap");
					this.OnResortSuitsCheapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiftRating", DbType="Int NOT NULL")]
		public int LiftRating
		{
			get
			{
				return this._LiftRating;
			}
			set
			{
				if ((this._LiftRating != value))
				{
					this.OnLiftRatingChanging(value);
					this.SendPropertyChanging();
					this._LiftRating = value;
					this.SendPropertyChanged("LiftRating");
					this.OnLiftRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SnowRating", DbType="Int NOT NULL")]
		public int SnowRating
		{
			get
			{
				return this._SnowRating;
			}
			set
			{
				if ((this._SnowRating != value))
				{
					this.OnSnowRatingChanging(value);
					this.SendPropertyChanging();
					this._SnowRating = value;
					this.SendPropertyChanged("SnowRating");
					this.OnSnowRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueueRating", DbType="Int NOT NULL")]
		public int QueueRating
		{
			get
			{
				return this._QueueRating;
			}
			set
			{
				if ((this._QueueRating != value))
				{
					this.OnQueueRatingChanging(value);
					this.SendPropertyChanging();
					this._QueueRating = value;
					this.SendPropertyChanged("QueueRating");
					this.OnQueueRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SceneryRating", DbType="Int NOT NULL")]
		public int SceneryRating
		{
			get
			{
				return this._SceneryRating;
			}
			set
			{
				if ((this._SceneryRating != value))
				{
					this.OnSceneryRatingChanging(value);
					this.SendPropertyChanging();
					this._SceneryRating = value;
					this.SendPropertyChanged("SceneryRating");
					this.OnSceneryRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConvenienceRating", DbType="Int NOT NULL")]
		public int ConvenienceRating
		{
			get
			{
				return this._ConvenienceRating;
			}
			set
			{
				if ((this._ConvenienceRating != value))
				{
					this.OnConvenienceRatingChanging(value);
					this.SendPropertyChanging();
					this._ConvenienceRating = value;
					this.SendPropertyChanged("ConvenienceRating");
					this.OnConvenienceRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccomodationRating", DbType="Int NOT NULL")]
		public int AccomodationRating
		{
			get
			{
				return this._AccomodationRating;
			}
			set
			{
				if ((this._AccomodationRating != value))
				{
					this.OnAccomodationRatingChanging(value);
					this.SendPropertyChanging();
					this._AccomodationRating = value;
					this.SendPropertyChanged("AccomodationRating");
					this.OnAccomodationRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodRating", DbType="Int NOT NULL")]
		public int FoodRating
		{
			get
			{
				return this._FoodRating;
			}
			set
			{
				if ((this._FoodRating != value))
				{
					this.OnFoodRatingChanging(value);
					this.SendPropertyChanging();
					this._FoodRating = value;
					this.SendPropertyChanged("FoodRating");
					this.OnFoodRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilitiesRating", DbType="Int NOT NULL")]
		public int FacilitiesRating
		{
			get
			{
				return this._FacilitiesRating;
			}
			set
			{
				if ((this._FacilitiesRating != value))
				{
					this.OnFacilitiesRatingChanging(value);
					this.SendPropertyChanging();
					this._FacilitiesRating = value;
					this.SendPropertyChanged("FacilitiesRating");
					this.OnFacilitiesRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NightlifeRating", DbType="Int NOT NULL")]
		public int NightlifeRating
		{
			get
			{
				return this._NightlifeRating;
			}
			set
			{
				if ((this._NightlifeRating != value))
				{
					this.OnNightlifeRatingChanging(value);
					this.SendPropertyChanging();
					this._NightlifeRating = value;
					this.SendPropertyChanged("NightlifeRating");
					this.OnNightlifeRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiftTotal", DbType="Int NOT NULL")]
		public int LiftTotal
		{
			get
			{
				return this._LiftTotal;
			}
			set
			{
				if ((this._LiftTotal != value))
				{
					this.OnLiftTotalChanging(value);
					this.SendPropertyChanging();
					this._LiftTotal = value;
					this.SendPropertyChanged("LiftTotal");
					this.OnLiftTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiftCount", DbType="Int NOT NULL")]
		public int LiftCount
		{
			get
			{
				return this._LiftCount;
			}
			set
			{
				if ((this._LiftCount != value))
				{
					this.OnLiftCountChanging(value);
					this.SendPropertyChanging();
					this._LiftCount = value;
					this.SendPropertyChanged("LiftCount");
					this.OnLiftCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SnowTotal", DbType="Int NOT NULL")]
		public int SnowTotal
		{
			get
			{
				return this._SnowTotal;
			}
			set
			{
				if ((this._SnowTotal != value))
				{
					this.OnSnowTotalChanging(value);
					this.SendPropertyChanging();
					this._SnowTotal = value;
					this.SendPropertyChanged("SnowTotal");
					this.OnSnowTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SnowCount", DbType="Int NOT NULL")]
		public int SnowCount
		{
			get
			{
				return this._SnowCount;
			}
			set
			{
				if ((this._SnowCount != value))
				{
					this.OnSnowCountChanging(value);
					this.SendPropertyChanging();
					this._SnowCount = value;
					this.SendPropertyChanged("SnowCount");
					this.OnSnowCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueueTotal", DbType="Int NOT NULL")]
		public int QueueTotal
		{
			get
			{
				return this._QueueTotal;
			}
			set
			{
				if ((this._QueueTotal != value))
				{
					this.OnQueueTotalChanging(value);
					this.SendPropertyChanging();
					this._QueueTotal = value;
					this.SendPropertyChanged("QueueTotal");
					this.OnQueueTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueueCount", DbType="Int NOT NULL")]
		public int QueueCount
		{
			get
			{
				return this._QueueCount;
			}
			set
			{
				if ((this._QueueCount != value))
				{
					this.OnQueueCountChanging(value);
					this.SendPropertyChanging();
					this._QueueCount = value;
					this.SendPropertyChanged("QueueCount");
					this.OnQueueCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SceneryTotal", DbType="Int NOT NULL")]
		public int SceneryTotal
		{
			get
			{
				return this._SceneryTotal;
			}
			set
			{
				if ((this._SceneryTotal != value))
				{
					this.OnSceneryTotalChanging(value);
					this.SendPropertyChanging();
					this._SceneryTotal = value;
					this.SendPropertyChanged("SceneryTotal");
					this.OnSceneryTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SceneryCount", DbType="Int NOT NULL")]
		public int SceneryCount
		{
			get
			{
				return this._SceneryCount;
			}
			set
			{
				if ((this._SceneryCount != value))
				{
					this.OnSceneryCountChanging(value);
					this.SendPropertyChanging();
					this._SceneryCount = value;
					this.SendPropertyChanged("SceneryCount");
					this.OnSceneryCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConvenienceTotal", DbType="Int NOT NULL")]
		public int ConvenienceTotal
		{
			get
			{
				return this._ConvenienceTotal;
			}
			set
			{
				if ((this._ConvenienceTotal != value))
				{
					this.OnConvenienceTotalChanging(value);
					this.SendPropertyChanging();
					this._ConvenienceTotal = value;
					this.SendPropertyChanged("ConvenienceTotal");
					this.OnConvenienceTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConvenienceCount", DbType="Int NOT NULL")]
		public int ConvenienceCount
		{
			get
			{
				return this._ConvenienceCount;
			}
			set
			{
				if ((this._ConvenienceCount != value))
				{
					this.OnConvenienceCountChanging(value);
					this.SendPropertyChanging();
					this._ConvenienceCount = value;
					this.SendPropertyChanged("ConvenienceCount");
					this.OnConvenienceCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccomodationTotal", DbType="Int NOT NULL")]
		public int AccomodationTotal
		{
			get
			{
				return this._AccomodationTotal;
			}
			set
			{
				if ((this._AccomodationTotal != value))
				{
					this.OnAccomodationTotalChanging(value);
					this.SendPropertyChanging();
					this._AccomodationTotal = value;
					this.SendPropertyChanged("AccomodationTotal");
					this.OnAccomodationTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccomodationCount", DbType="Int NOT NULL")]
		public int AccomodationCount
		{
			get
			{
				return this._AccomodationCount;
			}
			set
			{
				if ((this._AccomodationCount != value))
				{
					this.OnAccomodationCountChanging(value);
					this.SendPropertyChanging();
					this._AccomodationCount = value;
					this.SendPropertyChanged("AccomodationCount");
					this.OnAccomodationCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodTotal", DbType="Int NOT NULL")]
		public int FoodTotal
		{
			get
			{
				return this._FoodTotal;
			}
			set
			{
				if ((this._FoodTotal != value))
				{
					this.OnFoodTotalChanging(value);
					this.SendPropertyChanging();
					this._FoodTotal = value;
					this.SendPropertyChanged("FoodTotal");
					this.OnFoodTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodCount", DbType="Int NOT NULL")]
		public int FoodCount
		{
			get
			{
				return this._FoodCount;
			}
			set
			{
				if ((this._FoodCount != value))
				{
					this.OnFoodCountChanging(value);
					this.SendPropertyChanging();
					this._FoodCount = value;
					this.SendPropertyChanged("FoodCount");
					this.OnFoodCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilitiesTotal", DbType="Int NOT NULL")]
		public int FacilitiesTotal
		{
			get
			{
				return this._FacilitiesTotal;
			}
			set
			{
				if ((this._FacilitiesTotal != value))
				{
					this.OnFacilitiesTotalChanging(value);
					this.SendPropertyChanging();
					this._FacilitiesTotal = value;
					this.SendPropertyChanged("FacilitiesTotal");
					this.OnFacilitiesTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilitiesCount", DbType="Int NOT NULL")]
		public int FacilitiesCount
		{
			get
			{
				return this._FacilitiesCount;
			}
			set
			{
				if ((this._FacilitiesCount != value))
				{
					this.OnFacilitiesCountChanging(value);
					this.SendPropertyChanging();
					this._FacilitiesCount = value;
					this.SendPropertyChanged("FacilitiesCount");
					this.OnFacilitiesCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NightlifeTotal", DbType="Int NOT NULL")]
		public int NightlifeTotal
		{
			get
			{
				return this._NightlifeTotal;
			}
			set
			{
				if ((this._NightlifeTotal != value))
				{
					this.OnNightlifeTotalChanging(value);
					this.SendPropertyChanging();
					this._NightlifeTotal = value;
					this.SendPropertyChanged("NightlifeTotal");
					this.OnNightlifeTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NightlifeCount", DbType="Int NOT NULL")]
		public int NightlifeCount
		{
			get
			{
				return this._NightlifeCount;
			}
			set
			{
				if ((this._NightlifeCount != value))
				{
					this.OnNightlifeCountChanging(value);
					this.SendPropertyChanging();
					this._NightlifeCount = value;
					this.SendPropertyChanged("NightlifeCount");
					this.OnNightlifeCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitedCount", DbType="Int NOT NULL")]
		public int VisitedCount
		{
			get
			{
				return this._VisitedCount;
			}
			set
			{
				if ((this._VisitedCount != value))
				{
					this.OnVisitedCountChanging(value);
					this.SendPropertyChanging();
					this._VisitedCount = value;
					this.SendPropertyChanged("VisitedCount");
					this.OnVisitedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FavedCount", DbType="Int NOT NULL")]
		public int FavedCount
		{
			get
			{
				return this._FavedCount;
			}
			set
			{
				if ((this._FavedCount != value))
				{
					this.OnFavedCountChanging(value);
					this.SendPropertyChanging();
					this._FavedCount = value;
					this.SendPropertyChanged("FavedCount");
					this.OnFavedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSkiArea")]
		public bool IsSkiArea
		{
			get
			{
				return this._IsSkiArea;
			}
			set
			{
				if ((this._IsSkiArea != value))
				{
					this.OnIsSkiAreaChanging(value);
					this.SendPropertyChanging();
					this._IsSkiArea = value;
					this.SendPropertyChanged("IsSkiArea");
					this.OnIsSkiAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resort_CheckIn", Storage="_CheckIns", ThisKey="ID", OtherKey="ResortID")]
		public EntitySet<CheckIn> CheckIns
		{
			get
			{
				return this._CheckIns;
			}
			set
			{
				this._CheckIns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resort_LinkResortUser", Storage="_LinkResortUsers", ThisKey="ID", OtherKey="ResortID")]
		public EntitySet<LinkResortUser> LinkResortUsers
		{
			get
			{
				return this._LinkResortUsers;
			}
			set
			{
				this._LinkResortUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resort_ResortStat", Storage="_ResortStats", ThisKey="ID", OtherKey="ResortID")]
		public EntitySet<ResortStat> ResortStats
		{
			get
			{
				return this._ResortStats;
			}
			set
			{
				this._ResortStats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Continent_Resort", Storage="_Continent", ThisKey="ContinentID", OtherKey="ID", IsForeignKey=true)]
		public Continent Continent
		{
			get
			{
				return this._Continent.Entity;
			}
			set
			{
				Continent previousValue = this._Continent.Entity;
				if (((previousValue != value) 
							|| (this._Continent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Continent.Entity = null;
						previousValue.Resorts.Remove(this);
					}
					this._Continent.Entity = value;
					if ((value != null))
					{
						value.Resorts.Add(this);
						this._ContinentID = value.ID;
					}
					else
					{
						this._ContinentID = default(int);
					}
					this.SendPropertyChanged("Continent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Resort", Storage="_Country", ThisKey="CountryID", OtherKey="ID", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.Resorts.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.Resorts.Add(this);
						this._CountryID = value.ID;
					}
					else
					{
						this._CountryID = default(int);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CheckIns(CheckIn entity)
		{
			this.SendPropertyChanging();
			entity.Resort = this;
		}
		
		private void detach_CheckIns(CheckIn entity)
		{
			this.SendPropertyChanging();
			entity.Resort = null;
		}
		
		private void attach_LinkResortUsers(LinkResortUser entity)
		{
			this.SendPropertyChanging();
			entity.Resort = this;
		}
		
		private void detach_LinkResortUsers(LinkResortUser entity)
		{
			this.SendPropertyChanging();
			entity.Resort = null;
		}
		
		private void attach_ResortStats(ResortStat entity)
		{
			this.SendPropertyChanging();
			entity.Resort = this;
		}
		
		private void detach_ResortStats(ResortStat entity)
		{
			this.SendPropertyChanging();
			entity.Resort = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResortAlias")]
	public partial class ResortAlia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ResortID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnResortIDChanging(System.Nullable<int> value);
    partial void OnResortIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public ResortAlia()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortID", DbType="Int")]
		public System.Nullable<int> ResortID
		{
			get
			{
				return this._ResortID;
			}
			set
			{
				if ((this._ResortID != value))
				{
					this.OnResortIDChanging(value);
					this.SendPropertyChanging();
					this._ResortID = value;
					this.SendPropertyChanged("ResortID");
					this.OnResortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResortLink")]
	public partial class ResortLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ResortID;
		
		private System.Nullable<int> _ResortLinkTypeID;
		
		private string _URL;
		
		private string _Name;
		
		private System.Nullable<int> _Sequence;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnResortIDChanging(int value);
    partial void OnResortIDChanged();
    partial void OnResortLinkTypeIDChanging(System.Nullable<int> value);
    partial void OnResortLinkTypeIDChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSequenceChanging(System.Nullable<int> value);
    partial void OnSequenceChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public ResortLink()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortID", DbType="Int NOT NULL")]
		public int ResortID
		{
			get
			{
				return this._ResortID;
			}
			set
			{
				if ((this._ResortID != value))
				{
					this.OnResortIDChanging(value);
					this.SendPropertyChanging();
					this._ResortID = value;
					this.SendPropertyChanged("ResortID");
					this.OnResortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortLinkTypeID", DbType="Int")]
		public System.Nullable<int> ResortLinkTypeID
		{
			get
			{
				return this._ResortLinkTypeID;
			}
			set
			{
				if ((this._ResortLinkTypeID != value))
				{
					this.OnResortLinkTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ResortLinkTypeID = value;
					this.SendPropertyChanged("ResortLinkTypeID");
					this.OnResortLinkTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sequence", DbType="Int")]
		public System.Nullable<int> Sequence
		{
			get
			{
				return this._Sequence;
			}
			set
			{
				if ((this._Sequence != value))
				{
					this.OnSequenceChanging(value);
					this.SendPropertyChanging();
					this._Sequence = value;
					this.SendPropertyChanged("Sequence");
					this.OnSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResortRating")]
	public partial class ResortRating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ResortID;
		
		private int _UserID;
		
		private int _LiftRating;
		
		private int _SnowRating;
		
		private int _QueueRating;
		
		private int _SceneryRating;
		
		private int _ConvenienceRating;
		
		private int _AccomodationRating;
		
		private int _FoodRating;
		
		private int _FacilitiesRating;
		
		private int _NightlifeRating;
		
		private string _Review;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnResortIDChanging(int value);
    partial void OnResortIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnLiftRatingChanging(int value);
    partial void OnLiftRatingChanged();
    partial void OnSnowRatingChanging(int value);
    partial void OnSnowRatingChanged();
    partial void OnQueueRatingChanging(int value);
    partial void OnQueueRatingChanged();
    partial void OnSceneryRatingChanging(int value);
    partial void OnSceneryRatingChanged();
    partial void OnConvenienceRatingChanging(int value);
    partial void OnConvenienceRatingChanged();
    partial void OnAccomodationRatingChanging(int value);
    partial void OnAccomodationRatingChanged();
    partial void OnFoodRatingChanging(int value);
    partial void OnFoodRatingChanged();
    partial void OnFacilitiesRatingChanging(int value);
    partial void OnFacilitiesRatingChanged();
    partial void OnNightlifeRatingChanging(int value);
    partial void OnNightlifeRatingChanged();
    partial void OnReviewChanging(string value);
    partial void OnReviewChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public ResortRating()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortID", DbType="Int NOT NULL")]
		public int ResortID
		{
			get
			{
				return this._ResortID;
			}
			set
			{
				if ((this._ResortID != value))
				{
					this.OnResortIDChanging(value);
					this.SendPropertyChanging();
					this._ResortID = value;
					this.SendPropertyChanged("ResortID");
					this.OnResortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiftRating", DbType="Int NOT NULL")]
		public int LiftRating
		{
			get
			{
				return this._LiftRating;
			}
			set
			{
				if ((this._LiftRating != value))
				{
					this.OnLiftRatingChanging(value);
					this.SendPropertyChanging();
					this._LiftRating = value;
					this.SendPropertyChanged("LiftRating");
					this.OnLiftRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SnowRating", DbType="Int NOT NULL")]
		public int SnowRating
		{
			get
			{
				return this._SnowRating;
			}
			set
			{
				if ((this._SnowRating != value))
				{
					this.OnSnowRatingChanging(value);
					this.SendPropertyChanging();
					this._SnowRating = value;
					this.SendPropertyChanged("SnowRating");
					this.OnSnowRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueueRating", DbType="Int NOT NULL")]
		public int QueueRating
		{
			get
			{
				return this._QueueRating;
			}
			set
			{
				if ((this._QueueRating != value))
				{
					this.OnQueueRatingChanging(value);
					this.SendPropertyChanging();
					this._QueueRating = value;
					this.SendPropertyChanged("QueueRating");
					this.OnQueueRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SceneryRating", DbType="Int NOT NULL")]
		public int SceneryRating
		{
			get
			{
				return this._SceneryRating;
			}
			set
			{
				if ((this._SceneryRating != value))
				{
					this.OnSceneryRatingChanging(value);
					this.SendPropertyChanging();
					this._SceneryRating = value;
					this.SendPropertyChanged("SceneryRating");
					this.OnSceneryRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConvenienceRating", DbType="Int NOT NULL")]
		public int ConvenienceRating
		{
			get
			{
				return this._ConvenienceRating;
			}
			set
			{
				if ((this._ConvenienceRating != value))
				{
					this.OnConvenienceRatingChanging(value);
					this.SendPropertyChanging();
					this._ConvenienceRating = value;
					this.SendPropertyChanged("ConvenienceRating");
					this.OnConvenienceRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccomodationRating", DbType="Int NOT NULL")]
		public int AccomodationRating
		{
			get
			{
				return this._AccomodationRating;
			}
			set
			{
				if ((this._AccomodationRating != value))
				{
					this.OnAccomodationRatingChanging(value);
					this.SendPropertyChanging();
					this._AccomodationRating = value;
					this.SendPropertyChanged("AccomodationRating");
					this.OnAccomodationRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodRating", DbType="Int NOT NULL")]
		public int FoodRating
		{
			get
			{
				return this._FoodRating;
			}
			set
			{
				if ((this._FoodRating != value))
				{
					this.OnFoodRatingChanging(value);
					this.SendPropertyChanging();
					this._FoodRating = value;
					this.SendPropertyChanged("FoodRating");
					this.OnFoodRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilitiesRating", DbType="Int NOT NULL")]
		public int FacilitiesRating
		{
			get
			{
				return this._FacilitiesRating;
			}
			set
			{
				if ((this._FacilitiesRating != value))
				{
					this.OnFacilitiesRatingChanging(value);
					this.SendPropertyChanging();
					this._FacilitiesRating = value;
					this.SendPropertyChanged("FacilitiesRating");
					this.OnFacilitiesRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NightlifeRating", DbType="Int NOT NULL")]
		public int NightlifeRating
		{
			get
			{
				return this._NightlifeRating;
			}
			set
			{
				if ((this._NightlifeRating != value))
				{
					this.OnNightlifeRatingChanging(value);
					this.SendPropertyChanging();
					this._NightlifeRating = value;
					this.SendPropertyChanged("NightlifeRating");
					this.OnNightlifeRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Review", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Review
		{
			get
			{
				return this._Review;
			}
			set
			{
				if ((this._Review != value))
				{
					this.OnReviewChanging(value);
					this.SendPropertyChanging();
					this._Review = value;
					this.SendPropertyChanged("Review");
					this.OnReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResortReview")]
	public partial class ResortReview : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ResortID;
		
		private int _UserID;
		
		private string _ReviewTitle;
		
		private string _ReviewBrief;
		
		private string _ReviewBody;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnResortIDChanging(int value);
    partial void OnResortIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnReviewTitleChanging(string value);
    partial void OnReviewTitleChanged();
    partial void OnReviewBriefChanging(string value);
    partial void OnReviewBriefChanged();
    partial void OnReviewBodyChanging(string value);
    partial void OnReviewBodyChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public ResortReview()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortID", DbType="Int NOT NULL")]
		public int ResortID
		{
			get
			{
				return this._ResortID;
			}
			set
			{
				if ((this._ResortID != value))
				{
					this.OnResortIDChanging(value);
					this.SendPropertyChanging();
					this._ResortID = value;
					this.SendPropertyChanged("ResortID");
					this.OnResortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewTitle", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ReviewTitle
		{
			get
			{
				return this._ReviewTitle;
			}
			set
			{
				if ((this._ReviewTitle != value))
				{
					this.OnReviewTitleChanging(value);
					this.SendPropertyChanging();
					this._ReviewTitle = value;
					this.SendPropertyChanged("ReviewTitle");
					this.OnReviewTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewBrief", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ReviewBrief
		{
			get
			{
				return this._ReviewBrief;
			}
			set
			{
				if ((this._ReviewBrief != value))
				{
					this.OnReviewBriefChanging(value);
					this.SendPropertyChanging();
					this._ReviewBrief = value;
					this.SendPropertyChanged("ReviewBrief");
					this.OnReviewBriefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewBody", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ReviewBody
		{
			get
			{
				return this._ReviewBody;
			}
			set
			{
				if ((this._ReviewBody != value))
				{
					this.OnReviewBodyChanging(value);
					this.SendPropertyChanging();
					this._ReviewBody = value;
					this.SendPropertyChanged("ReviewBody");
					this.OnReviewBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResortStats")]
	public partial class ResortStat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ResortID;
		
		private string _BaseLevel;
		
		private string _TopLevel;
		
		private string _VerticalDrop;
		
		private string _Height;
		
		private string _AverageSnowfall;
		
		private string _HasSnowmaking;
		
		private string _SnowmakingCoverage;
		
		private string _PreSeasonStartMonth;
		
		private string _SeasonStartMonth;
		
		private string _SeasonEndMonth;
		
		private string _Population;
		
		private string _MountainRestaurants;
		
		private string _LiftDescription;
		
		private string _LiftTotal;
		
		private string _LiftCapacityHour;
		
		private string _QuadPlusCount;
		
		private string _QuadCount;
		
		private string _TripleCount;
		
		private string _DoubleCount;
		
		private string _SingleCount;
		
		private string _SurfaceCount;
		
		private string _CableLiftCount;
		
		private string _GondolaCount;
		
		private string _FunicularCount;
		
		private string _SurfaceTrainCount;
		
		private string _RunTotal;
		
		private string _BlackRuns;
		
		private string _RedRuns;
		
		private string _BlueRuns;
		
		private string _GreenRuns;
		
		private string _LongestRunDistance;
		
		private string _RunTotalDistance;
		
		private string _HasSnowpark;
		
		private string _SnowparkTotal;
		
		private string _SnowparkDescription;
		
		private string _HasHalfpipe;
		
		private string _HalfpipeTotal;
		
		private string _HalfpipeDescription;
		
		private string _HasQuarterpipe;
		
		private string _QuarterpipeTotal;
		
		private string _QuarterpipeDescription;
		
		private string _SkiableTerrianSize;
		
		private string _HasNightskiing;
		
		private string _NightskiingDescription;
		
		private string _HasSummerskiing;
		
		private string _SummerskiingDescription;
		
		private string _SummerStartMonth;
		
		private string _SummerEndMonth;
		
		private string _Snowfall1Jan;
		
		private string _Snowfall2Feb;
		
		private string _Snowfall3Mar;
		
		private string _Snowfall4Apr;
		
		private string _Snowfall5May;
		
		private string _Snowfall6Jun;
		
		private string _Snowfall7Jul;
		
		private string _Snowfall8Aug;
		
		private string _Snowfall9Sep;
		
		private string _Snowfall10Oct;
		
		private string _Snowfall11Nov;
		
		private string _Snowfall12Dec;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
		private EntityRef<Resort> _Resort;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnResortIDChanging(int value);
    partial void OnResortIDChanged();
    partial void OnBaseLevelChanging(string value);
    partial void OnBaseLevelChanged();
    partial void OnTopLevelChanging(string value);
    partial void OnTopLevelChanged();
    partial void OnVerticalDropChanging(string value);
    partial void OnVerticalDropChanged();
    partial void OnHeightChanging(string value);
    partial void OnHeightChanged();
    partial void OnAverageSnowfallChanging(string value);
    partial void OnAverageSnowfallChanged();
    partial void OnHasSnowmakingChanging(string value);
    partial void OnHasSnowmakingChanged();
    partial void OnSnowmakingCoverageChanging(string value);
    partial void OnSnowmakingCoverageChanged();
    partial void OnPreSeasonStartMonthChanging(string value);
    partial void OnPreSeasonStartMonthChanged();
    partial void OnSeasonStartMonthChanging(string value);
    partial void OnSeasonStartMonthChanged();
    partial void OnSeasonEndMonthChanging(string value);
    partial void OnSeasonEndMonthChanged();
    partial void OnPopulationChanging(string value);
    partial void OnPopulationChanged();
    partial void OnMountainRestaurantsChanging(string value);
    partial void OnMountainRestaurantsChanged();
    partial void OnLiftDescriptionChanging(string value);
    partial void OnLiftDescriptionChanged();
    partial void OnLiftTotalChanging(string value);
    partial void OnLiftTotalChanged();
    partial void OnLiftCapacityHourChanging(string value);
    partial void OnLiftCapacityHourChanged();
    partial void OnQuadPlusCountChanging(string value);
    partial void OnQuadPlusCountChanged();
    partial void OnQuadCountChanging(string value);
    partial void OnQuadCountChanged();
    partial void OnTripleCountChanging(string value);
    partial void OnTripleCountChanged();
    partial void OnDoubleCountChanging(string value);
    partial void OnDoubleCountChanged();
    partial void OnSingleCountChanging(string value);
    partial void OnSingleCountChanged();
    partial void OnSurfaceCountChanging(string value);
    partial void OnSurfaceCountChanged();
    partial void OnCableLiftCountChanging(string value);
    partial void OnCableLiftCountChanged();
    partial void OnGondolaCountChanging(string value);
    partial void OnGondolaCountChanged();
    partial void OnFunicularCountChanging(string value);
    partial void OnFunicularCountChanged();
    partial void OnSurfaceTrainCountChanging(string value);
    partial void OnSurfaceTrainCountChanged();
    partial void OnRunTotalChanging(string value);
    partial void OnRunTotalChanged();
    partial void OnBlackRunsChanging(string value);
    partial void OnBlackRunsChanged();
    partial void OnRedRunsChanging(string value);
    partial void OnRedRunsChanged();
    partial void OnBlueRunsChanging(string value);
    partial void OnBlueRunsChanged();
    partial void OnGreenRunsChanging(string value);
    partial void OnGreenRunsChanged();
    partial void OnLongestRunDistanceChanging(string value);
    partial void OnLongestRunDistanceChanged();
    partial void OnRunTotalDistanceChanging(string value);
    partial void OnRunTotalDistanceChanged();
    partial void OnHasSnowparkChanging(string value);
    partial void OnHasSnowparkChanged();
    partial void OnSnowparkTotalChanging(string value);
    partial void OnSnowparkTotalChanged();
    partial void OnSnowparkDescriptionChanging(string value);
    partial void OnSnowparkDescriptionChanged();
    partial void OnHasHalfpipeChanging(string value);
    partial void OnHasHalfpipeChanged();
    partial void OnHalfpipeTotalChanging(string value);
    partial void OnHalfpipeTotalChanged();
    partial void OnHalfpipeDescriptionChanging(string value);
    partial void OnHalfpipeDescriptionChanged();
    partial void OnHasQuarterpipeChanging(string value);
    partial void OnHasQuarterpipeChanged();
    partial void OnQuarterpipeTotalChanging(string value);
    partial void OnQuarterpipeTotalChanged();
    partial void OnQuarterpipeDescriptionChanging(string value);
    partial void OnQuarterpipeDescriptionChanged();
    partial void OnSkiableTerrianSizeChanging(string value);
    partial void OnSkiableTerrianSizeChanged();
    partial void OnHasNightskiingChanging(string value);
    partial void OnHasNightskiingChanged();
    partial void OnNightskiingDescriptionChanging(string value);
    partial void OnNightskiingDescriptionChanged();
    partial void OnHasSummerskiingChanging(string value);
    partial void OnHasSummerskiingChanged();
    partial void OnSummerskiingDescriptionChanging(string value);
    partial void OnSummerskiingDescriptionChanged();
    partial void OnSummerStartMonthChanging(string value);
    partial void OnSummerStartMonthChanged();
    partial void OnSummerEndMonthChanging(string value);
    partial void OnSummerEndMonthChanged();
    partial void OnSnowfall1JanChanging(string value);
    partial void OnSnowfall1JanChanged();
    partial void OnSnowfall2FebChanging(string value);
    partial void OnSnowfall2FebChanged();
    partial void OnSnowfall3MarChanging(string value);
    partial void OnSnowfall3MarChanged();
    partial void OnSnowfall4AprChanging(string value);
    partial void OnSnowfall4AprChanged();
    partial void OnSnowfall5MayChanging(string value);
    partial void OnSnowfall5MayChanged();
    partial void OnSnowfall6JunChanging(string value);
    partial void OnSnowfall6JunChanged();
    partial void OnSnowfall7JulChanging(string value);
    partial void OnSnowfall7JulChanged();
    partial void OnSnowfall8AugChanging(string value);
    partial void OnSnowfall8AugChanged();
    partial void OnSnowfall9SepChanging(string value);
    partial void OnSnowfall9SepChanged();
    partial void OnSnowfall10OctChanging(string value);
    partial void OnSnowfall10OctChanged();
    partial void OnSnowfall11NovChanging(string value);
    partial void OnSnowfall11NovChanged();
    partial void OnSnowfall12DecChanging(string value);
    partial void OnSnowfall12DecChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public ResortStat()
		{
			this._Resort = default(EntityRef<Resort>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortID", DbType="Int NOT NULL")]
		public int ResortID
		{
			get
			{
				return this._ResortID;
			}
			set
			{
				if ((this._ResortID != value))
				{
					if (this._Resort.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResortIDChanging(value);
					this.SendPropertyChanging();
					this._ResortID = value;
					this.SendPropertyChanged("ResortID");
					this.OnResortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseLevel", DbType="VarChar(20)")]
		public string BaseLevel
		{
			get
			{
				return this._BaseLevel;
			}
			set
			{
				if ((this._BaseLevel != value))
				{
					this.OnBaseLevelChanging(value);
					this.SendPropertyChanging();
					this._BaseLevel = value;
					this.SendPropertyChanged("BaseLevel");
					this.OnBaseLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopLevel", DbType="VarChar(20)")]
		public string TopLevel
		{
			get
			{
				return this._TopLevel;
			}
			set
			{
				if ((this._TopLevel != value))
				{
					this.OnTopLevelChanging(value);
					this.SendPropertyChanging();
					this._TopLevel = value;
					this.SendPropertyChanged("TopLevel");
					this.OnTopLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerticalDrop", DbType="VarChar(20)")]
		public string VerticalDrop
		{
			get
			{
				return this._VerticalDrop;
			}
			set
			{
				if ((this._VerticalDrop != value))
				{
					this.OnVerticalDropChanging(value);
					this.SendPropertyChanging();
					this._VerticalDrop = value;
					this.SendPropertyChanged("VerticalDrop");
					this.OnVerticalDropChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="VarChar(20)")]
		public string Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AverageSnowfall", DbType="VarChar(20)")]
		public string AverageSnowfall
		{
			get
			{
				return this._AverageSnowfall;
			}
			set
			{
				if ((this._AverageSnowfall != value))
				{
					this.OnAverageSnowfallChanging(value);
					this.SendPropertyChanging();
					this._AverageSnowfall = value;
					this.SendPropertyChanged("AverageSnowfall");
					this.OnAverageSnowfallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasSnowmaking", DbType="VarChar(20)")]
		public string HasSnowmaking
		{
			get
			{
				return this._HasSnowmaking;
			}
			set
			{
				if ((this._HasSnowmaking != value))
				{
					this.OnHasSnowmakingChanging(value);
					this.SendPropertyChanging();
					this._HasSnowmaking = value;
					this.SendPropertyChanged("HasSnowmaking");
					this.OnHasSnowmakingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SnowmakingCoverage", DbType="VarChar(20)")]
		public string SnowmakingCoverage
		{
			get
			{
				return this._SnowmakingCoverage;
			}
			set
			{
				if ((this._SnowmakingCoverage != value))
				{
					this.OnSnowmakingCoverageChanging(value);
					this.SendPropertyChanging();
					this._SnowmakingCoverage = value;
					this.SendPropertyChanged("SnowmakingCoverage");
					this.OnSnowmakingCoverageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreSeasonStartMonth", DbType="VarChar(20)")]
		public string PreSeasonStartMonth
		{
			get
			{
				return this._PreSeasonStartMonth;
			}
			set
			{
				if ((this._PreSeasonStartMonth != value))
				{
					this.OnPreSeasonStartMonthChanging(value);
					this.SendPropertyChanging();
					this._PreSeasonStartMonth = value;
					this.SendPropertyChanged("PreSeasonStartMonth");
					this.OnPreSeasonStartMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeasonStartMonth", DbType="VarChar(20)")]
		public string SeasonStartMonth
		{
			get
			{
				return this._SeasonStartMonth;
			}
			set
			{
				if ((this._SeasonStartMonth != value))
				{
					this.OnSeasonStartMonthChanging(value);
					this.SendPropertyChanging();
					this._SeasonStartMonth = value;
					this.SendPropertyChanged("SeasonStartMonth");
					this.OnSeasonStartMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeasonEndMonth", DbType="VarChar(20)")]
		public string SeasonEndMonth
		{
			get
			{
				return this._SeasonEndMonth;
			}
			set
			{
				if ((this._SeasonEndMonth != value))
				{
					this.OnSeasonEndMonthChanging(value);
					this.SendPropertyChanging();
					this._SeasonEndMonth = value;
					this.SendPropertyChanged("SeasonEndMonth");
					this.OnSeasonEndMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Population", DbType="VarChar(20)")]
		public string Population
		{
			get
			{
				return this._Population;
			}
			set
			{
				if ((this._Population != value))
				{
					this.OnPopulationChanging(value);
					this.SendPropertyChanging();
					this._Population = value;
					this.SendPropertyChanged("Population");
					this.OnPopulationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MountainRestaurants", DbType="VarChar(20)")]
		public string MountainRestaurants
		{
			get
			{
				return this._MountainRestaurants;
			}
			set
			{
				if ((this._MountainRestaurants != value))
				{
					this.OnMountainRestaurantsChanging(value);
					this.SendPropertyChanging();
					this._MountainRestaurants = value;
					this.SendPropertyChanged("MountainRestaurants");
					this.OnMountainRestaurantsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiftDescription", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string LiftDescription
		{
			get
			{
				return this._LiftDescription;
			}
			set
			{
				if ((this._LiftDescription != value))
				{
					this.OnLiftDescriptionChanging(value);
					this.SendPropertyChanging();
					this._LiftDescription = value;
					this.SendPropertyChanged("LiftDescription");
					this.OnLiftDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiftTotal", DbType="VarChar(20)")]
		public string LiftTotal
		{
			get
			{
				return this._LiftTotal;
			}
			set
			{
				if ((this._LiftTotal != value))
				{
					this.OnLiftTotalChanging(value);
					this.SendPropertyChanging();
					this._LiftTotal = value;
					this.SendPropertyChanged("LiftTotal");
					this.OnLiftTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiftCapacityHour", DbType="VarChar(20)")]
		public string LiftCapacityHour
		{
			get
			{
				return this._LiftCapacityHour;
			}
			set
			{
				if ((this._LiftCapacityHour != value))
				{
					this.OnLiftCapacityHourChanging(value);
					this.SendPropertyChanging();
					this._LiftCapacityHour = value;
					this.SendPropertyChanged("LiftCapacityHour");
					this.OnLiftCapacityHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuadPlusCount", DbType="VarChar(20)")]
		public string QuadPlusCount
		{
			get
			{
				return this._QuadPlusCount;
			}
			set
			{
				if ((this._QuadPlusCount != value))
				{
					this.OnQuadPlusCountChanging(value);
					this.SendPropertyChanging();
					this._QuadPlusCount = value;
					this.SendPropertyChanged("QuadPlusCount");
					this.OnQuadPlusCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuadCount", DbType="VarChar(20)")]
		public string QuadCount
		{
			get
			{
				return this._QuadCount;
			}
			set
			{
				if ((this._QuadCount != value))
				{
					this.OnQuadCountChanging(value);
					this.SendPropertyChanging();
					this._QuadCount = value;
					this.SendPropertyChanged("QuadCount");
					this.OnQuadCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TripleCount", DbType="VarChar(20)")]
		public string TripleCount
		{
			get
			{
				return this._TripleCount;
			}
			set
			{
				if ((this._TripleCount != value))
				{
					this.OnTripleCountChanging(value);
					this.SendPropertyChanging();
					this._TripleCount = value;
					this.SendPropertyChanged("TripleCount");
					this.OnTripleCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoubleCount", DbType="VarChar(20)")]
		public string DoubleCount
		{
			get
			{
				return this._DoubleCount;
			}
			set
			{
				if ((this._DoubleCount != value))
				{
					this.OnDoubleCountChanging(value);
					this.SendPropertyChanging();
					this._DoubleCount = value;
					this.SendPropertyChanged("DoubleCount");
					this.OnDoubleCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SingleCount", DbType="VarChar(20)")]
		public string SingleCount
		{
			get
			{
				return this._SingleCount;
			}
			set
			{
				if ((this._SingleCount != value))
				{
					this.OnSingleCountChanging(value);
					this.SendPropertyChanging();
					this._SingleCount = value;
					this.SendPropertyChanged("SingleCount");
					this.OnSingleCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurfaceCount", DbType="VarChar(20)")]
		public string SurfaceCount
		{
			get
			{
				return this._SurfaceCount;
			}
			set
			{
				if ((this._SurfaceCount != value))
				{
					this.OnSurfaceCountChanging(value);
					this.SendPropertyChanging();
					this._SurfaceCount = value;
					this.SendPropertyChanged("SurfaceCount");
					this.OnSurfaceCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CableLiftCount", DbType="VarChar(20)")]
		public string CableLiftCount
		{
			get
			{
				return this._CableLiftCount;
			}
			set
			{
				if ((this._CableLiftCount != value))
				{
					this.OnCableLiftCountChanging(value);
					this.SendPropertyChanging();
					this._CableLiftCount = value;
					this.SendPropertyChanged("CableLiftCount");
					this.OnCableLiftCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GondolaCount", DbType="VarChar(20)")]
		public string GondolaCount
		{
			get
			{
				return this._GondolaCount;
			}
			set
			{
				if ((this._GondolaCount != value))
				{
					this.OnGondolaCountChanging(value);
					this.SendPropertyChanging();
					this._GondolaCount = value;
					this.SendPropertyChanged("GondolaCount");
					this.OnGondolaCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunicularCount", DbType="VarChar(20)")]
		public string FunicularCount
		{
			get
			{
				return this._FunicularCount;
			}
			set
			{
				if ((this._FunicularCount != value))
				{
					this.OnFunicularCountChanging(value);
					this.SendPropertyChanging();
					this._FunicularCount = value;
					this.SendPropertyChanged("FunicularCount");
					this.OnFunicularCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurfaceTrainCount", DbType="VarChar(20)")]
		public string SurfaceTrainCount
		{
			get
			{
				return this._SurfaceTrainCount;
			}
			set
			{
				if ((this._SurfaceTrainCount != value))
				{
					this.OnSurfaceTrainCountChanging(value);
					this.SendPropertyChanging();
					this._SurfaceTrainCount = value;
					this.SendPropertyChanged("SurfaceTrainCount");
					this.OnSurfaceTrainCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunTotal", DbType="VarChar(20)")]
		public string RunTotal
		{
			get
			{
				return this._RunTotal;
			}
			set
			{
				if ((this._RunTotal != value))
				{
					this.OnRunTotalChanging(value);
					this.SendPropertyChanging();
					this._RunTotal = value;
					this.SendPropertyChanged("RunTotal");
					this.OnRunTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlackRuns", DbType="VarChar(20)")]
		public string BlackRuns
		{
			get
			{
				return this._BlackRuns;
			}
			set
			{
				if ((this._BlackRuns != value))
				{
					this.OnBlackRunsChanging(value);
					this.SendPropertyChanging();
					this._BlackRuns = value;
					this.SendPropertyChanged("BlackRuns");
					this.OnBlackRunsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RedRuns", DbType="VarChar(20)")]
		public string RedRuns
		{
			get
			{
				return this._RedRuns;
			}
			set
			{
				if ((this._RedRuns != value))
				{
					this.OnRedRunsChanging(value);
					this.SendPropertyChanging();
					this._RedRuns = value;
					this.SendPropertyChanged("RedRuns");
					this.OnRedRunsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlueRuns", DbType="VarChar(20)")]
		public string BlueRuns
		{
			get
			{
				return this._BlueRuns;
			}
			set
			{
				if ((this._BlueRuns != value))
				{
					this.OnBlueRunsChanging(value);
					this.SendPropertyChanging();
					this._BlueRuns = value;
					this.SendPropertyChanged("BlueRuns");
					this.OnBlueRunsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GreenRuns", DbType="VarChar(20)")]
		public string GreenRuns
		{
			get
			{
				return this._GreenRuns;
			}
			set
			{
				if ((this._GreenRuns != value))
				{
					this.OnGreenRunsChanging(value);
					this.SendPropertyChanging();
					this._GreenRuns = value;
					this.SendPropertyChanged("GreenRuns");
					this.OnGreenRunsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongestRunDistance", DbType="VarChar(20)")]
		public string LongestRunDistance
		{
			get
			{
				return this._LongestRunDistance;
			}
			set
			{
				if ((this._LongestRunDistance != value))
				{
					this.OnLongestRunDistanceChanging(value);
					this.SendPropertyChanging();
					this._LongestRunDistance = value;
					this.SendPropertyChanged("LongestRunDistance");
					this.OnLongestRunDistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunTotalDistance", DbType="VarChar(20)")]
		public string RunTotalDistance
		{
			get
			{
				return this._RunTotalDistance;
			}
			set
			{
				if ((this._RunTotalDistance != value))
				{
					this.OnRunTotalDistanceChanging(value);
					this.SendPropertyChanging();
					this._RunTotalDistance = value;
					this.SendPropertyChanged("RunTotalDistance");
					this.OnRunTotalDistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasSnowpark", DbType="VarChar(20)")]
		public string HasSnowpark
		{
			get
			{
				return this._HasSnowpark;
			}
			set
			{
				if ((this._HasSnowpark != value))
				{
					this.OnHasSnowparkChanging(value);
					this.SendPropertyChanging();
					this._HasSnowpark = value;
					this.SendPropertyChanged("HasSnowpark");
					this.OnHasSnowparkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SnowparkTotal", DbType="VarChar(20)")]
		public string SnowparkTotal
		{
			get
			{
				return this._SnowparkTotal;
			}
			set
			{
				if ((this._SnowparkTotal != value))
				{
					this.OnSnowparkTotalChanging(value);
					this.SendPropertyChanging();
					this._SnowparkTotal = value;
					this.SendPropertyChanged("SnowparkTotal");
					this.OnSnowparkTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SnowparkDescription", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string SnowparkDescription
		{
			get
			{
				return this._SnowparkDescription;
			}
			set
			{
				if ((this._SnowparkDescription != value))
				{
					this.OnSnowparkDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SnowparkDescription = value;
					this.SendPropertyChanged("SnowparkDescription");
					this.OnSnowparkDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasHalfpipe", DbType="VarChar(20)")]
		public string HasHalfpipe
		{
			get
			{
				return this._HasHalfpipe;
			}
			set
			{
				if ((this._HasHalfpipe != value))
				{
					this.OnHasHalfpipeChanging(value);
					this.SendPropertyChanging();
					this._HasHalfpipe = value;
					this.SendPropertyChanged("HasHalfpipe");
					this.OnHasHalfpipeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HalfpipeTotal", DbType="VarChar(20)")]
		public string HalfpipeTotal
		{
			get
			{
				return this._HalfpipeTotal;
			}
			set
			{
				if ((this._HalfpipeTotal != value))
				{
					this.OnHalfpipeTotalChanging(value);
					this.SendPropertyChanging();
					this._HalfpipeTotal = value;
					this.SendPropertyChanged("HalfpipeTotal");
					this.OnHalfpipeTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HalfpipeDescription", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string HalfpipeDescription
		{
			get
			{
				return this._HalfpipeDescription;
			}
			set
			{
				if ((this._HalfpipeDescription != value))
				{
					this.OnHalfpipeDescriptionChanging(value);
					this.SendPropertyChanging();
					this._HalfpipeDescription = value;
					this.SendPropertyChanged("HalfpipeDescription");
					this.OnHalfpipeDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasQuarterpipe", DbType="VarChar(20)")]
		public string HasQuarterpipe
		{
			get
			{
				return this._HasQuarterpipe;
			}
			set
			{
				if ((this._HasQuarterpipe != value))
				{
					this.OnHasQuarterpipeChanging(value);
					this.SendPropertyChanging();
					this._HasQuarterpipe = value;
					this.SendPropertyChanged("HasQuarterpipe");
					this.OnHasQuarterpipeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuarterpipeTotal", DbType="VarChar(20)")]
		public string QuarterpipeTotal
		{
			get
			{
				return this._QuarterpipeTotal;
			}
			set
			{
				if ((this._QuarterpipeTotal != value))
				{
					this.OnQuarterpipeTotalChanging(value);
					this.SendPropertyChanging();
					this._QuarterpipeTotal = value;
					this.SendPropertyChanged("QuarterpipeTotal");
					this.OnQuarterpipeTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuarterpipeDescription", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string QuarterpipeDescription
		{
			get
			{
				return this._QuarterpipeDescription;
			}
			set
			{
				if ((this._QuarterpipeDescription != value))
				{
					this.OnQuarterpipeDescriptionChanging(value);
					this.SendPropertyChanging();
					this._QuarterpipeDescription = value;
					this.SendPropertyChanged("QuarterpipeDescription");
					this.OnQuarterpipeDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkiableTerrianSize", DbType="VarChar(20)")]
		public string SkiableTerrianSize
		{
			get
			{
				return this._SkiableTerrianSize;
			}
			set
			{
				if ((this._SkiableTerrianSize != value))
				{
					this.OnSkiableTerrianSizeChanging(value);
					this.SendPropertyChanging();
					this._SkiableTerrianSize = value;
					this.SendPropertyChanged("SkiableTerrianSize");
					this.OnSkiableTerrianSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasNightskiing", DbType="VarChar(20)")]
		public string HasNightskiing
		{
			get
			{
				return this._HasNightskiing;
			}
			set
			{
				if ((this._HasNightskiing != value))
				{
					this.OnHasNightskiingChanging(value);
					this.SendPropertyChanging();
					this._HasNightskiing = value;
					this.SendPropertyChanged("HasNightskiing");
					this.OnHasNightskiingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NightskiingDescription", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string NightskiingDescription
		{
			get
			{
				return this._NightskiingDescription;
			}
			set
			{
				if ((this._NightskiingDescription != value))
				{
					this.OnNightskiingDescriptionChanging(value);
					this.SendPropertyChanging();
					this._NightskiingDescription = value;
					this.SendPropertyChanged("NightskiingDescription");
					this.OnNightskiingDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasSummerskiing", DbType="VarChar(20)")]
		public string HasSummerskiing
		{
			get
			{
				return this._HasSummerskiing;
			}
			set
			{
				if ((this._HasSummerskiing != value))
				{
					this.OnHasSummerskiingChanging(value);
					this.SendPropertyChanging();
					this._HasSummerskiing = value;
					this.SendPropertyChanged("HasSummerskiing");
					this.OnHasSummerskiingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SummerskiingDescription", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string SummerskiingDescription
		{
			get
			{
				return this._SummerskiingDescription;
			}
			set
			{
				if ((this._SummerskiingDescription != value))
				{
					this.OnSummerskiingDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SummerskiingDescription = value;
					this.SendPropertyChanged("SummerskiingDescription");
					this.OnSummerskiingDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SummerStartMonth", DbType="VarChar(20)")]
		public string SummerStartMonth
		{
			get
			{
				return this._SummerStartMonth;
			}
			set
			{
				if ((this._SummerStartMonth != value))
				{
					this.OnSummerStartMonthChanging(value);
					this.SendPropertyChanging();
					this._SummerStartMonth = value;
					this.SendPropertyChanged("SummerStartMonth");
					this.OnSummerStartMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SummerEndMonth", DbType="VarChar(20)")]
		public string SummerEndMonth
		{
			get
			{
				return this._SummerEndMonth;
			}
			set
			{
				if ((this._SummerEndMonth != value))
				{
					this.OnSummerEndMonthChanging(value);
					this.SendPropertyChanging();
					this._SummerEndMonth = value;
					this.SendPropertyChanged("SummerEndMonth");
					this.OnSummerEndMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Snowfall1Jan", DbType="VarChar(6)")]
		public string Snowfall1Jan
		{
			get
			{
				return this._Snowfall1Jan;
			}
			set
			{
				if ((this._Snowfall1Jan != value))
				{
					this.OnSnowfall1JanChanging(value);
					this.SendPropertyChanging();
					this._Snowfall1Jan = value;
					this.SendPropertyChanged("Snowfall1Jan");
					this.OnSnowfall1JanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Snowfall2Feb", DbType="VarChar(6)")]
		public string Snowfall2Feb
		{
			get
			{
				return this._Snowfall2Feb;
			}
			set
			{
				if ((this._Snowfall2Feb != value))
				{
					this.OnSnowfall2FebChanging(value);
					this.SendPropertyChanging();
					this._Snowfall2Feb = value;
					this.SendPropertyChanged("Snowfall2Feb");
					this.OnSnowfall2FebChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Snowfall3Mar", DbType="VarChar(6)")]
		public string Snowfall3Mar
		{
			get
			{
				return this._Snowfall3Mar;
			}
			set
			{
				if ((this._Snowfall3Mar != value))
				{
					this.OnSnowfall3MarChanging(value);
					this.SendPropertyChanging();
					this._Snowfall3Mar = value;
					this.SendPropertyChanged("Snowfall3Mar");
					this.OnSnowfall3MarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Snowfall4Apr", DbType="VarChar(6)")]
		public string Snowfall4Apr
		{
			get
			{
				return this._Snowfall4Apr;
			}
			set
			{
				if ((this._Snowfall4Apr != value))
				{
					this.OnSnowfall4AprChanging(value);
					this.SendPropertyChanging();
					this._Snowfall4Apr = value;
					this.SendPropertyChanged("Snowfall4Apr");
					this.OnSnowfall4AprChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Snowfall5May", DbType="VarChar(6)")]
		public string Snowfall5May
		{
			get
			{
				return this._Snowfall5May;
			}
			set
			{
				if ((this._Snowfall5May != value))
				{
					this.OnSnowfall5MayChanging(value);
					this.SendPropertyChanging();
					this._Snowfall5May = value;
					this.SendPropertyChanged("Snowfall5May");
					this.OnSnowfall5MayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Snowfall6Jun", DbType="VarChar(6)")]
		public string Snowfall6Jun
		{
			get
			{
				return this._Snowfall6Jun;
			}
			set
			{
				if ((this._Snowfall6Jun != value))
				{
					this.OnSnowfall6JunChanging(value);
					this.SendPropertyChanging();
					this._Snowfall6Jun = value;
					this.SendPropertyChanged("Snowfall6Jun");
					this.OnSnowfall6JunChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Snowfall7Jul", DbType="VarChar(6)")]
		public string Snowfall7Jul
		{
			get
			{
				return this._Snowfall7Jul;
			}
			set
			{
				if ((this._Snowfall7Jul != value))
				{
					this.OnSnowfall7JulChanging(value);
					this.SendPropertyChanging();
					this._Snowfall7Jul = value;
					this.SendPropertyChanged("Snowfall7Jul");
					this.OnSnowfall7JulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Snowfall8Aug", DbType="VarChar(6)")]
		public string Snowfall8Aug
		{
			get
			{
				return this._Snowfall8Aug;
			}
			set
			{
				if ((this._Snowfall8Aug != value))
				{
					this.OnSnowfall8AugChanging(value);
					this.SendPropertyChanging();
					this._Snowfall8Aug = value;
					this.SendPropertyChanged("Snowfall8Aug");
					this.OnSnowfall8AugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Snowfall9Sep", DbType="VarChar(6)")]
		public string Snowfall9Sep
		{
			get
			{
				return this._Snowfall9Sep;
			}
			set
			{
				if ((this._Snowfall9Sep != value))
				{
					this.OnSnowfall9SepChanging(value);
					this.SendPropertyChanging();
					this._Snowfall9Sep = value;
					this.SendPropertyChanged("Snowfall9Sep");
					this.OnSnowfall9SepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Snowfall10Oct", DbType="VarChar(6)")]
		public string Snowfall10Oct
		{
			get
			{
				return this._Snowfall10Oct;
			}
			set
			{
				if ((this._Snowfall10Oct != value))
				{
					this.OnSnowfall10OctChanging(value);
					this.SendPropertyChanging();
					this._Snowfall10Oct = value;
					this.SendPropertyChanged("Snowfall10Oct");
					this.OnSnowfall10OctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Snowfall11Nov", DbType="VarChar(6)")]
		public string Snowfall11Nov
		{
			get
			{
				return this._Snowfall11Nov;
			}
			set
			{
				if ((this._Snowfall11Nov != value))
				{
					this.OnSnowfall11NovChanging(value);
					this.SendPropertyChanging();
					this._Snowfall11Nov = value;
					this.SendPropertyChanged("Snowfall11Nov");
					this.OnSnowfall11NovChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Snowfall12Dec", DbType="VarChar(6)")]
		public string Snowfall12Dec
		{
			get
			{
				return this._Snowfall12Dec;
			}
			set
			{
				if ((this._Snowfall12Dec != value))
				{
					this.OnSnowfall12DecChanging(value);
					this.SendPropertyChanging();
					this._Snowfall12Dec = value;
					this.SendPropertyChanged("Snowfall12Dec");
					this.OnSnowfall12DecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resort_ResortStat", Storage="_Resort", ThisKey="ResortID", OtherKey="ID", IsForeignKey=true)]
		public Resort Resort
		{
			get
			{
				return this._Resort.Entity;
			}
			set
			{
				Resort previousValue = this._Resort.Entity;
				if (((previousValue != value) 
							|| (this._Resort.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resort.Entity = null;
						previousValue.ResortStats.Remove(this);
					}
					this._Resort.Entity = value;
					if ((value != null))
					{
						value.ResortStats.Add(this);
						this._ResortID = value.ID;
					}
					else
					{
						this._ResortID = default(int);
					}
					this.SendPropertyChanged("Resort");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResortTouristOffice")]
	public partial class ResortTouristOffice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ResortID;
		
		private string _TouristOfficeAddress;
		
		private string _Email;
		
		private string _PhoneNumber;
		
		private string _FaxNumber;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnResortIDChanging(int value);
    partial void OnResortIDChanged();
    partial void OnTouristOfficeAddressChanging(string value);
    partial void OnTouristOfficeAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnFaxNumberChanging(string value);
    partial void OnFaxNumberChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public ResortTouristOffice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortID", DbType="Int NOT NULL")]
		public int ResortID
		{
			get
			{
				return this._ResortID;
			}
			set
			{
				if ((this._ResortID != value))
				{
					this.OnResortIDChanging(value);
					this.SendPropertyChanging();
					this._ResortID = value;
					this.SendPropertyChanged("ResortID");
					this.OnResortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TouristOfficeAddress", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TouristOfficeAddress
		{
			get
			{
				return this._TouristOfficeAddress;
			}
			set
			{
				if ((this._TouristOfficeAddress != value))
				{
					this.OnTouristOfficeAddressChanging(value);
					this.SendPropertyChanging();
					this._TouristOfficeAddress = value;
					this.SendPropertyChanged("TouristOfficeAddress");
					this.OnTouristOfficeAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(20)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxNumber", DbType="VarChar(20)")]
		public string FaxNumber
		{
			get
			{
				return this._FaxNumber;
			}
			set
			{
				if ((this._FaxNumber != value))
				{
					this.OnFaxNumberChanging(value);
					this.SendPropertyChanging();
					this._FaxNumber = value;
					this.SendPropertyChanged("FaxNumber");
					this.OnFaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RestaurantBar")]
	public partial class RestaurantBar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ResortID;
		
		private string _Name;
		
		private System.Nullable<bool> _IsBar;
		
		private System.Nullable<bool> _IsRestaurant;
		
		private System.Nullable<bool> _IsTakeAway;
		
		private System.Nullable<bool> _HasInternet;
		
		private System.Nullable<bool> _HasWiFi;
		
		private System.Nullable<int> _CuisineID;
		
		private string _Address;
		
		private System.Nullable<bool> _HasLiveMusic;
		
		private string _LiveMusicDescription;
		
		private System.Nullable<bool> _HasLiveMusicMon;
		
		private System.Nullable<bool> _HasLiveMusicTue;
		
		private System.Nullable<bool> _HasLiveMusicWed;
		
		private System.Nullable<bool> _HasLiveMusicThu;
		
		private System.Nullable<bool> _HasLiveMusicFri;
		
		private System.Nullable<bool> _HasLiveMusicSat;
		
		private System.Nullable<bool> _HasLiveMusicSun;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnResortIDChanging(System.Nullable<int> value);
    partial void OnResortIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsBarChanging(System.Nullable<bool> value);
    partial void OnIsBarChanged();
    partial void OnIsRestaurantChanging(System.Nullable<bool> value);
    partial void OnIsRestaurantChanged();
    partial void OnIsTakeAwayChanging(System.Nullable<bool> value);
    partial void OnIsTakeAwayChanged();
    partial void OnHasInternetChanging(System.Nullable<bool> value);
    partial void OnHasInternetChanged();
    partial void OnHasWiFiChanging(System.Nullable<bool> value);
    partial void OnHasWiFiChanged();
    partial void OnCuisineIDChanging(System.Nullable<int> value);
    partial void OnCuisineIDChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnHasLiveMusicChanging(System.Nullable<bool> value);
    partial void OnHasLiveMusicChanged();
    partial void OnLiveMusicDescriptionChanging(string value);
    partial void OnLiveMusicDescriptionChanged();
    partial void OnHasLiveMusicMonChanging(System.Nullable<bool> value);
    partial void OnHasLiveMusicMonChanged();
    partial void OnHasLiveMusicTueChanging(System.Nullable<bool> value);
    partial void OnHasLiveMusicTueChanged();
    partial void OnHasLiveMusicWedChanging(System.Nullable<bool> value);
    partial void OnHasLiveMusicWedChanged();
    partial void OnHasLiveMusicThuChanging(System.Nullable<bool> value);
    partial void OnHasLiveMusicThuChanged();
    partial void OnHasLiveMusicFriChanging(System.Nullable<bool> value);
    partial void OnHasLiveMusicFriChanged();
    partial void OnHasLiveMusicSatChanging(System.Nullable<bool> value);
    partial void OnHasLiveMusicSatChanged();
    partial void OnHasLiveMusicSunChanging(System.Nullable<bool> value);
    partial void OnHasLiveMusicSunChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public RestaurantBar()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortID", DbType="Int")]
		public System.Nullable<int> ResortID
		{
			get
			{
				return this._ResortID;
			}
			set
			{
				if ((this._ResortID != value))
				{
					this.OnResortIDChanging(value);
					this.SendPropertyChanging();
					this._ResortID = value;
					this.SendPropertyChanged("ResortID");
					this.OnResortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBar", DbType="Bit")]
		public System.Nullable<bool> IsBar
		{
			get
			{
				return this._IsBar;
			}
			set
			{
				if ((this._IsBar != value))
				{
					this.OnIsBarChanging(value);
					this.SendPropertyChanging();
					this._IsBar = value;
					this.SendPropertyChanged("IsBar");
					this.OnIsBarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRestaurant", DbType="Bit")]
		public System.Nullable<bool> IsRestaurant
		{
			get
			{
				return this._IsRestaurant;
			}
			set
			{
				if ((this._IsRestaurant != value))
				{
					this.OnIsRestaurantChanging(value);
					this.SendPropertyChanging();
					this._IsRestaurant = value;
					this.SendPropertyChanged("IsRestaurant");
					this.OnIsRestaurantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTakeAway", DbType="Bit")]
		public System.Nullable<bool> IsTakeAway
		{
			get
			{
				return this._IsTakeAway;
			}
			set
			{
				if ((this._IsTakeAway != value))
				{
					this.OnIsTakeAwayChanging(value);
					this.SendPropertyChanging();
					this._IsTakeAway = value;
					this.SendPropertyChanged("IsTakeAway");
					this.OnIsTakeAwayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasInternet", DbType="Bit")]
		public System.Nullable<bool> HasInternet
		{
			get
			{
				return this._HasInternet;
			}
			set
			{
				if ((this._HasInternet != value))
				{
					this.OnHasInternetChanging(value);
					this.SendPropertyChanging();
					this._HasInternet = value;
					this.SendPropertyChanged("HasInternet");
					this.OnHasInternetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasWiFi", DbType="Bit")]
		public System.Nullable<bool> HasWiFi
		{
			get
			{
				return this._HasWiFi;
			}
			set
			{
				if ((this._HasWiFi != value))
				{
					this.OnHasWiFiChanging(value);
					this.SendPropertyChanging();
					this._HasWiFi = value;
					this.SendPropertyChanged("HasWiFi");
					this.OnHasWiFiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CuisineID", DbType="Int")]
		public System.Nullable<int> CuisineID
		{
			get
			{
				return this._CuisineID;
			}
			set
			{
				if ((this._CuisineID != value))
				{
					this.OnCuisineIDChanging(value);
					this.SendPropertyChanging();
					this._CuisineID = value;
					this.SendPropertyChanged("CuisineID");
					this.OnCuisineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasLiveMusic", DbType="Bit")]
		public System.Nullable<bool> HasLiveMusic
		{
			get
			{
				return this._HasLiveMusic;
			}
			set
			{
				if ((this._HasLiveMusic != value))
				{
					this.OnHasLiveMusicChanging(value);
					this.SendPropertyChanging();
					this._HasLiveMusic = value;
					this.SendPropertyChanged("HasLiveMusic");
					this.OnHasLiveMusicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveMusicDescription", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string LiveMusicDescription
		{
			get
			{
				return this._LiveMusicDescription;
			}
			set
			{
				if ((this._LiveMusicDescription != value))
				{
					this.OnLiveMusicDescriptionChanging(value);
					this.SendPropertyChanging();
					this._LiveMusicDescription = value;
					this.SendPropertyChanged("LiveMusicDescription");
					this.OnLiveMusicDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasLiveMusicMon", DbType="Bit")]
		public System.Nullable<bool> HasLiveMusicMon
		{
			get
			{
				return this._HasLiveMusicMon;
			}
			set
			{
				if ((this._HasLiveMusicMon != value))
				{
					this.OnHasLiveMusicMonChanging(value);
					this.SendPropertyChanging();
					this._HasLiveMusicMon = value;
					this.SendPropertyChanged("HasLiveMusicMon");
					this.OnHasLiveMusicMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasLiveMusicTue", DbType="Bit")]
		public System.Nullable<bool> HasLiveMusicTue
		{
			get
			{
				return this._HasLiveMusicTue;
			}
			set
			{
				if ((this._HasLiveMusicTue != value))
				{
					this.OnHasLiveMusicTueChanging(value);
					this.SendPropertyChanging();
					this._HasLiveMusicTue = value;
					this.SendPropertyChanged("HasLiveMusicTue");
					this.OnHasLiveMusicTueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasLiveMusicWed", DbType="Bit")]
		public System.Nullable<bool> HasLiveMusicWed
		{
			get
			{
				return this._HasLiveMusicWed;
			}
			set
			{
				if ((this._HasLiveMusicWed != value))
				{
					this.OnHasLiveMusicWedChanging(value);
					this.SendPropertyChanging();
					this._HasLiveMusicWed = value;
					this.SendPropertyChanged("HasLiveMusicWed");
					this.OnHasLiveMusicWedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasLiveMusicThu", DbType="Bit")]
		public System.Nullable<bool> HasLiveMusicThu
		{
			get
			{
				return this._HasLiveMusicThu;
			}
			set
			{
				if ((this._HasLiveMusicThu != value))
				{
					this.OnHasLiveMusicThuChanging(value);
					this.SendPropertyChanging();
					this._HasLiveMusicThu = value;
					this.SendPropertyChanged("HasLiveMusicThu");
					this.OnHasLiveMusicThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasLiveMusicFri", DbType="Bit")]
		public System.Nullable<bool> HasLiveMusicFri
		{
			get
			{
				return this._HasLiveMusicFri;
			}
			set
			{
				if ((this._HasLiveMusicFri != value))
				{
					this.OnHasLiveMusicFriChanging(value);
					this.SendPropertyChanging();
					this._HasLiveMusicFri = value;
					this.SendPropertyChanged("HasLiveMusicFri");
					this.OnHasLiveMusicFriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasLiveMusicSat", DbType="Bit")]
		public System.Nullable<bool> HasLiveMusicSat
		{
			get
			{
				return this._HasLiveMusicSat;
			}
			set
			{
				if ((this._HasLiveMusicSat != value))
				{
					this.OnHasLiveMusicSatChanging(value);
					this.SendPropertyChanging();
					this._HasLiveMusicSat = value;
					this.SendPropertyChanged("HasLiveMusicSat");
					this.OnHasLiveMusicSatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasLiveMusicSun", DbType="Bit")]
		public System.Nullable<bool> HasLiveMusicSun
		{
			get
			{
				return this._HasLiveMusicSun;
			}
			set
			{
				if ((this._HasLiveMusicSun != value))
				{
					this.OnHasLiveMusicSunChanging(value);
					this.SendPropertyChanging();
					this._HasLiveMusicSun = value;
					this.SendPropertyChanged("HasLiveMusicSun");
					this.OnHasLiveMusicSunChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScrapeResortStats")]
	public partial class ScrapeResortStat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _PrettyUrl;
		
		private string _CountryName;
		
		private string _BaseLevel;
		
		private string _TopLevel;
		
		private string _VerticalDrop;
		
		private string _Height;
		
		private string _AverageSnowfall;
		
		private string _HasSnowmaking;
		
		private string _SnowmakingCoverage;
		
		private string _PreSeasonStartMonth;
		
		private string _SeasonStartMonth;
		
		private string _SeasonEndMonth;
		
		private string _Population;
		
		private string _MountainRestaurants;
		
		private string _LiftDescription;
		
		private string _LiftTotal;
		
		private string _LiftCapacityHour;
		
		private string _QuadPlusCount;
		
		private string _QuadCount;
		
		private string _TripleCount;
		
		private string _DoubleCount;
		
		private string _SingleCount;
		
		private string _SurfaceCount;
		
		private string _GondolaCount;
		
		private string _FunicularCount;
		
		private string _SurfaceTrainCount;
		
		private string _RunTotal;
		
		private string _BlackRuns;
		
		private string _RedRuns;
		
		private string _BlueRuns;
		
		private string _GreenRuns;
		
		private string _LongestRunDistance;
		
		private string _SkiableTerrianSize;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPrettyUrlChanging(string value);
    partial void OnPrettyUrlChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    partial void OnBaseLevelChanging(string value);
    partial void OnBaseLevelChanged();
    partial void OnTopLevelChanging(string value);
    partial void OnTopLevelChanged();
    partial void OnVerticalDropChanging(string value);
    partial void OnVerticalDropChanged();
    partial void OnHeightChanging(string value);
    partial void OnHeightChanged();
    partial void OnAverageSnowfallChanging(string value);
    partial void OnAverageSnowfallChanged();
    partial void OnHasSnowmakingChanging(string value);
    partial void OnHasSnowmakingChanged();
    partial void OnSnowmakingCoverageChanging(string value);
    partial void OnSnowmakingCoverageChanged();
    partial void OnPreSeasonStartMonthChanging(string value);
    partial void OnPreSeasonStartMonthChanged();
    partial void OnSeasonStartMonthChanging(string value);
    partial void OnSeasonStartMonthChanged();
    partial void OnSeasonEndMonthChanging(string value);
    partial void OnSeasonEndMonthChanged();
    partial void OnPopulationChanging(string value);
    partial void OnPopulationChanged();
    partial void OnMountainRestaurantsChanging(string value);
    partial void OnMountainRestaurantsChanged();
    partial void OnLiftDescriptionChanging(string value);
    partial void OnLiftDescriptionChanged();
    partial void OnLiftTotalChanging(string value);
    partial void OnLiftTotalChanged();
    partial void OnLiftCapacityHourChanging(string value);
    partial void OnLiftCapacityHourChanged();
    partial void OnQuadPlusCountChanging(string value);
    partial void OnQuadPlusCountChanged();
    partial void OnQuadCountChanging(string value);
    partial void OnQuadCountChanged();
    partial void OnTripleCountChanging(string value);
    partial void OnTripleCountChanged();
    partial void OnDoubleCountChanging(string value);
    partial void OnDoubleCountChanged();
    partial void OnSingleCountChanging(string value);
    partial void OnSingleCountChanged();
    partial void OnSurfaceCountChanging(string value);
    partial void OnSurfaceCountChanged();
    partial void OnGondolaCountChanging(string value);
    partial void OnGondolaCountChanged();
    partial void OnFunicularCountChanging(string value);
    partial void OnFunicularCountChanged();
    partial void OnSurfaceTrainCountChanging(string value);
    partial void OnSurfaceTrainCountChanged();
    partial void OnRunTotalChanging(string value);
    partial void OnRunTotalChanged();
    partial void OnBlackRunsChanging(string value);
    partial void OnBlackRunsChanged();
    partial void OnRedRunsChanging(string value);
    partial void OnRedRunsChanged();
    partial void OnBlueRunsChanging(string value);
    partial void OnBlueRunsChanged();
    partial void OnGreenRunsChanging(string value);
    partial void OnGreenRunsChanged();
    partial void OnLongestRunDistanceChanging(string value);
    partial void OnLongestRunDistanceChanged();
    partial void OnSkiableTerrianSizeChanging(string value);
    partial void OnSkiableTerrianSizeChanged();
    #endregion
		
		public ScrapeResortStat()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrettyUrl", DbType="VarChar(100)")]
		public string PrettyUrl
		{
			get
			{
				return this._PrettyUrl;
			}
			set
			{
				if ((this._PrettyUrl != value))
				{
					this.OnPrettyUrlChanging(value);
					this.SendPropertyChanging();
					this._PrettyUrl = value;
					this.SendPropertyChanged("PrettyUrl");
					this.OnPrettyUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="VarChar(100)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseLevel", DbType="VarChar(20)")]
		public string BaseLevel
		{
			get
			{
				return this._BaseLevel;
			}
			set
			{
				if ((this._BaseLevel != value))
				{
					this.OnBaseLevelChanging(value);
					this.SendPropertyChanging();
					this._BaseLevel = value;
					this.SendPropertyChanged("BaseLevel");
					this.OnBaseLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopLevel", DbType="VarChar(20)")]
		public string TopLevel
		{
			get
			{
				return this._TopLevel;
			}
			set
			{
				if ((this._TopLevel != value))
				{
					this.OnTopLevelChanging(value);
					this.SendPropertyChanging();
					this._TopLevel = value;
					this.SendPropertyChanged("TopLevel");
					this.OnTopLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerticalDrop", DbType="VarChar(20)")]
		public string VerticalDrop
		{
			get
			{
				return this._VerticalDrop;
			}
			set
			{
				if ((this._VerticalDrop != value))
				{
					this.OnVerticalDropChanging(value);
					this.SendPropertyChanging();
					this._VerticalDrop = value;
					this.SendPropertyChanged("VerticalDrop");
					this.OnVerticalDropChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="VarChar(20)")]
		public string Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AverageSnowfall", DbType="VarChar(20)")]
		public string AverageSnowfall
		{
			get
			{
				return this._AverageSnowfall;
			}
			set
			{
				if ((this._AverageSnowfall != value))
				{
					this.OnAverageSnowfallChanging(value);
					this.SendPropertyChanging();
					this._AverageSnowfall = value;
					this.SendPropertyChanged("AverageSnowfall");
					this.OnAverageSnowfallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasSnowmaking", DbType="VarChar(20)")]
		public string HasSnowmaking
		{
			get
			{
				return this._HasSnowmaking;
			}
			set
			{
				if ((this._HasSnowmaking != value))
				{
					this.OnHasSnowmakingChanging(value);
					this.SendPropertyChanging();
					this._HasSnowmaking = value;
					this.SendPropertyChanged("HasSnowmaking");
					this.OnHasSnowmakingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SnowmakingCoverage", DbType="VarChar(20)")]
		public string SnowmakingCoverage
		{
			get
			{
				return this._SnowmakingCoverage;
			}
			set
			{
				if ((this._SnowmakingCoverage != value))
				{
					this.OnSnowmakingCoverageChanging(value);
					this.SendPropertyChanging();
					this._SnowmakingCoverage = value;
					this.SendPropertyChanged("SnowmakingCoverage");
					this.OnSnowmakingCoverageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreSeasonStartMonth", DbType="VarChar(20)")]
		public string PreSeasonStartMonth
		{
			get
			{
				return this._PreSeasonStartMonth;
			}
			set
			{
				if ((this._PreSeasonStartMonth != value))
				{
					this.OnPreSeasonStartMonthChanging(value);
					this.SendPropertyChanging();
					this._PreSeasonStartMonth = value;
					this.SendPropertyChanged("PreSeasonStartMonth");
					this.OnPreSeasonStartMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeasonStartMonth", DbType="VarChar(20)")]
		public string SeasonStartMonth
		{
			get
			{
				return this._SeasonStartMonth;
			}
			set
			{
				if ((this._SeasonStartMonth != value))
				{
					this.OnSeasonStartMonthChanging(value);
					this.SendPropertyChanging();
					this._SeasonStartMonth = value;
					this.SendPropertyChanged("SeasonStartMonth");
					this.OnSeasonStartMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeasonEndMonth", DbType="VarChar(20)")]
		public string SeasonEndMonth
		{
			get
			{
				return this._SeasonEndMonth;
			}
			set
			{
				if ((this._SeasonEndMonth != value))
				{
					this.OnSeasonEndMonthChanging(value);
					this.SendPropertyChanging();
					this._SeasonEndMonth = value;
					this.SendPropertyChanged("SeasonEndMonth");
					this.OnSeasonEndMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Population", DbType="VarChar(20)")]
		public string Population
		{
			get
			{
				return this._Population;
			}
			set
			{
				if ((this._Population != value))
				{
					this.OnPopulationChanging(value);
					this.SendPropertyChanging();
					this._Population = value;
					this.SendPropertyChanged("Population");
					this.OnPopulationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MountainRestaurants", DbType="VarChar(20)")]
		public string MountainRestaurants
		{
			get
			{
				return this._MountainRestaurants;
			}
			set
			{
				if ((this._MountainRestaurants != value))
				{
					this.OnMountainRestaurantsChanging(value);
					this.SendPropertyChanging();
					this._MountainRestaurants = value;
					this.SendPropertyChanged("MountainRestaurants");
					this.OnMountainRestaurantsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiftDescription", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string LiftDescription
		{
			get
			{
				return this._LiftDescription;
			}
			set
			{
				if ((this._LiftDescription != value))
				{
					this.OnLiftDescriptionChanging(value);
					this.SendPropertyChanging();
					this._LiftDescription = value;
					this.SendPropertyChanged("LiftDescription");
					this.OnLiftDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiftTotal", DbType="VarChar(20)")]
		public string LiftTotal
		{
			get
			{
				return this._LiftTotal;
			}
			set
			{
				if ((this._LiftTotal != value))
				{
					this.OnLiftTotalChanging(value);
					this.SendPropertyChanging();
					this._LiftTotal = value;
					this.SendPropertyChanged("LiftTotal");
					this.OnLiftTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiftCapacityHour", DbType="VarChar(20)")]
		public string LiftCapacityHour
		{
			get
			{
				return this._LiftCapacityHour;
			}
			set
			{
				if ((this._LiftCapacityHour != value))
				{
					this.OnLiftCapacityHourChanging(value);
					this.SendPropertyChanging();
					this._LiftCapacityHour = value;
					this.SendPropertyChanged("LiftCapacityHour");
					this.OnLiftCapacityHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuadPlusCount", DbType="VarChar(20)")]
		public string QuadPlusCount
		{
			get
			{
				return this._QuadPlusCount;
			}
			set
			{
				if ((this._QuadPlusCount != value))
				{
					this.OnQuadPlusCountChanging(value);
					this.SendPropertyChanging();
					this._QuadPlusCount = value;
					this.SendPropertyChanged("QuadPlusCount");
					this.OnQuadPlusCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuadCount", DbType="VarChar(20)")]
		public string QuadCount
		{
			get
			{
				return this._QuadCount;
			}
			set
			{
				if ((this._QuadCount != value))
				{
					this.OnQuadCountChanging(value);
					this.SendPropertyChanging();
					this._QuadCount = value;
					this.SendPropertyChanged("QuadCount");
					this.OnQuadCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TripleCount", DbType="VarChar(20)")]
		public string TripleCount
		{
			get
			{
				return this._TripleCount;
			}
			set
			{
				if ((this._TripleCount != value))
				{
					this.OnTripleCountChanging(value);
					this.SendPropertyChanging();
					this._TripleCount = value;
					this.SendPropertyChanged("TripleCount");
					this.OnTripleCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoubleCount", DbType="VarChar(20)")]
		public string DoubleCount
		{
			get
			{
				return this._DoubleCount;
			}
			set
			{
				if ((this._DoubleCount != value))
				{
					this.OnDoubleCountChanging(value);
					this.SendPropertyChanging();
					this._DoubleCount = value;
					this.SendPropertyChanged("DoubleCount");
					this.OnDoubleCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SingleCount", DbType="VarChar(20)")]
		public string SingleCount
		{
			get
			{
				return this._SingleCount;
			}
			set
			{
				if ((this._SingleCount != value))
				{
					this.OnSingleCountChanging(value);
					this.SendPropertyChanging();
					this._SingleCount = value;
					this.SendPropertyChanged("SingleCount");
					this.OnSingleCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurfaceCount", DbType="VarChar(20)")]
		public string SurfaceCount
		{
			get
			{
				return this._SurfaceCount;
			}
			set
			{
				if ((this._SurfaceCount != value))
				{
					this.OnSurfaceCountChanging(value);
					this.SendPropertyChanging();
					this._SurfaceCount = value;
					this.SendPropertyChanged("SurfaceCount");
					this.OnSurfaceCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GondolaCount", DbType="VarChar(20)")]
		public string GondolaCount
		{
			get
			{
				return this._GondolaCount;
			}
			set
			{
				if ((this._GondolaCount != value))
				{
					this.OnGondolaCountChanging(value);
					this.SendPropertyChanging();
					this._GondolaCount = value;
					this.SendPropertyChanged("GondolaCount");
					this.OnGondolaCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunicularCount", DbType="VarChar(20)")]
		public string FunicularCount
		{
			get
			{
				return this._FunicularCount;
			}
			set
			{
				if ((this._FunicularCount != value))
				{
					this.OnFunicularCountChanging(value);
					this.SendPropertyChanging();
					this._FunicularCount = value;
					this.SendPropertyChanged("FunicularCount");
					this.OnFunicularCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurfaceTrainCount", DbType="VarChar(20)")]
		public string SurfaceTrainCount
		{
			get
			{
				return this._SurfaceTrainCount;
			}
			set
			{
				if ((this._SurfaceTrainCount != value))
				{
					this.OnSurfaceTrainCountChanging(value);
					this.SendPropertyChanging();
					this._SurfaceTrainCount = value;
					this.SendPropertyChanged("SurfaceTrainCount");
					this.OnSurfaceTrainCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunTotal", DbType="VarChar(20)")]
		public string RunTotal
		{
			get
			{
				return this._RunTotal;
			}
			set
			{
				if ((this._RunTotal != value))
				{
					this.OnRunTotalChanging(value);
					this.SendPropertyChanging();
					this._RunTotal = value;
					this.SendPropertyChanged("RunTotal");
					this.OnRunTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlackRuns", DbType="VarChar(20)")]
		public string BlackRuns
		{
			get
			{
				return this._BlackRuns;
			}
			set
			{
				if ((this._BlackRuns != value))
				{
					this.OnBlackRunsChanging(value);
					this.SendPropertyChanging();
					this._BlackRuns = value;
					this.SendPropertyChanged("BlackRuns");
					this.OnBlackRunsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RedRuns", DbType="VarChar(20)")]
		public string RedRuns
		{
			get
			{
				return this._RedRuns;
			}
			set
			{
				if ((this._RedRuns != value))
				{
					this.OnRedRunsChanging(value);
					this.SendPropertyChanging();
					this._RedRuns = value;
					this.SendPropertyChanged("RedRuns");
					this.OnRedRunsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlueRuns", DbType="VarChar(20)")]
		public string BlueRuns
		{
			get
			{
				return this._BlueRuns;
			}
			set
			{
				if ((this._BlueRuns != value))
				{
					this.OnBlueRunsChanging(value);
					this.SendPropertyChanging();
					this._BlueRuns = value;
					this.SendPropertyChanged("BlueRuns");
					this.OnBlueRunsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GreenRuns", DbType="VarChar(20)")]
		public string GreenRuns
		{
			get
			{
				return this._GreenRuns;
			}
			set
			{
				if ((this._GreenRuns != value))
				{
					this.OnGreenRunsChanging(value);
					this.SendPropertyChanging();
					this._GreenRuns = value;
					this.SendPropertyChanged("GreenRuns");
					this.OnGreenRunsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongestRunDistance", DbType="VarChar(20)")]
		public string LongestRunDistance
		{
			get
			{
				return this._LongestRunDistance;
			}
			set
			{
				if ((this._LongestRunDistance != value))
				{
					this.OnLongestRunDistanceChanging(value);
					this.SendPropertyChanging();
					this._LongestRunDistance = value;
					this.SendPropertyChanged("LongestRunDistance");
					this.OnLongestRunDistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkiableTerrianSize", DbType="VarChar(20)")]
		public string SkiableTerrianSize
		{
			get
			{
				return this._SkiableTerrianSize;
			}
			set
			{
				if ((this._SkiableTerrianSize != value))
				{
					this.OnSkiableTerrianSizeChanging(value);
					this.SendPropertyChanging();
					this._SkiableTerrianSize = value;
					this.SendPropertyChanged("SkiableTerrianSize");
					this.OnSkiableTerrianSizeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Service")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ResortID;
		
		private System.Nullable<int> _ServiceCategoryID;
		
		private string _ServiceName;
		
		private string _Address;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnResortIDChanging(System.Nullable<int> value);
    partial void OnResortIDChanged();
    partial void OnServiceCategoryIDChanging(System.Nullable<int> value);
    partial void OnServiceCategoryIDChanged();
    partial void OnServiceNameChanging(string value);
    partial void OnServiceNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public Service()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortID", DbType="Int")]
		public System.Nullable<int> ResortID
		{
			get
			{
				return this._ResortID;
			}
			set
			{
				if ((this._ResortID != value))
				{
					this.OnResortIDChanging(value);
					this.SendPropertyChanging();
					this._ResortID = value;
					this.SendPropertyChanged("ResortID");
					this.OnResortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCategoryID", DbType="Int")]
		public System.Nullable<int> ServiceCategoryID
		{
			get
			{
				return this._ServiceCategoryID;
			}
			set
			{
				if ((this._ServiceCategoryID != value))
				{
					this.OnServiceCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceCategoryID = value;
					this.SendPropertyChanged("ServiceCategoryID");
					this.OnServiceCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="VarChar(100)")]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this.OnServiceNameChanging(value);
					this.SendPropertyChanging();
					this._ServiceName = value;
					this.SendPropertyChanged("ServiceName");
					this.OnServiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SkiArea")]
	public partial class SkiArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public SkiArea()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SkiBoardModel")]
	public partial class SkiBoardModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _IsSnowboard;
		
		private System.Nullable<int> _ManufacturerID;
		
		private string _ManufacturerOther;
		
		private string _ModelName;
		
		private System.Nullable<int> _Length;
		
		private System.Nullable<int> _BoardBindingTypeID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnIsSnowboardChanging(System.Nullable<int> value);
    partial void OnIsSnowboardChanged();
    partial void OnManufacturerIDChanging(System.Nullable<int> value);
    partial void OnManufacturerIDChanged();
    partial void OnManufacturerOtherChanging(string value);
    partial void OnManufacturerOtherChanged();
    partial void OnModelNameChanging(string value);
    partial void OnModelNameChanged();
    partial void OnLengthChanging(System.Nullable<int> value);
    partial void OnLengthChanged();
    partial void OnBoardBindingTypeIDChanging(System.Nullable<int> value);
    partial void OnBoardBindingTypeIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public SkiBoardModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSnowboard", DbType="Int")]
		public System.Nullable<int> IsSnowboard
		{
			get
			{
				return this._IsSnowboard;
			}
			set
			{
				if ((this._IsSnowboard != value))
				{
					this.OnIsSnowboardChanging(value);
					this.SendPropertyChanging();
					this._IsSnowboard = value;
					this.SendPropertyChanged("IsSnowboard");
					this.OnIsSnowboardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerID", DbType="Int")]
		public System.Nullable<int> ManufacturerID
		{
			get
			{
				return this._ManufacturerID;
			}
			set
			{
				if ((this._ManufacturerID != value))
				{
					this.OnManufacturerIDChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerID = value;
					this.SendPropertyChanged("ManufacturerID");
					this.OnManufacturerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerOther", DbType="VarChar(100)")]
		public string ManufacturerOther
		{
			get
			{
				return this._ManufacturerOther;
			}
			set
			{
				if ((this._ManufacturerOther != value))
				{
					this.OnManufacturerOtherChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerOther = value;
					this.SendPropertyChanged("ManufacturerOther");
					this.OnManufacturerOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelName", DbType="VarChar(100)")]
		public string ModelName
		{
			get
			{
				return this._ModelName;
			}
			set
			{
				if ((this._ModelName != value))
				{
					this.OnModelNameChanging(value);
					this.SendPropertyChanging();
					this._ModelName = value;
					this.SendPropertyChanged("ModelName");
					this.OnModelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Int")]
		public System.Nullable<int> Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardBindingTypeID", DbType="Int")]
		public System.Nullable<int> BoardBindingTypeID
		{
			get
			{
				return this._BoardBindingTypeID;
			}
			set
			{
				if ((this._BoardBindingTypeID != value))
				{
					this.OnBoardBindingTypeIDChanging(value);
					this.SendPropertyChanging();
					this._BoardBindingTypeID = value;
					this.SendPropertyChanged("BoardBindingTypeID");
					this.OnBoardBindingTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Thread")]
	public partial class Thread : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ForumID;
		
		private int _ThreadStatusID;
		
		private string _Title;
		
		private bool _IsVisible;
		
		private bool _IsSticky;
		
		private bool _IsAdmin;
		
		private int _ResortID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
		private EntitySet<Post> _Posts;
		
		private EntityRef<Forum> _Forum;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnForumIDChanging(int value);
    partial void OnForumIDChanged();
    partial void OnThreadStatusIDChanging(int value);
    partial void OnThreadStatusIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    partial void OnIsStickyChanging(bool value);
    partial void OnIsStickyChanged();
    partial void OnIsAdminChanging(bool value);
    partial void OnIsAdminChanged();
    partial void OnResortIDChanging(int value);
    partial void OnResortIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    #endregion
		
		public Thread()
		{
			this._Posts = new EntitySet<Post>(new Action<Post>(this.attach_Posts), new Action<Post>(this.detach_Posts));
			this._Forum = default(EntityRef<Forum>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumID", DbType="Int NOT NULL")]
		public int ForumID
		{
			get
			{
				return this._ForumID;
			}
			set
			{
				if ((this._ForumID != value))
				{
					if (this._Forum.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumIDChanging(value);
					this.SendPropertyChanging();
					this._ForumID = value;
					this.SendPropertyChanged("ForumID");
					this.OnForumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThreadStatusID", DbType="Int NOT NULL")]
		public int ThreadStatusID
		{
			get
			{
				return this._ThreadStatusID;
			}
			set
			{
				if ((this._ThreadStatusID != value))
				{
					this.OnThreadStatusIDChanging(value);
					this.SendPropertyChanging();
					this._ThreadStatusID = value;
					this.SendPropertyChanged("ThreadStatusID");
					this.OnThreadStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit NOT NULL")]
		public bool IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSticky", DbType="Bit NOT NULL")]
		public bool IsSticky
		{
			get
			{
				return this._IsSticky;
			}
			set
			{
				if ((this._IsSticky != value))
				{
					this.OnIsStickyChanging(value);
					this.SendPropertyChanging();
					this._IsSticky = value;
					this.SendPropertyChanged("IsSticky");
					this.OnIsStickyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Bit NOT NULL")]
		public bool IsAdmin
		{
			get
			{
				return this._IsAdmin;
			}
			set
			{
				if ((this._IsAdmin != value))
				{
					this.OnIsAdminChanging(value);
					this.SendPropertyChanging();
					this._IsAdmin = value;
					this.SendPropertyChanged("IsAdmin");
					this.OnIsAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResortID", DbType="Int NOT NULL")]
		public int ResortID
		{
			get
			{
				return this._ResortID;
			}
			set
			{
				if ((this._ResortID != value))
				{
					this.OnResortIDChanging(value);
					this.SendPropertyChanging();
					this._ResortID = value;
					this.SendPropertyChanged("ResortID");
					this.OnResortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Thread_Post", Storage="_Posts", ThisKey="ID", OtherKey="ThreadID")]
		public EntitySet<Post> Posts
		{
			get
			{
				return this._Posts;
			}
			set
			{
				this._Posts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Forum_Thread", Storage="_Forum", ThisKey="ForumID", OtherKey="ID", IsForeignKey=true)]
		public Forum Forum
		{
			get
			{
				return this._Forum.Entity;
			}
			set
			{
				Forum previousValue = this._Forum.Entity;
				if (((previousValue != value) 
							|| (this._Forum.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Forum.Entity = null;
						previousValue.Threads.Remove(this);
					}
					this._Forum.Entity = value;
					if ((value != null))
					{
						value.Threads.Add(this);
						this._ForumID = value.ID;
					}
					else
					{
						this._ForumID = default(int);
					}
					this.SendPropertyChanged("Forum");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Thread", Storage="_User", ThisKey="UpdatedUserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Threads.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Threads.Add(this);
						this._UpdatedUserID = value.ID;
					}
					else
					{
						this._UpdatedUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Thread1", Storage="_User1", ThisKey="CreatedUserID", OtherKey="ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Threads1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Threads1.Add(this);
						this._CreatedUserID = value.ID;
					}
					else
					{
						this._CreatedUserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.Thread = this;
		}
		
		private void detach_Posts(Post entity)
		{
			this.SendPropertyChanging();
			entity.Thread = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRole")]
	public partial class UserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserRoleCode;
		
		private string _Name;
		
		private string _UserRoleDesc;
		
		private bool _IsAdmin;
		
		private bool _IsModerator;
		
		private bool _IsUserAdmin;
		
		private bool _IsDataAdmin;
		
		private bool _IsSuperAdmin;
		
		private int _PointsRequired;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserRoleCodeChanging(string value);
    partial void OnUserRoleCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUserRoleDescChanging(string value);
    partial void OnUserRoleDescChanged();
    partial void OnIsAdminChanging(bool value);
    partial void OnIsAdminChanged();
    partial void OnIsModeratorChanging(bool value);
    partial void OnIsModeratorChanged();
    partial void OnIsUserAdminChanging(bool value);
    partial void OnIsUserAdminChanged();
    partial void OnIsDataAdminChanging(bool value);
    partial void OnIsDataAdminChanged();
    partial void OnIsSuperAdminChanging(bool value);
    partial void OnIsSuperAdminChanged();
    partial void OnPointsRequiredChanging(int value);
    partial void OnPointsRequiredChanged();
    #endregion
		
		public UserRole()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRoleCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserRoleCode
		{
			get
			{
				return this._UserRoleCode;
			}
			set
			{
				if ((this._UserRoleCode != value))
				{
					this.OnUserRoleCodeChanging(value);
					this.SendPropertyChanging();
					this._UserRoleCode = value;
					this.SendPropertyChanged("UserRoleCode");
					this.OnUserRoleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRoleDesc", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string UserRoleDesc
		{
			get
			{
				return this._UserRoleDesc;
			}
			set
			{
				if ((this._UserRoleDesc != value))
				{
					this.OnUserRoleDescChanging(value);
					this.SendPropertyChanging();
					this._UserRoleDesc = value;
					this.SendPropertyChanged("UserRoleDesc");
					this.OnUserRoleDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Bit NOT NULL")]
		public bool IsAdmin
		{
			get
			{
				return this._IsAdmin;
			}
			set
			{
				if ((this._IsAdmin != value))
				{
					this.OnIsAdminChanging(value);
					this.SendPropertyChanging();
					this._IsAdmin = value;
					this.SendPropertyChanged("IsAdmin");
					this.OnIsAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsModerator", DbType="Bit NOT NULL")]
		public bool IsModerator
		{
			get
			{
				return this._IsModerator;
			}
			set
			{
				if ((this._IsModerator != value))
				{
					this.OnIsModeratorChanging(value);
					this.SendPropertyChanging();
					this._IsModerator = value;
					this.SendPropertyChanged("IsModerator");
					this.OnIsModeratorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUserAdmin", DbType="Bit NOT NULL")]
		public bool IsUserAdmin
		{
			get
			{
				return this._IsUserAdmin;
			}
			set
			{
				if ((this._IsUserAdmin != value))
				{
					this.OnIsUserAdminChanging(value);
					this.SendPropertyChanging();
					this._IsUserAdmin = value;
					this.SendPropertyChanged("IsUserAdmin");
					this.OnIsUserAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDataAdmin", DbType="Bit NOT NULL")]
		public bool IsDataAdmin
		{
			get
			{
				return this._IsDataAdmin;
			}
			set
			{
				if ((this._IsDataAdmin != value))
				{
					this.OnIsDataAdminChanging(value);
					this.SendPropertyChanging();
					this._IsDataAdmin = value;
					this.SendPropertyChanged("IsDataAdmin");
					this.OnIsDataAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuperAdmin", DbType="Bit NOT NULL")]
		public bool IsSuperAdmin
		{
			get
			{
				return this._IsSuperAdmin;
			}
			set
			{
				if ((this._IsSuperAdmin != value))
				{
					this.OnIsSuperAdminChanging(value);
					this.SendPropertyChanging();
					this._IsSuperAdmin = value;
					this.SendPropertyChanged("IsSuperAdmin");
					this.OnIsSuperAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointsRequired", DbType="Int NOT NULL")]
		public int PointsRequired
		{
			get
			{
				return this._PointsRequired;
			}
			set
			{
				if ((this._PointsRequired != value))
				{
					this.OnPointsRequiredChanging(value);
					this.SendPropertyChanging();
					this._PointsRequired = value;
					this.SendPropertyChanged("PointsRequired");
					this.OnPointsRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRole_User", Storage="_Users", ThisKey="ID", OtherKey="UserRoleID")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.UserRole = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.UserRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Activity")]
	public partial class Activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FacebookUid;
		
		private string _ActionText;
		
		private string _ActionLink;
		
		private string _ActionClass;
		
		private string _SubjectText;
		
		private string _SubjectLink;
		
		private System.Nullable<int> _SubjectID;
		
		private System.DateTime _CreatedDate;
		
		private int _CreatedUserID;
		
		private System.DateTime _UpdatedDate;
		
		private int _UpdatedUserID;
		
		private int _UserID;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFacebookUidChanging(string value);
    partial void OnFacebookUidChanged();
    partial void OnActionTextChanging(string value);
    partial void OnActionTextChanged();
    partial void OnActionLinkChanging(string value);
    partial void OnActionLinkChanged();
    partial void OnActionClassChanging(string value);
    partial void OnActionClassChanged();
    partial void OnSubjectTextChanging(string value);
    partial void OnSubjectTextChanged();
    partial void OnSubjectLinkChanging(string value);
    partial void OnSubjectLinkChanged();
    partial void OnSubjectIDChanging(System.Nullable<int> value);
    partial void OnSubjectIDChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(int value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(int value);
    partial void OnUpdatedUserIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    #endregion
		
		public Activity()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacebookUid", DbType="VarChar(20)")]
		public string FacebookUid
		{
			get
			{
				return this._FacebookUid;
			}
			set
			{
				if ((this._FacebookUid != value))
				{
					this.OnFacebookUidChanging(value);
					this.SendPropertyChanging();
					this._FacebookUid = value;
					this.SendPropertyChanged("FacebookUid");
					this.OnFacebookUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionText", DbType="VarChar(20)")]
		public string ActionText
		{
			get
			{
				return this._ActionText;
			}
			set
			{
				if ((this._ActionText != value))
				{
					this.OnActionTextChanging(value);
					this.SendPropertyChanging();
					this._ActionText = value;
					this.SendPropertyChanged("ActionText");
					this.OnActionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionLink", DbType="VarChar(250)")]
		public string ActionLink
		{
			get
			{
				return this._ActionLink;
			}
			set
			{
				if ((this._ActionLink != value))
				{
					this.OnActionLinkChanging(value);
					this.SendPropertyChanging();
					this._ActionLink = value;
					this.SendPropertyChanged("ActionLink");
					this.OnActionLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionClass", DbType="VarChar(20)")]
		public string ActionClass
		{
			get
			{
				return this._ActionClass;
			}
			set
			{
				if ((this._ActionClass != value))
				{
					this.OnActionClassChanging(value);
					this.SendPropertyChanging();
					this._ActionClass = value;
					this.SendPropertyChanged("ActionClass");
					this.OnActionClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectText", DbType="VarChar(250)")]
		public string SubjectText
		{
			get
			{
				return this._SubjectText;
			}
			set
			{
				if ((this._SubjectText != value))
				{
					this.OnSubjectTextChanging(value);
					this.SendPropertyChanging();
					this._SubjectText = value;
					this.SendPropertyChanged("SubjectText");
					this.OnSubjectTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectLink", DbType="VarChar(250)")]
		public string SubjectLink
		{
			get
			{
				return this._SubjectLink;
			}
			set
			{
				if ((this._SubjectLink != value))
				{
					this.OnSubjectLinkChanging(value);
					this.SendPropertyChanging();
					this._SubjectLink = value;
					this.SendPropertyChanged("SubjectLink");
					this.OnSubjectLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int")]
		public System.Nullable<int> SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this.OnSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._SubjectID = value;
					this.SendPropertyChanged("SubjectID");
					this.OnSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int NOT NULL")]
		public int CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int NOT NULL")]
		public int UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Activity", Storage="_User", ThisKey="CreatedUserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._CreatedUserID = value.ID;
					}
					else
					{
						this._CreatedUserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SignupStageReachedID;
		
		private string _ReferrerURL;
		
		private string _UserName;
		
		private string _Email;
		
		private string _Phone;
		
		private string _RealName;
		
		private string _Password;
		
		private int _UserRoleID;
		
		private System.Nullable<char> _Sex;
		
		private string _Age;
		
		private string _DobDay;
		
		private string _DobMonth;
		
		private string _DobYear;
		
		private string _UsualCity;
		
		private int _UsualCountryID;
		
		private bool _IsSnowboarder;
		
		private bool _IsFreerideBoarder;
		
		private bool _isFreestyleBoarder;
		
		private bool _IsAlpineBoarder;
		
		private bool _IsSkier;
		
		private bool _IsAlpineSkier;
		
		private bool _IsLanglaufSkier;
		
		private bool _IsNonBoarderSkier;
		
		private int _Points;
		
		private int _AddThreshold;
		
		private string _IPAddressOriginal;
		
		private string _IPAddressLast;
		
		private System.Nullable<System.DateTime> _LastVisitDate;
		
		private System.Nullable<System.DateTime> _JoinDate;
		
		private string _FacebookUid;
		
		private System.DateTime _CreatedDate;
		
		private int _CreatedUserID;
		
		private System.DateTime _UpdatedDate;
		
		private int _UpdatedUserID;
		
		private bool _HasProfilePicture;
		
		private EntitySet<CheckIn> _CheckIns;
		
		private EntitySet<LinkResortUser> _LinkResortUsers;
		
		private EntitySet<LinkUserSportType> _LinkUserSportTypes;
		
		private EntitySet<Thread> _Threads;
		
		private EntitySet<Thread> _Threads1;
		
		private EntitySet<Activity> _Activities;
		
		private EntitySet<ReviewUsefulness> _ReviewUsefulnesses;
		
		private EntityRef<UserRole> _UserRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSignupStageReachedIDChanging(int value);
    partial void OnSignupStageReachedIDChanged();
    partial void OnReferrerURLChanging(string value);
    partial void OnReferrerURLChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnRealNameChanging(string value);
    partial void OnRealNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUserRoleIDChanging(int value);
    partial void OnUserRoleIDChanged();
    partial void OnSexChanging(System.Nullable<char> value);
    partial void OnSexChanged();
    partial void OnAgeChanging(string value);
    partial void OnAgeChanged();
    partial void OnDobDayChanging(string value);
    partial void OnDobDayChanged();
    partial void OnDobMonthChanging(string value);
    partial void OnDobMonthChanged();
    partial void OnDobYearChanging(string value);
    partial void OnDobYearChanged();
    partial void OnUsualCityChanging(string value);
    partial void OnUsualCityChanged();
    partial void OnUsualCountryIDChanging(int value);
    partial void OnUsualCountryIDChanged();
    partial void OnIsSnowboarderChanging(bool value);
    partial void OnIsSnowboarderChanged();
    partial void OnIsFreerideBoarderChanging(bool value);
    partial void OnIsFreerideBoarderChanged();
    partial void OnisFreestyleBoarderChanging(bool value);
    partial void OnisFreestyleBoarderChanged();
    partial void OnIsAlpineBoarderChanging(bool value);
    partial void OnIsAlpineBoarderChanged();
    partial void OnIsSkierChanging(bool value);
    partial void OnIsSkierChanged();
    partial void OnIsAlpineSkierChanging(bool value);
    partial void OnIsAlpineSkierChanged();
    partial void OnIsLanglaufSkierChanging(bool value);
    partial void OnIsLanglaufSkierChanged();
    partial void OnIsNonBoarderSkierChanging(bool value);
    partial void OnIsNonBoarderSkierChanged();
    partial void OnPointsChanging(int value);
    partial void OnPointsChanged();
    partial void OnAddThresholdChanging(int value);
    partial void OnAddThresholdChanged();
    partial void OnIPAddressOriginalChanging(string value);
    partial void OnIPAddressOriginalChanged();
    partial void OnIPAddressLastChanging(string value);
    partial void OnIPAddressLastChanged();
    partial void OnLastVisitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastVisitDateChanged();
    partial void OnJoinDateChanging(System.Nullable<System.DateTime> value);
    partial void OnJoinDateChanged();
    partial void OnFacebookUidChanging(string value);
    partial void OnFacebookUidChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(int value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(int value);
    partial void OnUpdatedUserIDChanged();
    partial void OnHasProfilePictureChanging(bool value);
    partial void OnHasProfilePictureChanged();
    #endregion
		
		public User()
		{
			this._CheckIns = new EntitySet<CheckIn>(new Action<CheckIn>(this.attach_CheckIns), new Action<CheckIn>(this.detach_CheckIns));
			this._LinkResortUsers = new EntitySet<LinkResortUser>(new Action<LinkResortUser>(this.attach_LinkResortUsers), new Action<LinkResortUser>(this.detach_LinkResortUsers));
			this._LinkUserSportTypes = new EntitySet<LinkUserSportType>(new Action<LinkUserSportType>(this.attach_LinkUserSportTypes), new Action<LinkUserSportType>(this.detach_LinkUserSportTypes));
			this._Threads = new EntitySet<Thread>(new Action<Thread>(this.attach_Threads), new Action<Thread>(this.detach_Threads));
			this._Threads1 = new EntitySet<Thread>(new Action<Thread>(this.attach_Threads1), new Action<Thread>(this.detach_Threads1));
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			this._ReviewUsefulnesses = new EntitySet<ReviewUsefulness>(new Action<ReviewUsefulness>(this.attach_ReviewUsefulnesses), new Action<ReviewUsefulness>(this.detach_ReviewUsefulnesses));
			this._UserRole = default(EntityRef<UserRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignupStageReachedID", DbType="Int NOT NULL")]
		public int SignupStageReachedID
		{
			get
			{
				return this._SignupStageReachedID;
			}
			set
			{
				if ((this._SignupStageReachedID != value))
				{
					this.OnSignupStageReachedIDChanging(value);
					this.SendPropertyChanging();
					this._SignupStageReachedID = value;
					this.SendPropertyChanged("SignupStageReachedID");
					this.OnSignupStageReachedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferrerURL", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ReferrerURL
		{
			get
			{
				return this._ReferrerURL;
			}
			set
			{
				if ((this._ReferrerURL != value))
				{
					this.OnReferrerURLChanging(value);
					this.SendPropertyChanging();
					this._ReferrerURL = value;
					this.SendPropertyChanged("ReferrerURL");
					this.OnReferrerURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(15)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealName", DbType="VarChar(100)")]
		public string RealName
		{
			get
			{
				return this._RealName;
			}
			set
			{
				if ((this._RealName != value))
				{
					this.OnRealNameChanging(value);
					this.SendPropertyChanging();
					this._RealName = value;
					this.SendPropertyChanged("RealName");
					this.OnRealNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(100)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserRoleID", DbType="Int NOT NULL")]
		public int UserRoleID
		{
			get
			{
				return this._UserRoleID;
			}
			set
			{
				if ((this._UserRoleID != value))
				{
					if (this._UserRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserRoleIDChanging(value);
					this.SendPropertyChanging();
					this._UserRoleID = value;
					this.SendPropertyChanged("UserRoleID");
					this.OnUserRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Char(1)")]
		public System.Nullable<char> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Char(5)")]
		public string Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DobDay", DbType="VarChar(4)")]
		public string DobDay
		{
			get
			{
				return this._DobDay;
			}
			set
			{
				if ((this._DobDay != value))
				{
					this.OnDobDayChanging(value);
					this.SendPropertyChanging();
					this._DobDay = value;
					this.SendPropertyChanged("DobDay");
					this.OnDobDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DobMonth", DbType="VarChar(4)")]
		public string DobMonth
		{
			get
			{
				return this._DobMonth;
			}
			set
			{
				if ((this._DobMonth != value))
				{
					this.OnDobMonthChanging(value);
					this.SendPropertyChanging();
					this._DobMonth = value;
					this.SendPropertyChanged("DobMonth");
					this.OnDobMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DobYear", DbType="VarChar(4)")]
		public string DobYear
		{
			get
			{
				return this._DobYear;
			}
			set
			{
				if ((this._DobYear != value))
				{
					this.OnDobYearChanging(value);
					this.SendPropertyChanging();
					this._DobYear = value;
					this.SendPropertyChanged("DobYear");
					this.OnDobYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsualCity", DbType="VarChar(100)")]
		public string UsualCity
		{
			get
			{
				return this._UsualCity;
			}
			set
			{
				if ((this._UsualCity != value))
				{
					this.OnUsualCityChanging(value);
					this.SendPropertyChanging();
					this._UsualCity = value;
					this.SendPropertyChanged("UsualCity");
					this.OnUsualCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsualCountryID", DbType="Int NOT NULL")]
		public int UsualCountryID
		{
			get
			{
				return this._UsualCountryID;
			}
			set
			{
				if ((this._UsualCountryID != value))
				{
					this.OnUsualCountryIDChanging(value);
					this.SendPropertyChanging();
					this._UsualCountryID = value;
					this.SendPropertyChanged("UsualCountryID");
					this.OnUsualCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSnowboarder", DbType="Bit NOT NULL")]
		public bool IsSnowboarder
		{
			get
			{
				return this._IsSnowboarder;
			}
			set
			{
				if ((this._IsSnowboarder != value))
				{
					this.OnIsSnowboarderChanging(value);
					this.SendPropertyChanging();
					this._IsSnowboarder = value;
					this.SendPropertyChanged("IsSnowboarder");
					this.OnIsSnowboarderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFreerideBoarder", DbType="Bit NOT NULL")]
		public bool IsFreerideBoarder
		{
			get
			{
				return this._IsFreerideBoarder;
			}
			set
			{
				if ((this._IsFreerideBoarder != value))
				{
					this.OnIsFreerideBoarderChanging(value);
					this.SendPropertyChanging();
					this._IsFreerideBoarder = value;
					this.SendPropertyChanged("IsFreerideBoarder");
					this.OnIsFreerideBoarderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isFreestyleBoarder", DbType="Bit NOT NULL")]
		public bool isFreestyleBoarder
		{
			get
			{
				return this._isFreestyleBoarder;
			}
			set
			{
				if ((this._isFreestyleBoarder != value))
				{
					this.OnisFreestyleBoarderChanging(value);
					this.SendPropertyChanging();
					this._isFreestyleBoarder = value;
					this.SendPropertyChanged("isFreestyleBoarder");
					this.OnisFreestyleBoarderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAlpineBoarder", DbType="Bit NOT NULL")]
		public bool IsAlpineBoarder
		{
			get
			{
				return this._IsAlpineBoarder;
			}
			set
			{
				if ((this._IsAlpineBoarder != value))
				{
					this.OnIsAlpineBoarderChanging(value);
					this.SendPropertyChanging();
					this._IsAlpineBoarder = value;
					this.SendPropertyChanged("IsAlpineBoarder");
					this.OnIsAlpineBoarderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSkier", DbType="Bit NOT NULL")]
		public bool IsSkier
		{
			get
			{
				return this._IsSkier;
			}
			set
			{
				if ((this._IsSkier != value))
				{
					this.OnIsSkierChanging(value);
					this.SendPropertyChanging();
					this._IsSkier = value;
					this.SendPropertyChanged("IsSkier");
					this.OnIsSkierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAlpineSkier", DbType="Bit NOT NULL")]
		public bool IsAlpineSkier
		{
			get
			{
				return this._IsAlpineSkier;
			}
			set
			{
				if ((this._IsAlpineSkier != value))
				{
					this.OnIsAlpineSkierChanging(value);
					this.SendPropertyChanging();
					this._IsAlpineSkier = value;
					this.SendPropertyChanged("IsAlpineSkier");
					this.OnIsAlpineSkierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLanglaufSkier", DbType="Bit NOT NULL")]
		public bool IsLanglaufSkier
		{
			get
			{
				return this._IsLanglaufSkier;
			}
			set
			{
				if ((this._IsLanglaufSkier != value))
				{
					this.OnIsLanglaufSkierChanging(value);
					this.SendPropertyChanging();
					this._IsLanglaufSkier = value;
					this.SendPropertyChanged("IsLanglaufSkier");
					this.OnIsLanglaufSkierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNonBoarderSkier", DbType="Bit NOT NULL")]
		public bool IsNonBoarderSkier
		{
			get
			{
				return this._IsNonBoarderSkier;
			}
			set
			{
				if ((this._IsNonBoarderSkier != value))
				{
					this.OnIsNonBoarderSkierChanging(value);
					this.SendPropertyChanging();
					this._IsNonBoarderSkier = value;
					this.SendPropertyChanged("IsNonBoarderSkier");
					this.OnIsNonBoarderSkierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Points", DbType="Int NOT NULL")]
		public int Points
		{
			get
			{
				return this._Points;
			}
			set
			{
				if ((this._Points != value))
				{
					this.OnPointsChanging(value);
					this.SendPropertyChanging();
					this._Points = value;
					this.SendPropertyChanged("Points");
					this.OnPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddThreshold", DbType="Int NOT NULL")]
		public int AddThreshold
		{
			get
			{
				return this._AddThreshold;
			}
			set
			{
				if ((this._AddThreshold != value))
				{
					this.OnAddThresholdChanging(value);
					this.SendPropertyChanging();
					this._AddThreshold = value;
					this.SendPropertyChanged("AddThreshold");
					this.OnAddThresholdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddressOriginal", DbType="VarChar(20)")]
		public string IPAddressOriginal
		{
			get
			{
				return this._IPAddressOriginal;
			}
			set
			{
				if ((this._IPAddressOriginal != value))
				{
					this.OnIPAddressOriginalChanging(value);
					this.SendPropertyChanging();
					this._IPAddressOriginal = value;
					this.SendPropertyChanged("IPAddressOriginal");
					this.OnIPAddressOriginalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddressLast", DbType="VarChar(20)")]
		public string IPAddressLast
		{
			get
			{
				return this._IPAddressLast;
			}
			set
			{
				if ((this._IPAddressLast != value))
				{
					this.OnIPAddressLastChanging(value);
					this.SendPropertyChanging();
					this._IPAddressLast = value;
					this.SendPropertyChanged("IPAddressLast");
					this.OnIPAddressLastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastVisitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastVisitDate
		{
			get
			{
				return this._LastVisitDate;
			}
			set
			{
				if ((this._LastVisitDate != value))
				{
					this.OnLastVisitDateChanging(value);
					this.SendPropertyChanging();
					this._LastVisitDate = value;
					this.SendPropertyChanged("LastVisitDate");
					this.OnLastVisitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JoinDate
		{
			get
			{
				return this._JoinDate;
			}
			set
			{
				if ((this._JoinDate != value))
				{
					this.OnJoinDateChanging(value);
					this.SendPropertyChanging();
					this._JoinDate = value;
					this.SendPropertyChanged("JoinDate");
					this.OnJoinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacebookUid", DbType="VarChar(20)")]
		public string FacebookUid
		{
			get
			{
				return this._FacebookUid;
			}
			set
			{
				if ((this._FacebookUid != value))
				{
					this.OnFacebookUidChanging(value);
					this.SendPropertyChanging();
					this._FacebookUid = value;
					this.SendPropertyChanged("FacebookUid");
					this.OnFacebookUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int NOT NULL")]
		public int CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int NOT NULL")]
		public int UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasProfilePicture", DbType="Bit NOT NULL")]
		public bool HasProfilePicture
		{
			get
			{
				return this._HasProfilePicture;
			}
			set
			{
				if ((this._HasProfilePicture != value))
				{
					this.OnHasProfilePictureChanging(value);
					this.SendPropertyChanging();
					this._HasProfilePicture = value;
					this.SendPropertyChanged("HasProfilePicture");
					this.OnHasProfilePictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CheckIn", Storage="_CheckIns", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<CheckIn> CheckIns
		{
			get
			{
				return this._CheckIns;
			}
			set
			{
				this._CheckIns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_LinkResortUser", Storage="_LinkResortUsers", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<LinkResortUser> LinkResortUsers
		{
			get
			{
				return this._LinkResortUsers;
			}
			set
			{
				this._LinkResortUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_LinkUserSportType", Storage="_LinkUserSportTypes", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<LinkUserSportType> LinkUserSportTypes
		{
			get
			{
				return this._LinkUserSportTypes;
			}
			set
			{
				this._LinkUserSportTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Thread", Storage="_Threads", ThisKey="ID", OtherKey="UpdatedUserID")]
		public EntitySet<Thread> Threads
		{
			get
			{
				return this._Threads;
			}
			set
			{
				this._Threads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Thread1", Storage="_Threads1", ThisKey="ID", OtherKey="CreatedUserID")]
		public EntitySet<Thread> Threads1
		{
			get
			{
				return this._Threads1;
			}
			set
			{
				this._Threads1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Activity", Storage="_Activities", ThisKey="ID", OtherKey="CreatedUserID")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ReviewUsefulness", Storage="_ReviewUsefulnesses", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<ReviewUsefulness> ReviewUsefulnesses
		{
			get
			{
				return this._ReviewUsefulnesses;
			}
			set
			{
				this._ReviewUsefulnesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRole_User", Storage="_UserRole", ThisKey="UserRoleID", OtherKey="ID", IsForeignKey=true)]
		public UserRole UserRole
		{
			get
			{
				return this._UserRole.Entity;
			}
			set
			{
				UserRole previousValue = this._UserRole.Entity;
				if (((previousValue != value) 
							|| (this._UserRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserRole.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._UserRole.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._UserRoleID = value.ID;
					}
					else
					{
						this._UserRoleID = default(int);
					}
					this.SendPropertyChanged("UserRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CheckIns(CheckIn entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CheckIns(CheckIn entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_LinkResortUsers(LinkResortUser entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_LinkResortUsers(LinkResortUser entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_LinkUserSportTypes(LinkUserSportType entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_LinkUserSportTypes(LinkUserSportType entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Threads(Thread entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Threads(Thread entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Threads1(Thread entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Threads1(Thread entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ReviewUsefulnesses(ReviewUsefulness entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ReviewUsefulnesses(ReviewUsefulness entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Airport")]
	public partial class Airport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _NameFriendlyFormat;
		
		private string _PrettyUrl;
		
		private string _PrettyUrlFriendlyFormat;
		
		private string _Code;
		
		private System.Nullable<int> _CountryID;
		
		private string _CountryName;
		
		private System.Nullable<int> _ContinentID;
		
		private string _ContinentName;
		
		private System.Nullable<double> _Latitude;
		
		private System.Nullable<double> _Longitude;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _CreatedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<int> _UpdatedUserID;
		
		private string _Website;
		
		private EntityRef<Continent> _Continent;
		
		private EntityRef<Country> _Country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameFriendlyFormatChanging(string value);
    partial void OnNameFriendlyFormatChanged();
    partial void OnPrettyUrlChanging(string value);
    partial void OnPrettyUrlChanged();
    partial void OnPrettyUrlFriendlyFormatChanging(string value);
    partial void OnPrettyUrlFriendlyFormatChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnCountryIDChanging(System.Nullable<int> value);
    partial void OnCountryIDChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    partial void OnContinentIDChanging(System.Nullable<int> value);
    partial void OnContinentIDChanged();
    partial void OnContinentNameChanging(string value);
    partial void OnContinentNameChanged();
    partial void OnLatitudeChanging(System.Nullable<double> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<double> value);
    partial void OnLongitudeChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    #endregion
		
		public Airport()
		{
			this._Continent = default(EntityRef<Continent>);
			this._Country = default(EntityRef<Country>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFriendlyFormat", DbType="VarChar(250)")]
		public string NameFriendlyFormat
		{
			get
			{
				return this._NameFriendlyFormat;
			}
			set
			{
				if ((this._NameFriendlyFormat != value))
				{
					this.OnNameFriendlyFormatChanging(value);
					this.SendPropertyChanging();
					this._NameFriendlyFormat = value;
					this.SendPropertyChanged("NameFriendlyFormat");
					this.OnNameFriendlyFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrettyUrl", DbType="VarChar(250)")]
		public string PrettyUrl
		{
			get
			{
				return this._PrettyUrl;
			}
			set
			{
				if ((this._PrettyUrl != value))
				{
					this.OnPrettyUrlChanging(value);
					this.SendPropertyChanging();
					this._PrettyUrl = value;
					this.SendPropertyChanged("PrettyUrl");
					this.OnPrettyUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrettyUrlFriendlyFormat", DbType="VarChar(250)")]
		public string PrettyUrlFriendlyFormat
		{
			get
			{
				return this._PrettyUrlFriendlyFormat;
			}
			set
			{
				if ((this._PrettyUrlFriendlyFormat != value))
				{
					this.OnPrettyUrlFriendlyFormatChanging(value);
					this.SendPropertyChanging();
					this._PrettyUrlFriendlyFormat = value;
					this.SendPropertyChanged("PrettyUrlFriendlyFormat");
					this.OnPrettyUrlFriendlyFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(3)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int")]
		public System.Nullable<int> CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="VarChar(100)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContinentID", DbType="Int")]
		public System.Nullable<int> ContinentID
		{
			get
			{
				return this._ContinentID;
			}
			set
			{
				if ((this._ContinentID != value))
				{
					if (this._Continent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContinentIDChanging(value);
					this.SendPropertyChanging();
					this._ContinentID = value;
					this.SendPropertyChanged("ContinentID");
					this.OnContinentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContinentName", DbType="VarChar(100)")]
		public string ContinentName
		{
			get
			{
				return this._ContinentName;
			}
			set
			{
				if ((this._ContinentName != value))
				{
					this.OnContinentNameChanging(value);
					this.SendPropertyChanging();
					this._ContinentName = value;
					this.SendPropertyChanged("ContinentName");
					this.OnContinentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float")]
		public System.Nullable<double> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float")]
		public System.Nullable<double> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", CanBeNull=false)]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Continent_Airport", Storage="_Continent", ThisKey="ContinentID", OtherKey="ID", IsForeignKey=true)]
		public Continent Continent
		{
			get
			{
				return this._Continent.Entity;
			}
			set
			{
				Continent previousValue = this._Continent.Entity;
				if (((previousValue != value) 
							|| (this._Continent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Continent.Entity = null;
						previousValue.Airports.Remove(this);
					}
					this._Continent.Entity = value;
					if ((value != null))
					{
						value.Airports.Add(this);
						this._ContinentID = value.ID;
					}
					else
					{
						this._ContinentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Continent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Airport", Storage="_Country", ThisKey="CountryID", OtherKey="ID", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.Airports.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.Airports.Add(this);
						this._CountryID = value.ID;
					}
					else
					{
						this._CountryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReviewUsefulness")]
	public partial class ReviewUsefulness : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _LinkResortUserID;
		
		private bool _IsUseful;
		
		private int _UserID;
		
		private EntitySet<LinkResortUser> _LinkResortUsers;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLinkResortUserIDChanging(int value);
    partial void OnLinkResortUserIDChanged();
    partial void OnIsUsefulChanging(bool value);
    partial void OnIsUsefulChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    #endregion
		
		public ReviewUsefulness()
		{
			this._LinkResortUsers = new EntitySet<LinkResortUser>(new Action<LinkResortUser>(this.attach_LinkResortUsers), new Action<LinkResortUser>(this.detach_LinkResortUsers));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkResortUserID", DbType="Int NOT NULL")]
		public int LinkResortUserID
		{
			get
			{
				return this._LinkResortUserID;
			}
			set
			{
				if ((this._LinkResortUserID != value))
				{
					this.OnLinkResortUserIDChanging(value);
					this.SendPropertyChanging();
					this._LinkResortUserID = value;
					this.SendPropertyChanged("LinkResortUserID");
					this.OnLinkResortUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUseful", DbType="Bit NOT NULL")]
		public bool IsUseful
		{
			get
			{
				return this._IsUseful;
			}
			set
			{
				if ((this._IsUseful != value))
				{
					this.OnIsUsefulChanging(value);
					this.SendPropertyChanging();
					this._IsUseful = value;
					this.SendPropertyChanged("IsUseful");
					this.OnIsUsefulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReviewUsefulness_LinkResortUser", Storage="_LinkResortUsers", ThisKey="LinkResortUserID", OtherKey="ID")]
		public EntitySet<LinkResortUser> LinkResortUsers
		{
			get
			{
				return this._LinkResortUsers;
			}
			set
			{
				this._LinkResortUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ReviewUsefulness", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ReviewUsefulnesses.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ReviewUsefulnesses.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LinkResortUsers(LinkResortUser entity)
		{
			this.SendPropertyChanging();
			entity.ReviewUsefulness = this;
		}
		
		private void detach_LinkResortUsers(LinkResortUser entity)
		{
			this.SendPropertyChanging();
			entity.ReviewUsefulness = null;
		}
	}
}
#pragma warning restore 1591
